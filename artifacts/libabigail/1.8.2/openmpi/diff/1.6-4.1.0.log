ELF SONAME changed
Functions changes summary: 2075 Removed, 0 Changed, 1 Added functions
Variables changes summary: 879 Removed, 1 Changed (11 filtered out), 2 Added variables
Function symbols changes summary: 157 Removed, 1445 Added function symbols not referenced by debug info
Variable symbols changes summary: 0 Removed, 295 Added variable symbols not referenced by debug info

SONAME changed from 'libmpi.so.1' to 'libmpi.so.40'

2075 Removed functions:

  [D] 'function void ADIOI_NFS_SetInfo(ADIO_File, MPI_Info, int*)'    {ADIOI_NFS_SetInfo}
  [D] 'function void ADIOI_TESTFS_Get_shared_fp(ADIO_File, int, ADIO_Offset*, int*)'    {ADIOI_TESTFS_Get_shared_fp}
  [D] 'function void ADIOI_TESTFS_Set_shared_fp(ADIO_File, ADIO_Offset, int*)'    {ADIOI_TESTFS_Set_shared_fp}
  [D] 'function void* MPIR_Breakpoint()'    {MPIR_Breakpoint}
  [D] 'function int _opal__evsignal_restore_handler(opal_event_base*, int)'    {_opal__evsignal_restore_handler}
  [D] 'function int _opal__evsignal_set_handler(opal_event_base*, int, void (int)*)'    {_opal__evsignal_set_handler}
  [D] 'function void btl_sm_process_pending_sends(mca_btl_base_endpoint_t*)'    {btl_sm_process_pending_sends}
  [D] 'function YY_BUFFER_STATE carto_file__create_buffer(FILE*, int)'    {carto_file__create_buffer}
  [D] 'function void carto_file__delete_buffer(YY_BUFFER_STATE)'    {carto_file__delete_buffer}
  [D] 'function void carto_file__flush_buffer(YY_BUFFER_STATE)'    {carto_file__flush_buffer}
  [D] 'function YY_BUFFER_STATE carto_file__scan_buffer(char*, yy_size_t)'    {carto_file__scan_buffer}
  [D] 'function YY_BUFFER_STATE carto_file__scan_bytes(const char*, int)'    {carto_file__scan_bytes}
  [D] 'function YY_BUFFER_STATE carto_file__scan_string(const char*)'    {carto_file__scan_string}
  [D] 'function void carto_file__switch_to_buffer(YY_BUFFER_STATE)'    {carto_file__switch_to_buffer}
  [D] 'function void* carto_file_alloc(yy_size_t)'    {carto_file_alloc}
  [D] 'function void carto_file_free(void*)'    {carto_file_free}
  [D] 'function int carto_file_get_debug()'    {carto_file_get_debug}
  [D] 'function FILE* carto_file_get_in()'    {carto_file_get_in}
  [D] 'function int carto_file_get_leng()'    {carto_file_get_leng}
  [D] 'function int carto_file_get_lineno()'    {carto_file_get_lineno}
  [D] 'function FILE* carto_file_get_out()'    {carto_file_get_out}
  [D] 'function char* carto_file_get_text()'    {carto_file_get_text}
  [D] 'function int carto_file_lex()'    {carto_file_lex}
  [D] 'function int carto_file_lex_destroy()'    {carto_file_lex_destroy}
  [D] 'function void carto_file_pop_buffer_state()'    {carto_file_pop_buffer_state}
  [D] 'function void carto_file_push_buffer_state(YY_BUFFER_STATE)'    {carto_file_push_buffer_state}
  [D] 'function void* carto_file_realloc(void*, yy_size_t)'    {carto_file_realloc}
  [D] 'function void carto_file_restart(FILE*)'    {carto_file_restart}
  [D] 'function void carto_file_set_debug(int)'    {carto_file_set_debug}
  [D] 'function void carto_file_set_in(FILE*)'    {carto_file_set_in}
  [D] 'function void carto_file_set_lineno(int)'    {carto_file_set_lineno}
  [D] 'function void carto_file_set_out(FILE*)'    {carto_file_set_out}
  [D] 'function int carto_file_wrap()'    {carto_file_wrap}
  [D] 'function const char* evutil_getenv(const char*)'    {evutil_getenv}
  [D] 'function int evutil_snprintf(char*, size_t, const char*, ...)'    {evutil_snprintf}
  [D] 'function int64_t evutil_strtoll(const char*, char**, int)'    {evutil_strtoll}
  [D] 'function int evutil_vsnprintf(char*, size_t, const char*, __va_list_tag*)'    {evutil_vsnprintf}
  [D] 'function int mca_allocator_base_close()'    {mca_allocator_base_close}
  [D] 'function int mca_allocator_base_open()'    {mca_allocator_base_open}
  [D] 'function void* mca_allocator_basic_alloc(mca_allocator_base_module_t*, size_t, size_t, mca_mpool_base_registration_t**)'    {mca_allocator_basic_alloc}
  [D] 'function int mca_allocator_basic_compact(mca_allocator_base_module_t*)'    {mca_allocator_basic_compact}
  [D] 'function mca_allocator_base_module_t* mca_allocator_basic_component_init(bool, mca_allocator_base_component_segment_alloc_fn_t, mca_allocator_base_component_segment_free_fn_t, mca_mpool_base_module_t*)'    {mca_allocator_basic_component_init}
  [D] 'function int mca_allocator_basic_component_open()'    {mca_allocator_basic_component_open}
  [D] 'function int mca_allocator_basic_finalize(mca_allocator_base_module_t*)'    {mca_allocator_basic_finalize}
  [D] 'function void mca_allocator_basic_free(mca_allocator_base_module_t*, void*)'    {mca_allocator_basic_free}
  [D] 'function void* mca_allocator_basic_realloc(mca_allocator_base_module_t*, void*, size_t, mca_mpool_base_registration_t**)'    {mca_allocator_basic_realloc}
  [D] 'function void* mca_allocator_bucket_alloc(mca_allocator_base_module_t*, size_t, mca_mpool_base_registration_t**)'    {mca_allocator_bucket_alloc}
  [D] 'function void* mca_allocator_bucket_alloc_align(mca_allocator_base_module_t*, size_t, size_t, mca_mpool_base_registration_t**)'    {mca_allocator_bucket_alloc_align}
  [D] 'function void* mca_allocator_bucket_alloc_wrapper(mca_allocator_base_module_t*, size_t, size_t, mca_mpool_base_registration_t**)'    {mca_allocator_bucket_alloc_wrapper}
  [D] 'function int mca_allocator_bucket_cleanup(mca_allocator_base_module_t*)'    {mca_allocator_bucket_cleanup}
  [D] 'function int mca_allocator_bucket_finalize(mca_allocator_base_module_t*)'    {mca_allocator_bucket_finalize}
  [D] 'function void mca_allocator_bucket_free(mca_allocator_base_module_t*, void*)'    {mca_allocator_bucket_free}
  [D] 'function mca_allocator_bucket_t* mca_allocator_bucket_init(mca_allocator_base_module_t*, int, mca_allocator_base_component_segment_alloc_fn_t, mca_allocator_base_component_segment_free_fn_t)'    {mca_allocator_bucket_init}
  [D] 'function int mca_allocator_bucket_module_close()'    {mca_allocator_bucket_module_close}
  [D] 'function mca_allocator_base_module_t* mca_allocator_bucket_module_init(bool, mca_allocator_base_component_segment_alloc_fn_t, mca_allocator_base_component_segment_free_fn_t, mca_mpool_base_module_t*)'    {mca_allocator_bucket_module_init}
  [D] 'function int mca_allocator_bucket_module_open()'    {mca_allocator_bucket_module_open}
  [D] 'function void* mca_allocator_bucket_realloc(mca_allocator_base_module_t*, void*, size_t, mca_mpool_base_registration_t**)'    {mca_allocator_bucket_realloc}
  [D] 'function mca_allocator_base_component_t* mca_allocator_component_lookup(const char*)'    {mca_allocator_component_lookup}
  [D] 'function int mca_base_close()'    {mca_base_close}
  [D] 'function int mca_base_cmd_line_process_args(opal_cmd_line_t*, char***, char***)'    {mca_base_cmd_line_process_args}
  [D] 'function int mca_base_cmd_line_setup(opal_cmd_line_t*)'    {mca_base_cmd_line_setup}
  [D] 'function int mca_base_component_compare(const mca_base_component_t*, const mca_base_component_t*)'    {mca_base_component_compare}
  [D] 'function int mca_base_component_compare_priority(mca_base_component_priority_list_item_t*, mca_base_component_priority_list_item_t*)'    {mca_base_component_compare_priority}
  [D] 'function int mca_base_component_compatible(const mca_base_component_t*, const mca_base_component_t*)'    {mca_base_component_compatible}
  [D] 'function int mca_base_component_find(const char*, const char*, const mca_base_component_t**, char**, bool, opal_list_t*, bool)'    {mca_base_component_find}
  [D] 'function int mca_base_component_find_finalize()'    {mca_base_component_find_finalize}
  [D] 'function void mca_base_component_repository_finalize()'    {mca_base_component_repository_finalize}
  [D] 'function int mca_base_component_repository_init()'    {mca_base_component_repository_init}
  [D] 'function int mca_base_component_repository_link(const char*, const char*, const char*, const char*)'    {mca_base_component_repository_link}
  [D] 'function void mca_base_component_repository_release(const mca_base_component_t*)'    {mca_base_component_repository_release}
  [D] 'function int mca_base_component_repository_retain(char*, lt_dlhandle, const mca_base_component_t*)'    {mca_base_component_repository_retain}
  [D] 'function int mca_base_component_repository_retain_component(const char*, const char*)'    {mca_base_component_repository_retain_component}
  [D] 'function char* mca_base_component_to_string(const mca_base_component_t*)'    {mca_base_component_to_string}
  [D] 'function int mca_base_components_close(int, opal_list_t*, const mca_base_component_t*)'    {mca_base_components_close}
  [D] 'function int mca_base_components_open(const char*, int, const mca_base_component_t**, opal_list_t*, bool)'    {mca_base_components_open}
  [D] 'function int mca_base_is_component_required(opal_list_t*, mca_base_component_t*, bool, bool*)'    {mca_base_is_component_required}
  [D] 'function int mca_base_open()'    {mca_base_open}
  [D] 'function int mca_base_param_build_env(char***, int*, bool)'    {mca_base_param_build_env}
  [D] 'function int mca_base_param_check_exclusive_string(const char*, const char*, const char*, const char*, const char*, const char*)'    {mca_base_param_check_exclusive_string}
  [D] 'function int mca_base_param_deregister(int)'    {mca_base_param_deregister}
  [D] 'function int mca_base_param_dump(opal_list_t**, bool)'    {mca_base_param_dump}
  [D] 'function int mca_base_param_dump_release(opal_list_t*)'    {mca_base_param_dump_release}
  [D] 'function char* mca_base_param_env_var(const char*)'    {mca_base_param_env_var}
  [D] 'function char* mca_base_param_environ_variable(const char*, const char*, const char*)'    {mca_base_param_environ_variable}
  [D] 'function int mca_base_param_finalize()'    {mca_base_param_finalize}
  [D] 'function int mca_base_param_find(const char*, const char*, const char*)'    {mca_base_param_find}
  [D] 'function int mca_base_param_find_int(const mca_base_component_t*, const char*, char**, int*)'    {mca_base_param_find_int}
  [D] 'function int mca_base_param_find_int_name(const char*, const char*, char**, int*)'    {mca_base_param_find_int_name}
  [D] 'function int mca_base_param_find_string(const mca_base_component_t*, const char*, char**, char**)'    {mca_base_param_find_string}
  [D] 'function int mca_base_param_find_string_name(const char*, const char*, char**, char**)'    {mca_base_param_find_string_name}
  [D] 'function int mca_base_param_init()'    {mca_base_param_init}
  [D] 'function int mca_base_param_lookup_int(int, int*)'    {mca_base_param_lookup_int}
  [D] 'function int mca_base_param_lookup_source(int, mca_base_param_source_t*, char**)'    {mca_base_param_lookup_source}
  [D] 'function int mca_base_param_lookup_string(int, char**)'    {mca_base_param_lookup_string}
  [D] 'function int mca_base_param_recache_files(bool)'    {mca_base_param_recache_files}
  [D] 'function int mca_base_param_reg_int(const mca_base_component_t*, const char*, const char*, bool, bool, int, int*)'    {mca_base_param_reg_int}
  [D] 'function int mca_base_param_reg_int_name(const char*, const char*, const char*, bool, bool, int, int*)'    {mca_base_param_reg_int_name}
  [D] 'function int mca_base_param_reg_string(const mca_base_component_t*, const char*, const char*, bool, bool, const char*, char**)'    {mca_base_param_reg_string}
  [D] 'function int mca_base_param_reg_string_name(const char*, const char*, const char*, bool, bool, const char*, char**)'    {mca_base_param_reg_string_name}
  [D] 'function int mca_base_param_reg_syn(int, const mca_base_component_t*, const char*, bool)'    {mca_base_param_reg_syn}
  [D] 'function int mca_base_param_reg_syn_name(int, const char*, const char*, bool)'    {mca_base_param_reg_syn_name}
  [D] 'function int mca_base_param_register_int(const char*, const char*, const char*, const char*, int)'    {mca_base_param_register_int}
  [D] 'function int mca_base_param_register_string(const char*, const char*, const char*, const char*, const char*)'    {mca_base_param_register_string}
  [D] 'function int mca_base_param_set_int(int, int)'    {mca_base_param_set_int}
  [D] 'function int mca_base_param_set_internal(int, bool)'    {mca_base_param_set_internal}
  [D] 'function int mca_base_param_set_string(int, char*)'    {mca_base_param_set_string}
  [D] 'function int mca_base_param_unset(int)'    {mca_base_param_unset}
  [D] 'function int mca_base_parse_paramfile(const char*)'    {mca_base_parse_paramfile}
  [D] 'function int mca_base_select(const char*, int, opal_list_t*, mca_base_module_t**, mca_base_component_t**)'    {mca_base_select}
  [D] 'function int mca_bml_base_close()'    {mca_bml_base_close}
  [D] 'function int mca_bml_base_open()'    {mca_bml_base_open}
  [D] 'function int mca_btl_base_close()'    {mca_btl_base_close}
  [D] 'function void mca_btl_base_dump(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, int)'    {mca_btl_base_dump}
  [D] 'function int mca_btl_base_err(const char*, ...)'    {mca_btl_base_err}
  [D] 'function void mca_btl_base_error_no_nics(const char*, const char*)'    {mca_btl_base_error_no_nics}
  [D] 'function int mca_btl_base_open()'    {mca_btl_base_open}
  [D] 'function int mca_btl_base_out(const char*, ...)'    {mca_btl_base_out}
  [D] 'function int mca_btl_base_param_register(mca_base_component_t*, mca_btl_base_module_t*)'    {mca_btl_base_param_register}
  [D] 'function int mca_btl_base_select(bool, bool)'    {mca_btl_base_select}
  [D] 'function int mca_btl_self_add_procs(mca_btl_base_module_t*, size_t, ompi_proc_t**, mca_btl_base_endpoint_t**, opal_bitmap_t*)'    {mca_btl_self_add_procs}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_self_alloc(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, uint8_t, size_t, uint32_t)'    {mca_btl_self_alloc}
  [D] 'function int mca_btl_self_component_close()'    {mca_btl_self_component_close}
  [D] 'function mca_btl_base_module_t** mca_btl_self_component_init(int*, bool, bool)'    {mca_btl_self_component_init}
  [D] 'function int mca_btl_self_component_open()'    {mca_btl_self_component_open}
  [D] 'function int mca_btl_self_del_procs(mca_btl_base_module_t*, size_t, ompi_proc_t**, mca_btl_base_endpoint_t**)'    {mca_btl_self_del_procs}
  [D] 'function int mca_btl_self_finalize(mca_btl_base_module_t*)'    {mca_btl_self_finalize}
  [D] 'function int mca_btl_self_free(mca_btl_base_module_t*, mca_btl_base_descriptor_t*)'    {mca_btl_self_free}
  [D] 'function int mca_btl_self_ft_event(int)'    {mca_btl_self_ft_event}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_self_prepare_dst(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_mpool_base_registration_t*, opal_convertor_t*, uint8_t, size_t, size_t*, uint32_t)'    {mca_btl_self_prepare_dst}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_self_prepare_src(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_mpool_base_registration_t*, opal_convertor_t*, uint8_t, size_t, size_t*, uint32_t)'    {mca_btl_self_prepare_src}
  [D] 'function int mca_btl_self_rdma(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*)'    {mca_btl_self_rdma}
  [D] 'function int mca_btl_self_send(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*, mca_btl_base_tag_t)'    {mca_btl_self_send}
  [D] 'function int mca_btl_sm_add_procs(mca_btl_base_module_t*, size_t, ompi_proc_t**, mca_btl_base_endpoint_t**, opal_bitmap_t*)'    {mca_btl_sm_add_procs}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_sm_alloc(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, uint8_t, size_t, uint32_t)'    {mca_btl_sm_alloc}
  [D] 'function int mca_btl_sm_component_close()'    {mca_btl_sm_component_close}
  [D] 'function mca_btl_base_module_t** mca_btl_sm_component_init(int*, bool, bool)'    {mca_btl_sm_component_init}
  [D] 'function int mca_btl_sm_component_open()'    {mca_btl_sm_component_open}
  [D] 'function int mca_btl_sm_component_progress()'    {mca_btl_sm_component_progress}
  [D] 'function int mca_btl_sm_del_procs(mca_btl_base_module_t*, size_t, ompi_proc_t**, mca_btl_base_endpoint_t**)'    {mca_btl_sm_del_procs}
  [D] 'function int mca_btl_sm_finalize(mca_btl_base_module_t*)'    {mca_btl_sm_finalize}
  [D] 'function int mca_btl_sm_free(mca_btl_base_module_t*, mca_btl_base_descriptor_t*)'    {mca_btl_sm_free}
  [D] 'function int mca_btl_sm_ft_event(int)'    {mca_btl_sm_ft_event}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_sm_prepare_src(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_mpool_base_registration_t*, opal_convertor_t*, uint8_t, size_t, size_t*, uint32_t)'    {mca_btl_sm_prepare_src}
  [D] 'function int mca_btl_sm_register_error_cb(mca_btl_base_module_t*, mca_btl_base_module_error_cb_fn_t)'    {mca_btl_sm_register_error_cb}
  [D] 'function int mca_btl_sm_send(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*, mca_btl_base_tag_t)'    {mca_btl_sm_send}
  [D] 'function int mca_btl_sm_sendi(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, opal_convertor_t*, void*, size_t, size_t, uint8_t, uint32_t, mca_btl_base_tag_t, mca_btl_base_descriptor_t**)'    {mca_btl_sm_sendi}
  [D] 'function int mca_btl_tcp_add_procs(mca_btl_base_module_t*, size_t, ompi_proc_t**, mca_btl_base_endpoint_t**, opal_bitmap_t*)'    {mca_btl_tcp_add_procs}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_tcp_alloc(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, uint8_t, size_t, uint32_t)'    {mca_btl_tcp_alloc}
  [D] 'function int mca_btl_tcp_component_control(int, void*, size_t)'    {mca_btl_tcp_component_control}
  [D] 'function mca_btl_base_module_t** mca_btl_tcp_component_init(int*, bool, bool)'    {mca_btl_tcp_component_init}
  [D] 'function int mca_btl_tcp_del_procs(mca_btl_base_module_t*, size_t, ompi_proc_t**, mca_btl_base_endpoint_t**)'    {mca_btl_tcp_del_procs}
  [D] 'function bool mca_btl_tcp_endpoint_accept(mca_btl_base_endpoint_t*, sockaddr*, int)'    {mca_btl_tcp_endpoint_accept}
  [D] 'function void mca_btl_tcp_endpoint_close(mca_btl_base_endpoint_t*)'    {mca_btl_tcp_endpoint_close}
  [D] 'function int mca_btl_tcp_endpoint_send(mca_btl_base_endpoint_t*, mca_btl_tcp_frag_t*)'    {mca_btl_tcp_endpoint_send}
  [D] 'function int mca_btl_tcp_finalize(mca_btl_base_module_t*)'    {mca_btl_tcp_finalize}
  [D] 'function bool mca_btl_tcp_frag_recv(mca_btl_tcp_frag_t*, int)'    {mca_btl_tcp_frag_recv}
  [D] 'function bool mca_btl_tcp_frag_send(mca_btl_tcp_frag_t*, int)'    {mca_btl_tcp_frag_send}
  [D] 'function int mca_btl_tcp_free(mca_btl_base_module_t*, mca_btl_base_descriptor_t*)'    {mca_btl_tcp_free}
  [D] 'function int mca_btl_tcp_ft_event(int)'    {mca_btl_tcp_ft_event}
  [D] 'function int mca_btl_tcp_get(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*)'    {mca_btl_tcp_get}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_tcp_prepare_dst(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_mpool_base_registration_t*, opal_convertor_t*, uint8_t, size_t, size_t*, uint32_t)'    {mca_btl_tcp_prepare_dst}
  [D] 'function mca_btl_base_descriptor_t* mca_btl_tcp_prepare_src(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_mpool_base_registration_t*, opal_convertor_t*, uint8_t, size_t, size_t*, uint32_t)'    {mca_btl_tcp_prepare_src}
  [D] 'function bool mca_btl_tcp_proc_accept(mca_btl_tcp_proc_t*, sockaddr*, int)'    {mca_btl_tcp_proc_accept}
  [D] 'function mca_btl_tcp_proc_t* mca_btl_tcp_proc_create(ompi_proc_t*)'    {mca_btl_tcp_proc_create}
  [D] 'function int mca_btl_tcp_proc_insert(mca_btl_tcp_proc_t*, mca_btl_base_endpoint_t*)'    {mca_btl_tcp_proc_insert}
  [D] 'function mca_btl_tcp_proc_t* mca_btl_tcp_proc_lookup(const orte_process_name_t*)'    {mca_btl_tcp_proc_lookup}
  [D] 'function int mca_btl_tcp_proc_remove(mca_btl_tcp_proc_t*, mca_btl_base_endpoint_t*)'    {mca_btl_tcp_proc_remove}
  [D] 'function bool mca_btl_tcp_proc_tosocks(mca_btl_tcp_addr_t*, sockaddr_storage*)'    {mca_btl_tcp_proc_tosocks}
  [D] 'function int mca_btl_tcp_put(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*)'    {mca_btl_tcp_put}
  [D] 'function int mca_btl_tcp_send(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*, mca_btl_base_tag_t)'    {mca_btl_tcp_send}
  [D] 'function void mca_btl_tcp_set_socket_options(int)'    {mca_btl_tcp_set_socket_options}
  [D] 'function int mca_coll_base_close()'    {mca_coll_base_close}
  [D] 'function int mca_coll_base_open()'    {mca_coll_base_open}
  [D] 'function int mca_coll_basic_allgather_intra(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_allgather_intra}
  [D] 'function int mca_coll_basic_allgatherv_intra(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_allgatherv_intra}
  [D] 'function int mca_coll_basic_alltoall_intra(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_alltoall_intra}
  [D] 'function int mca_coll_basic_alltoallv_intra(void*, int*, int*, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_alltoallv_intra}
  [D] 'function int mca_coll_basic_barrier_intra_lin(ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_barrier_intra_lin}
  [D] 'function int mca_coll_basic_bcast_lin_intra(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_bcast_lin_intra}
  [D] 'function int mca_coll_basic_gather_intra(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_gather_intra}
  [D] 'function int mca_coll_basic_reduce_lin_intra(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_reduce_lin_intra}
  [D] 'function int mca_coll_basic_scatter_intra(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_basic_scatter_intra}
  [D] 'function int mca_coll_hierarch_allgather_tmp(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*)'    {mca_coll_hierarch_allgather_tmp}
  [D] 'function int mca_coll_hierarch_allreduce_intra(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_hierarch_allreduce_intra}
  [D] 'function int mca_coll_hierarch_allreduce_tmp(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*)'    {mca_coll_hierarch_allreduce_tmp}
  [D] 'function int mca_coll_hierarch_barrier_intra(ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_hierarch_barrier_intra}
  [D] 'function int mca_coll_hierarch_bcast_intra(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_hierarch_bcast_intra}
  [D] 'function int mca_coll_hierarch_bcast_tmp(void*, int, ompi_datatype_t*, int, ompi_communicator_t*)'    {mca_coll_hierarch_bcast_tmp}
  [D] 'function mca_coll_base_module_t* mca_coll_hierarch_comm_query(ompi_communicator_t*, int*)'    {mca_coll_hierarch_comm_query}
  [D] 'function int mca_coll_hierarch_ft_event(int)'    {mca_coll_hierarch_ft_event}
  [D] 'function int mca_coll_hierarch_gather_tmp(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*)'    {mca_coll_hierarch_gather_tmp}
  [D] 'function int mca_coll_hierarch_get_all_lleaders(int, mca_coll_hierarch_module_t*, mca_coll_hierarch_llead_t*, int)'    {mca_coll_hierarch_get_all_lleaders}
  [D] 'function ompi_communicator_t* mca_coll_hierarch_get_llcomm(int, mca_coll_hierarch_module_t*, int*, int*)'    {mca_coll_hierarch_get_llcomm}
  [D] 'function int mca_coll_hierarch_get_llr(mca_coll_hierarch_module_t*)'    {mca_coll_hierarch_get_llr}
  [D] 'function int mca_coll_hierarch_init_query(bool, bool)'    {mca_coll_hierarch_init_query}
  [D] 'function int mca_coll_hierarch_module_enable(mca_coll_base_module_t*, ompi_communicator_t*)'    {mca_coll_hierarch_module_enable}
  [D] 'function int mca_coll_hierarch_reduce_intra(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {mca_coll_hierarch_reduce_intra}
  [D] 'function int mca_coll_hierarch_reduce_tmp(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*)'    {mca_coll_hierarch_reduce_tmp}
  [D] 'function int mca_common_sm_fini(mca_common_sm_module_t*)'    {mca_common_sm_fini}
  [D] 'function mca_common_sm_module_t* mca_common_sm_init(ompi_proc_t**, size_t, size_t, char*, size_t, size_t)'    {mca_common_sm_init}
  [D] 'function mca_common_sm_module_t* mca_common_sm_init_group(ompi_group_t*, size_t, char*, size_t, size_t)'    {mca_common_sm_init_group}
  [D] 'function int mca_common_sm_rml_info_bcast(opal_shmem_ds_t*, ompi_proc_t**, size_t, int, bool, char*)'    {mca_common_sm_rml_info_bcast}
  [D] 'function void* mca_common_sm_seg_alloc(mca_mpool_base_module_t*, size_t*, mca_mpool_base_registration_t**)'    {mca_common_sm_seg_alloc}
  [D] 'function int mca_io_base_close()'    {mca_io_base_close}
  [D] 'function int mca_io_base_open()'    {mca_io_base_open}
  [D] 'function int mca_io_romio_dist_MPI_File_get_errhandler(mca_io_romio_dist_MPI_File, MPI_Errhandler*)'    {mca_io_romio_dist_MPI_File_get_errhandler}
  [D] 'function int mca_io_romio_dist_MPI_File_set_errhandler(mca_io_romio_dist_MPI_File, MPI_Errhandler)'    {mca_io_romio_dist_MPI_File_set_errhandler}
  [D] 'function int mca_io_romio_file_close(ompi_file_t*)'    {mca_io_romio_file_close}
  [D] 'function int mca_io_romio_file_get_amode(ompi_file_t*, int*)'    {mca_io_romio_file_get_amode}
  [D] 'function int mca_io_romio_file_get_atomicity(ompi_file_t*, int*)'    {mca_io_romio_file_get_atomicity}
  [D] 'function int mca_io_romio_file_get_byte_offset(ompi_file_t*, MPI_Offset, MPI_Offset*)'    {mca_io_romio_file_get_byte_offset}
  [D] 'function int mca_io_romio_file_get_info(ompi_file_t*, ompi_info_t**)'    {mca_io_romio_file_get_info}
  [D] 'function int mca_io_romio_file_get_position(ompi_file_t*, MPI_Offset*)'    {mca_io_romio_file_get_position}
  [D] 'function int mca_io_romio_file_get_position_shared(ompi_file_t*, MPI_Offset*)'    {mca_io_romio_file_get_position_shared}
  [D] 'function int mca_io_romio_file_get_size(ompi_file_t*, MPI_Offset*)'    {mca_io_romio_file_get_size}
  [D] 'function int mca_io_romio_file_get_type_extent(ompi_file_t*, ompi_datatype_t*, MPI_Aint*)'    {mca_io_romio_file_get_type_extent}
  [D] 'function int mca_io_romio_file_get_view(ompi_file_t*, MPI_Offset*, ompi_datatype_t**, ompi_datatype_t**, char*)'    {mca_io_romio_file_get_view}
  [D] 'function int mca_io_romio_file_iread(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_request_t**)'    {mca_io_romio_file_iread}
  [D] 'function int mca_io_romio_file_iread_at(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*, ompi_request_t**)'    {mca_io_romio_file_iread_at}
  [D] 'function int mca_io_romio_file_iread_shared(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_request_t**)'    {mca_io_romio_file_iread_shared}
  [D] 'function int mca_io_romio_file_iwrite(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_request_t**)'    {mca_io_romio_file_iwrite}
  [D] 'function int mca_io_romio_file_iwrite_at(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*, ompi_request_t**)'    {mca_io_romio_file_iwrite_at}
  [D] 'function int mca_io_romio_file_iwrite_shared(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_request_t**)'    {mca_io_romio_file_iwrite_shared}
  [D] 'function int mca_io_romio_file_open(ompi_communicator_t*, char*, int, ompi_info_t*, ompi_file_t*)'    {mca_io_romio_file_open}
  [D] 'function int mca_io_romio_file_preallocate(ompi_file_t*, MPI_Offset)'    {mca_io_romio_file_preallocate}
  [D] 'function int mca_io_romio_file_read(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_read}
  [D] 'function int mca_io_romio_file_read_all(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_read_all}
  [D] 'function int mca_io_romio_file_read_all_begin(ompi_file_t*, void*, int, ompi_datatype_t*)'    {mca_io_romio_file_read_all_begin}
  [D] 'function int mca_io_romio_file_read_all_end(ompi_file_t*, void*, ompi_status_public_t*)'    {mca_io_romio_file_read_all_end}
  [D] 'function int mca_io_romio_file_read_at(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_read_at}
  [D] 'function int mca_io_romio_file_read_at_all(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_read_at_all}
  [D] 'function int mca_io_romio_file_read_at_all_begin(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*)'    {mca_io_romio_file_read_at_all_begin}
  [D] 'function int mca_io_romio_file_read_at_all_end(ompi_file_t*, void*, ompi_status_public_t*)'    {mca_io_romio_file_read_at_all_end}
  [D] 'function int mca_io_romio_file_read_ordered(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_read_ordered}
  [D] 'function int mca_io_romio_file_read_ordered_begin(ompi_file_t*, void*, int, ompi_datatype_t*)'    {mca_io_romio_file_read_ordered_begin}
  [D] 'function int mca_io_romio_file_read_ordered_end(ompi_file_t*, void*, ompi_status_public_t*)'    {mca_io_romio_file_read_ordered_end}
  [D] 'function int mca_io_romio_file_read_shared(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_read_shared}
  [D] 'function int mca_io_romio_file_seek(ompi_file_t*, MPI_Offset, int)'    {mca_io_romio_file_seek}
  [D] 'function int mca_io_romio_file_seek_shared(ompi_file_t*, MPI_Offset, int)'    {mca_io_romio_file_seek_shared}
  [D] 'function int mca_io_romio_file_set_atomicity(ompi_file_t*, int)'    {mca_io_romio_file_set_atomicity}
  [D] 'function int mca_io_romio_file_set_info(ompi_file_t*, ompi_info_t*)'    {mca_io_romio_file_set_info}
  [D] 'function int mca_io_romio_file_set_size(ompi_file_t*, MPI_Offset)'    {mca_io_romio_file_set_size}
  [D] 'function int mca_io_romio_file_set_view(ompi_file_t*, MPI_Offset, ompi_datatype_t*, ompi_datatype_t*, char*, ompi_info_t*)'    {mca_io_romio_file_set_view}
  [D] 'function int mca_io_romio_file_sync(ompi_file_t*)'    {mca_io_romio_file_sync}
  [D] 'function int mca_io_romio_file_write(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_write}
  [D] 'function int mca_io_romio_file_write_all(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_write_all}
  [D] 'function int mca_io_romio_file_write_all_begin(ompi_file_t*, void*, int, ompi_datatype_t*)'    {mca_io_romio_file_write_all_begin}
  [D] 'function int mca_io_romio_file_write_all_end(ompi_file_t*, void*, ompi_status_public_t*)'    {mca_io_romio_file_write_all_end}
  [D] 'function int mca_io_romio_file_write_at(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_write_at}
  [D] 'function int mca_io_romio_file_write_at_all(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_write_at_all}
  [D] 'function int mca_io_romio_file_write_at_all_begin(ompi_file_t*, MPI_Offset, void*, int, ompi_datatype_t*)'    {mca_io_romio_file_write_at_all_begin}
  [D] 'function int mca_io_romio_file_write_at_all_end(ompi_file_t*, void*, ompi_status_public_t*)'    {mca_io_romio_file_write_at_all_end}
  [D] 'function int mca_io_romio_file_write_ordered(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_write_ordered}
  [D] 'function int mca_io_romio_file_write_ordered_begin(ompi_file_t*, void*, int, ompi_datatype_t*)'    {mca_io_romio_file_write_ordered_begin}
  [D] 'function int mca_io_romio_file_write_ordered_end(ompi_file_t*, void*, ompi_status_public_t*)'    {mca_io_romio_file_write_ordered_end}
  [D] 'function int mca_io_romio_file_write_shared(ompi_file_t*, void*, int, ompi_datatype_t*, ompi_status_public_t*)'    {mca_io_romio_file_write_shared}
  [D] 'function void* mca_mpool_base_alloc(size_t, ompi_info_t*)'    {mca_mpool_base_alloc}
  [D] 'function int mca_mpool_base_close()'    {mca_mpool_base_close}
  [D] 'function mca_mpool_base_component_t* mca_mpool_base_component_lookup(const char*)'    {mca_mpool_base_component_lookup}
  [D] 'function int mca_mpool_base_free(void*)'    {mca_mpool_base_free}
  [D] 'function int mca_mpool_base_init(bool, bool)'    {mca_mpool_base_init}
  [D] 'function void mca_mpool_base_mem_cb(void*, size_t, void*, bool)'    {mca_mpool_base_mem_cb}
  [D] 'function mca_mpool_base_module_t* mca_mpool_base_module_create(const char*, void*, mca_mpool_base_resources_t*)'    {mca_mpool_base_module_create}
  [D] 'function int mca_mpool_base_module_destroy(mca_mpool_base_module_t*)'    {mca_mpool_base_module_destroy}
  [D] 'function mca_mpool_base_module_t* mca_mpool_base_module_lookup(const char*)'    {mca_mpool_base_module_lookup}
  [D] 'function int mca_mpool_base_open()'    {mca_mpool_base_open}
  [D] 'function int mca_mpool_base_tree_delete(mca_mpool_base_tree_item_t*)'    {mca_mpool_base_tree_delete}
  [D] 'function mca_mpool_base_tree_item_t* mca_mpool_base_tree_find(void*)'    {mca_mpool_base_tree_find}
  [D] 'function int mca_mpool_base_tree_init()'    {mca_mpool_base_tree_init}
  [D] 'function int mca_mpool_base_tree_insert(mca_mpool_base_tree_item_t*)'    {mca_mpool_base_tree_insert}
  [D] 'function mca_mpool_base_tree_item_t* mca_mpool_base_tree_item_get()'    {mca_mpool_base_tree_item_get}
  [D] 'function void mca_mpool_base_tree_item_put(mca_mpool_base_tree_item_t*)'    {mca_mpool_base_tree_item_put}
  [D] 'function int mca_mpool_base_tree_node_compare(void*, void*)'    {mca_mpool_base_tree_node_compare}
  [D] 'function void mca_mpool_base_tree_print()'    {mca_mpool_base_tree_print}
  [D] 'function void mca_mpool_fake_finalize(mca_mpool_base_module_t*)'    {mca_mpool_fake_finalize}
  [D] 'function int mca_mpool_fake_ft_event(int)'    {mca_mpool_fake_ft_event}
  [D] 'function void mca_mpool_fake_module_init(mca_mpool_fake_module_t*)'    {mca_mpool_fake_module_init}
  [D] 'function int mca_mpool_fake_release_memory(mca_mpool_base_module_t*, void*, size_t)'    {mca_mpool_fake_release_memory}
  [D] 'function void* mca_mpool_rdma_alloc(mca_mpool_base_module_t*, size_t, size_t, uint32_t, mca_mpool_base_registration_t**)'    {mca_mpool_rdma_alloc}
  [D] 'function int mca_mpool_rdma_deregister(mca_mpool_base_module_t*, mca_mpool_base_registration_t*)'    {mca_mpool_rdma_deregister}
  [D] 'function void mca_mpool_rdma_finalize(mca_mpool_base_module_t*)'    {mca_mpool_rdma_finalize}
  [D] 'function int mca_mpool_rdma_find(mca_mpool_base_module_t*, void*, size_t, mca_mpool_base_registration_t**)'    {mca_mpool_rdma_find}
  [D] 'function void mca_mpool_rdma_free(mca_mpool_base_module_t*, void*, mca_mpool_base_registration_t*)'    {mca_mpool_rdma_free}
  [D] 'function int mca_mpool_rdma_ft_event(int)'    {mca_mpool_rdma_ft_event}
  [D] 'function void mca_mpool_rdma_module_init(mca_mpool_rdma_module_t*)'    {mca_mpool_rdma_module_init}
  [D] 'function void* mca_mpool_rdma_realloc(mca_mpool_base_module_t*, void*, size_t, mca_mpool_base_registration_t**)'    {mca_mpool_rdma_realloc}
  [D] 'function int mca_mpool_rdma_register(mca_mpool_base_module_t*, void*, size_t, uint32_t, mca_mpool_base_registration_t**)'    {mca_mpool_rdma_register}
  [D] 'function int mca_mpool_rdma_release_memory(mca_mpool_base_module_t*, void*, size_t)'    {mca_mpool_rdma_release_memory}
  [D] 'function void* mca_mpool_sm_alloc(mca_mpool_base_module_t*, size_t, size_t, uint32_t, mca_mpool_base_registration_t**)'    {mca_mpool_sm_alloc}
  [D] 'function void* mca_mpool_sm_base(mca_mpool_base_module_t*)'    {mca_mpool_sm_base}
  [D] 'function void mca_mpool_sm_free(mca_mpool_base_module_t*, void*, mca_mpool_base_registration_t*)'    {mca_mpool_sm_free}
  [D] 'function int mca_mpool_sm_ft_event(int)'    {mca_mpool_sm_ft_event}
  [D] 'function void mca_mpool_sm_module_init(mca_mpool_sm_module_t*)'    {mca_mpool_sm_module_init}
  [D] 'function void* mca_mpool_sm_realloc(mca_mpool_base_module_t*, void*, size_t, mca_mpool_base_registration_t**)'    {mca_mpool_sm_realloc}
  [D] 'function int mca_oob_base_close()'    {mca_oob_base_close}
  [D] 'function int mca_oob_base_init()'    {mca_oob_base_init}
  [D] 'function int mca_oob_base_module_init()'    {mca_oob_base_module_init}
  [D] 'function int mca_oob_base_open()'    {mca_oob_base_open}
  [D] 'function int mca_oob_tcp_addr_get_next(mca_oob_tcp_addr_t*, sockaddr*)'    {mca_oob_tcp_addr_get_next}
  [D] 'function int mca_oob_tcp_addr_insert(mca_oob_tcp_addr_t*, const sockaddr*)'    {mca_oob_tcp_addr_insert}
  [D] 'function mca_oob_t* mca_oob_tcp_component_init(int*)'    {mca_oob_tcp_component_init}
  [D] 'function int mca_oob_tcp_fini()'    {mca_oob_tcp_fini}
  [D] 'function int mca_oob_tcp_ft_event(int)'    {mca_oob_tcp_ft_event}
  [D] 'function char* mca_oob_tcp_get_addr()'    {mca_oob_tcp_get_addr}
  [D] 'function int mca_oob_tcp_get_new_name(orte_process_name_t*)'    {mca_oob_tcp_get_new_name}
  [D] 'function int mca_oob_tcp_init()'    {mca_oob_tcp_init}
  [D] 'function int mca_oob_tcp_msg_complete(mca_oob_tcp_msg_t*, orte_process_name_t*)'    {mca_oob_tcp_msg_complete}
  [D] 'function int mca_oob_tcp_msg_copy(mca_oob_tcp_msg_t*, iovec*, int)'    {mca_oob_tcp_msg_copy}
  [D] 'function mca_oob_tcp_msg_t* mca_oob_tcp_msg_match_post(orte_process_name_t*, int)'    {mca_oob_tcp_msg_match_post}
  [D] 'function mca_oob_tcp_msg_t* mca_oob_tcp_msg_match_recv(orte_process_name_t*, int)'    {mca_oob_tcp_msg_match_recv}
  [D] 'function void mca_oob_tcp_msg_recv_complete(mca_oob_tcp_msg_t*, mca_oob_tcp_peer_t*)'    {mca_oob_tcp_msg_recv_complete}
  [D] 'function bool mca_oob_tcp_msg_recv_handler(mca_oob_tcp_msg_t*, mca_oob_tcp_peer_t*)'    {mca_oob_tcp_msg_recv_handler}
  [D] 'function bool mca_oob_tcp_msg_send_handler(mca_oob_tcp_msg_t*, mca_oob_tcp_peer_t*)'    {mca_oob_tcp_msg_send_handler}
  [D] 'function int mca_oob_tcp_msg_timedwait(mca_oob_tcp_msg_t*, int*, timespec*)'    {mca_oob_tcp_msg_timedwait}
  [D] 'function int mca_oob_tcp_msg_wait(mca_oob_tcp_msg_t*, int*)'    {mca_oob_tcp_msg_wait}
  [D] 'function int mca_oob_tcp_parse_uri(const char*, sockaddr*)'    {mca_oob_tcp_parse_uri}
  [D] 'function bool mca_oob_tcp_peer_accept(mca_oob_tcp_peer_t*, int)'    {mca_oob_tcp_peer_accept}
  [D] 'function void mca_oob_tcp_peer_close(mca_oob_tcp_peer_t*)'    {mca_oob_tcp_peer_close}
  [D] 'function void mca_oob_tcp_peer_dequeue_msg(mca_oob_tcp_peer_t*, mca_oob_tcp_msg_t*)'    {mca_oob_tcp_peer_dequeue_msg}
  [D] 'function void mca_oob_tcp_peer_dump(mca_oob_tcp_peer_t*, const char*)'    {mca_oob_tcp_peer_dump}
  [D] 'function mca_oob_tcp_peer_t* mca_oob_tcp_peer_lookup(const orte_process_name_t*)'    {mca_oob_tcp_peer_lookup}
  [D] 'function void mca_oob_tcp_peer_resolved(mca_oob_tcp_peer_t*, mca_oob_tcp_addr_t*)'    {mca_oob_tcp_peer_resolved}
  [D] 'function int mca_oob_tcp_peer_send(mca_oob_tcp_peer_t*, mca_oob_tcp_msg_t*)'    {mca_oob_tcp_peer_send}
  [D] 'function int mca_oob_tcp_peer_send_ident(mca_oob_tcp_peer_t*)'    {mca_oob_tcp_peer_send_ident}
  [D] 'function void mca_oob_tcp_peer_shutdown(mca_oob_tcp_peer_t*)'    {mca_oob_tcp_peer_shutdown}
  [D] 'function int mca_oob_tcp_ping(const orte_process_name_t*, const char*, const timeval*)'    {mca_oob_tcp_ping}
  [D] 'function int mca_oob_tcp_process_name_compare(const orte_process_name_t*, const orte_process_name_t*)'    {mca_oob_tcp_process_name_compare}
  [D] 'function int mca_oob_tcp_recv_cancel(orte_process_name_t*, int)'    {mca_oob_tcp_recv_cancel}
  [D] 'function int mca_oob_tcp_recv_nb(orte_process_name_t*, iovec*, int, int, int, orte_rml_callback_fn_t, void*)'    {mca_oob_tcp_recv_nb}
  [D] 'function int mca_oob_tcp_resolve(mca_oob_tcp_peer_t*)'    {mca_oob_tcp_resolve}
  [D] 'function int mca_oob_tcp_send_nb(orte_process_name_t*, orte_process_name_t*, iovec*, int, int, int, orte_rml_callback_fn_t, void*)'    {mca_oob_tcp_send_nb}
  [D] 'function int mca_oob_tcp_set_addr(const orte_process_name_t*, const char*)'    {mca_oob_tcp_set_addr}
  [D] 'function void mca_oob_tcp_set_socket_options(int)'    {mca_oob_tcp_set_socket_options}
  [D] 'function int mca_pml_base_close()'    {mca_pml_base_close}
  [D] 'function int mca_pml_base_open()'    {mca_pml_base_open}
  [D] 'function int mca_pml_bfo_add_comm(ompi_communicator_t*)'    {mca_pml_bfo_add_comm}
  [D] 'function int mca_pml_bfo_add_procs(ompi_proc_t**, size_t)'    {mca_pml_bfo_add_procs}
  [D] 'function void mca_pml_bfo_check_recv_ctl_completion_status(mca_btl_base_module_t*, mca_btl_base_descriptor_t*, int)'    {mca_pml_bfo_check_recv_ctl_completion_status}
  [D] 'function int mca_pml_bfo_com_btl_comp(void*, void*)'    {mca_pml_bfo_com_btl_comp}
  [D] 'function int mca_pml_bfo_comm_init_size(mca_pml_bfo_comm_t*, size_t)'    {mca_pml_bfo_comm_init_size}
  [D] 'function void mca_pml_bfo_completion_sendreq_has_error(mca_pml_bfo_send_request_t*, int, mca_btl_base_module_t*, int, char*)'    {mca_pml_bfo_completion_sendreq_has_error}
  [D] 'function int mca_pml_bfo_del_comm(ompi_communicator_t*)'    {mca_pml_bfo_del_comm}
  [D] 'function int mca_pml_bfo_del_procs(ompi_proc_t**, size_t)'    {mca_pml_bfo_del_procs}
  [D] 'function int mca_pml_bfo_dump(ompi_communicator_t*, int)'    {mca_pml_bfo_dump}
  [D] 'function int mca_pml_bfo_enable(bool)'    {mca_pml_bfo_enable}
  [D] 'function void mca_pml_bfo_error_handler(mca_btl_base_module_t*, int32_t, ompi_proc_t*, char*)'    {mca_pml_bfo_error_handler}
  [D] 'function void mca_pml_bfo_failover_error_handler(mca_btl_base_module_t*, int32_t, ompi_proc_t*, char*)'    {mca_pml_bfo_failover_error_handler}
  [D] 'function void mca_pml_bfo_find_recvreq_eager_bml_btl(mca_bml_base_btl_t**, mca_btl_base_module_t*, mca_pml_bfo_recv_request_t*, char*)'    {mca_pml_bfo_find_recvreq_eager_bml_btl}
  [D] 'function void mca_pml_bfo_find_recvreq_rdma_bml_btl(mca_bml_base_btl_t**, mca_btl_base_module_t*, mca_pml_bfo_recv_request_t*, char*)'    {mca_pml_bfo_find_recvreq_rdma_bml_btl}
  [D] 'function void mca_pml_bfo_find_sendreq_eager_bml_btl(mca_bml_base_btl_t**, mca_btl_base_module_t*, mca_pml_bfo_send_request_t*, char*)'    {mca_pml_bfo_find_sendreq_eager_bml_btl}
  [D] 'function void mca_pml_bfo_find_sendreq_rdma_bml_btl(mca_bml_base_btl_t**, mca_btl_base_module_t*, mca_pml_bfo_send_request_t*, char*)'    {mca_pml_bfo_find_sendreq_rdma_bml_btl}
  [D] 'function int mca_pml_bfo_ft_event(int)'    {mca_pml_bfo_ft_event}
  [D] 'function mca_pml_bfo_recv_request_t* mca_pml_bfo_get_request(mca_pml_bfo_match_hdr_t*)'    {mca_pml_bfo_get_request}
  [D] 'function int mca_pml_bfo_iprobe(int, int, ompi_communicator_t*, int*, ompi_status_public_t*)'    {mca_pml_bfo_iprobe}
  [D] 'function int mca_pml_bfo_irecv(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_bfo_irecv}
  [D] 'function int mca_pml_bfo_irecv_init(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_bfo_irecv_init}
  [D] 'function bool mca_pml_bfo_is_duplicate_fin(mca_pml_bfo_hdr_t*, mca_btl_base_descriptor_t*, mca_btl_base_module_t*)'    {mca_pml_bfo_is_duplicate_fin}
  [D] 'function bool mca_pml_bfo_is_duplicate_msg(mca_pml_bfo_comm_proc_t*, mca_pml_bfo_match_hdr_t*)'    {mca_pml_bfo_is_duplicate_msg}
  [D] 'function int mca_pml_bfo_isend(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_bfo_isend}
  [D] 'function int mca_pml_bfo_isend_init(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_bfo_isend_init}
  [D] 'function void mca_pml_bfo_map_out_btl(mca_btl_base_module_t*, ompi_proc_t*, char*)'    {mca_pml_bfo_map_out_btl}
  [D] 'function int mca_pml_bfo_probe(int, int, ompi_communicator_t*, ompi_status_public_t*)'    {mca_pml_bfo_probe}
  [D] 'function void mca_pml_bfo_process_pending_packets(mca_bml_base_btl_t*)'    {mca_pml_bfo_process_pending_packets}
  [D] 'function void mca_pml_bfo_process_pending_rdma()'    {mca_pml_bfo_process_pending_rdma}
  [D] 'function int mca_pml_bfo_progress()'    {mca_pml_bfo_progress}
  [D] 'function size_t mca_pml_bfo_rdma_btls(mca_bml_base_endpoint_t*, unsigned char*, size_t, mca_pml_bfo_com_btl_t*)'    {mca_pml_bfo_rdma_btls}
  [D] 'function size_t mca_pml_bfo_rdma_pipeline_btls(mca_bml_base_endpoint_t*, size_t, mca_pml_bfo_com_btl_t*)'    {mca_pml_bfo_rdma_pipeline_btls}
  [D] 'function int mca_pml_bfo_recv(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_status_public_t*)'    {mca_pml_bfo_recv}
  [D] 'function void mca_pml_bfo_recv_frag_callback_ack(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_ack}
  [D] 'function void mca_pml_bfo_recv_frag_callback_fin(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_fin}
  [D] 'function void mca_pml_bfo_recv_frag_callback_frag(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_frag}
  [D] 'function void mca_pml_bfo_recv_frag_callback_match(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_match}
  [D] 'function void mca_pml_bfo_recv_frag_callback_put(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_put}
  [D] 'function void mca_pml_bfo_recv_frag_callback_recverrnotify(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_recverrnotify}
  [D] 'function void mca_pml_bfo_recv_frag_callback_rget(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_rget}
  [D] 'function void mca_pml_bfo_recv_frag_callback_rndv(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_rndv}
  [D] 'function void mca_pml_bfo_recv_frag_callback_rndvrestartack(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_rndvrestartack}
  [D] 'function void mca_pml_bfo_recv_frag_callback_rndvrestartnack(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_rndvrestartnack}
  [D] 'function void mca_pml_bfo_recv_frag_callback_rndvrestartnotify(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_bfo_recv_frag_callback_rndvrestartnotify}
  [D] 'function void mca_pml_bfo_recv_req_start(mca_pml_bfo_recv_request_t*)'    {mca_pml_bfo_recv_req_start}
  [D] 'function int mca_pml_bfo_recv_request_ack_send_btl(ompi_proc_t*, mca_bml_base_btl_t*, uint64_t, void*, uint64_t, bool)'    {mca_pml_bfo_recv_request_ack_send_btl}
  [D] 'function int mca_pml_bfo_recv_request_get_frag(mca_pml_bfo_rdma_frag_t*)'    {mca_pml_bfo_recv_request_get_frag}
  [D] 'function void mca_pml_bfo_recv_request_matched_probe(mca_pml_bfo_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_bfo_recv_request_matched_probe}
  [D] 'function void mca_pml_bfo_recv_request_process_pending()'    {mca_pml_bfo_recv_request_process_pending}
  [D] 'function void mca_pml_bfo_recv_request_progress_frag(mca_pml_bfo_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_bfo_recv_request_progress_frag}
  [D] 'function void mca_pml_bfo_recv_request_progress_match(mca_pml_bfo_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_bfo_recv_request_progress_match}
  [D] 'function void mca_pml_bfo_recv_request_progress_rget(mca_pml_bfo_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_bfo_recv_request_progress_rget}
  [D] 'function void mca_pml_bfo_recv_request_progress_rndv(mca_pml_bfo_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_bfo_recv_request_progress_rndv}
  [D] 'function void mca_pml_bfo_recv_request_recverrnotify(mca_pml_bfo_recv_request_t*, mca_btl_base_tag_t, int)'    {mca_pml_bfo_recv_request_recverrnotify}
  [D] 'function void mca_pml_bfo_recv_request_reset(mca_pml_bfo_recv_request_t*)'    {mca_pml_bfo_recv_request_reset}
  [D] 'function void mca_pml_bfo_recv_request_rndvrestartack(mca_pml_bfo_recv_request_t*, mca_btl_base_tag_t, int, mca_btl_base_module_t*)'    {mca_pml_bfo_recv_request_rndvrestartack}
  [D] 'function void mca_pml_bfo_recv_request_rndvrestartnack(mca_btl_base_descriptor_t*, ompi_proc_t*, bool)'    {mca_pml_bfo_recv_request_rndvrestartnack}
  [D] 'function int mca_pml_bfo_recv_request_schedule_once(mca_pml_bfo_recv_request_t*, mca_bml_base_btl_t*)'    {mca_pml_bfo_recv_request_schedule_once}
  [D] 'function void mca_pml_bfo_recv_restart_completion(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*, int)'    {mca_pml_bfo_recv_restart_completion}
  [D] 'function int mca_pml_bfo_register_callbacks()'    {mca_pml_bfo_register_callbacks}
  [D] 'function void mca_pml_bfo_repost_fin(mca_btl_base_descriptor_t*)'    {mca_pml_bfo_repost_fin}
  [D] 'function void mca_pml_bfo_repost_match_fragment(mca_btl_base_descriptor_t*)'    {mca_pml_bfo_repost_match_fragment}
  [D] 'function bool mca_pml_bfo_rndv_completion_status_error(mca_btl_base_descriptor_t*, mca_pml_bfo_send_request_t*)'    {mca_pml_bfo_rndv_completion_status_error}
  [D] 'function void mca_pml_bfo_rndvrestartnotify_completion(mca_btl_base_module_t*, mca_btl_base_endpoint_t*, mca_btl_base_descriptor_t*, int)'    {mca_pml_bfo_rndvrestartnotify_completion}
  [D] 'function void* mca_pml_bfo_seg_alloc(mca_mpool_base_module_t*, size_t*, mca_mpool_base_registration_t**)'    {mca_pml_bfo_seg_alloc}
  [D] 'function void mca_pml_bfo_seg_free(mca_mpool_base_module_t*, void*)'    {mca_pml_bfo_seg_free}
  [D] 'function int mca_pml_bfo_send(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*)'    {mca_pml_bfo_send}
  [D] 'function void mca_pml_bfo_send_ctl_completion_status_error(mca_btl_base_descriptor_t*)'    {mca_pml_bfo_send_ctl_completion_status_error}
  [D] 'function int mca_pml_bfo_send_fin(ompi_proc_t*, mca_bml_base_btl_t*, ompi_ptr_t, uint8_t, uint32_t, uint16_t, uint8_t, uint16_t, uint32_t)'    {mca_pml_bfo_send_fin}
  [D] 'function void mca_pml_bfo_send_request_copy_in_out(mca_pml_bfo_send_request_t*, uint64_t, uint64_t)'    {mca_pml_bfo_send_request_copy_in_out}
  [D] 'function void mca_pml_bfo_send_request_process_pending(mca_bml_base_btl_t*)'    {mca_pml_bfo_send_request_process_pending}
  [D] 'function void mca_pml_bfo_send_request_put(mca_pml_bfo_send_request_t*, mca_btl_base_module_t*, mca_pml_bfo_rdma_hdr_t*)'    {mca_pml_bfo_send_request_put}
  [D] 'function int mca_pml_bfo_send_request_put_frag(mca_pml_bfo_rdma_frag_t*)'    {mca_pml_bfo_send_request_put_frag}
  [D] 'function void mca_pml_bfo_send_request_restart(mca_pml_bfo_send_request_t*, bool, mca_btl_base_tag_t)'    {mca_pml_bfo_send_request_restart}
  [D] 'function void mca_pml_bfo_send_request_rndvrestartnotify(mca_pml_bfo_send_request_t*, bool, mca_btl_base_tag_t, int, mca_btl_base_module_t*)'    {mca_pml_bfo_send_request_rndvrestartnotify}
  [D] 'function int mca_pml_bfo_send_request_schedule_once(mca_pml_bfo_send_request_t*)'    {mca_pml_bfo_send_request_schedule_once}
  [D] 'function int mca_pml_bfo_send_request_start_buffered(mca_pml_bfo_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_bfo_send_request_start_buffered}
  [D] 'function int mca_pml_bfo_send_request_start_copy(mca_pml_bfo_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_bfo_send_request_start_copy}
  [D] 'function int mca_pml_bfo_send_request_start_prepare(mca_pml_bfo_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_bfo_send_request_start_prepare}
  [D] 'function int mca_pml_bfo_send_request_start_rdma(mca_pml_bfo_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_bfo_send_request_start_rdma}
  [D] 'function int mca_pml_bfo_send_request_start_rndv(mca_pml_bfo_send_request_t*, mca_bml_base_btl_t*, size_t, int)'    {mca_pml_bfo_send_request_start_rndv}
  [D] 'function int mca_pml_bfo_start(size_t, ompi_request_t**)'    {mca_pml_bfo_start}
  [D] 'function void mca_pml_bfo_update_eager_bml_btl_recv_ctl(mca_bml_base_btl_t**, mca_btl_base_module_t*, mca_btl_base_descriptor_t*)'    {mca_pml_bfo_update_eager_bml_btl_recv_ctl}
  [D] 'function void mca_pml_bfo_update_rndv_fields(mca_pml_bfo_hdr_t*, mca_pml_bfo_send_request_t*, char*)'    {mca_pml_bfo_update_rndv_fields}
  [D] 'function int mca_pml_cm_iprobe(int, int, ompi_communicator_t*, int*, ompi_status_public_t*)'    {mca_pml_cm_iprobe}
  [D] 'function int mca_pml_cm_irecv(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_cm_irecv}
  [D] 'function int mca_pml_cm_irecv_init(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_cm_irecv_init}
  [D] 'function int mca_pml_cm_isend(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_cm_isend}
  [D] 'function int mca_pml_cm_isend_init(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_cm_isend_init}
  [D] 'function int mca_pml_cm_probe(int, int, ompi_communicator_t*, ompi_status_public_t*)'    {mca_pml_cm_probe}
  [D] 'function int mca_pml_cm_recv(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_status_public_t*)'    {mca_pml_cm_recv}
  [D] 'function int mca_pml_cm_send(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*)'    {mca_pml_cm_send}
  [D] 'function int mca_pml_csum_add_comm(ompi_communicator_t*)'    {mca_pml_csum_add_comm}
  [D] 'function int mca_pml_csum_add_procs(ompi_proc_t**, size_t)'    {mca_pml_csum_add_procs}
  [D] 'function int mca_pml_csum_com_btl_comp(void*, void*)'    {mca_pml_csum_com_btl_comp}
  [D] 'function int mca_pml_csum_comm_init_size(mca_pml_csum_comm_t*, size_t)'    {mca_pml_csum_comm_init_size}
  [D] 'function int mca_pml_csum_del_comm(ompi_communicator_t*)'    {mca_pml_csum_del_comm}
  [D] 'function int mca_pml_csum_del_procs(ompi_proc_t**, size_t)'    {mca_pml_csum_del_procs}
  [D] 'function int mca_pml_csum_dump(ompi_communicator_t*, int)'    {mca_pml_csum_dump}
  [D] 'function int mca_pml_csum_enable(bool)'    {mca_pml_csum_enable}
  [D] 'function void mca_pml_csum_error_handler(mca_btl_base_module_t*, int32_t, ompi_proc_t*, char*)'    {mca_pml_csum_error_handler}
  [D] 'function int mca_pml_csum_ft_event(int)'    {mca_pml_csum_ft_event}
  [D] 'function int mca_pml_csum_iprobe(int, int, ompi_communicator_t*, int*, ompi_status_public_t*)'    {mca_pml_csum_iprobe}
  [D] 'function int mca_pml_csum_irecv(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_csum_irecv}
  [D] 'function int mca_pml_csum_irecv_init(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_csum_irecv_init}
  [D] 'function int mca_pml_csum_isend(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_csum_isend}
  [D] 'function int mca_pml_csum_isend_init(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*, ompi_request_t**)'    {mca_pml_csum_isend_init}
  [D] 'function int mca_pml_csum_probe(int, int, ompi_communicator_t*, ompi_status_public_t*)'    {mca_pml_csum_probe}
  [D] 'function void mca_pml_csum_process_pending_packets(mca_bml_base_btl_t*)'    {mca_pml_csum_process_pending_packets}
  [D] 'function void mca_pml_csum_process_pending_rdma()'    {mca_pml_csum_process_pending_rdma}
  [D] 'function int mca_pml_csum_progress()'    {mca_pml_csum_progress}
  [D] 'function size_t mca_pml_csum_rdma_btls(mca_bml_base_endpoint_t*, unsigned char*, size_t, mca_pml_csum_com_btl_t*)'    {mca_pml_csum_rdma_btls}
  [D] 'function size_t mca_pml_csum_rdma_pipeline_btls(mca_bml_base_endpoint_t*, size_t, mca_pml_csum_com_btl_t*)'    {mca_pml_csum_rdma_pipeline_btls}
  [D] 'function int mca_pml_csum_recv(void*, size_t, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_status_public_t*)'    {mca_pml_csum_recv}
  [D] 'function void mca_pml_csum_recv_frag_callback_ack(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_ack}
  [D] 'function void mca_pml_csum_recv_frag_callback_fin(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_fin}
  [D] 'function void mca_pml_csum_recv_frag_callback_frag(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_frag}
  [D] 'function void mca_pml_csum_recv_frag_callback_match(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_match}
  [D] 'function void mca_pml_csum_recv_frag_callback_put(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_put}
  [D] 'function void mca_pml_csum_recv_frag_callback_rget(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_rget}
  [D] 'function void mca_pml_csum_recv_frag_callback_rndv(mca_btl_base_module_t*, mca_btl_base_tag_t, mca_btl_base_descriptor_t*, void*)'    {mca_pml_csum_recv_frag_callback_rndv}
  [D] 'function void mca_pml_csum_recv_req_start(mca_pml_csum_recv_request_t*)'    {mca_pml_csum_recv_req_start}
  [D] 'function int mca_pml_csum_recv_request_ack_send_btl(ompi_proc_t*, mca_bml_base_btl_t*, uint64_t, void*, uint64_t, bool)'    {mca_pml_csum_recv_request_ack_send_btl}
  [D] 'function int mca_pml_csum_recv_request_get_frag(mca_pml_csum_rdma_frag_t*)'    {mca_pml_csum_recv_request_get_frag}
  [D] 'function void mca_pml_csum_recv_request_matched_probe(mca_pml_csum_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_csum_recv_request_matched_probe}
  [D] 'function void mca_pml_csum_recv_request_process_pending()'    {mca_pml_csum_recv_request_process_pending}
  [D] 'function void mca_pml_csum_recv_request_progress_frag(mca_pml_csum_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_csum_recv_request_progress_frag}
  [D] 'function void mca_pml_csum_recv_request_progress_match(mca_pml_csum_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_csum_recv_request_progress_match}
  [D] 'function void mca_pml_csum_recv_request_progress_rget(mca_pml_csum_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_csum_recv_request_progress_rget}
  [D] 'function void mca_pml_csum_recv_request_progress_rndv(mca_pml_csum_recv_request_t*, mca_btl_base_module_t*, mca_btl_base_segment_t*, size_t)'    {mca_pml_csum_recv_request_progress_rndv}
  [D] 'function int mca_pml_csum_recv_request_schedule_once(mca_pml_csum_recv_request_t*, mca_bml_base_btl_t*)'    {mca_pml_csum_recv_request_schedule_once}
  [D] 'function void* mca_pml_csum_seg_alloc(mca_mpool_base_module_t*, size_t*, mca_mpool_base_registration_t**)'    {mca_pml_csum_seg_alloc}
  [D] 'function void mca_pml_csum_seg_free(mca_mpool_base_module_t*, void*)'    {mca_pml_csum_seg_free}
  [D] 'function int mca_pml_csum_send(void*, size_t, ompi_datatype_t*, int, int, mca_pml_base_send_mode_t, ompi_communicator_t*)'    {mca_pml_csum_send}
  [D] 'function int mca_pml_csum_send_fin(ompi_proc_t*, mca_bml_base_btl_t*, void*, uint8_t, uint32_t)'    {mca_pml_csum_send_fin}
  [D] 'function void mca_pml_csum_send_request_copy_in_out(mca_pml_csum_send_request_t*, uint64_t, uint64_t)'    {mca_pml_csum_send_request_copy_in_out}
  [D] 'function void mca_pml_csum_send_request_process_pending(mca_bml_base_btl_t*)'    {mca_pml_csum_send_request_process_pending}
  [D] 'function void mca_pml_csum_send_request_put(mca_pml_csum_send_request_t*, mca_btl_base_module_t*, mca_pml_csum_rdma_hdr_t*)'    {mca_pml_csum_send_request_put}
  [D] 'function int mca_pml_csum_send_request_put_frag(mca_pml_csum_rdma_frag_t*)'    {mca_pml_csum_send_request_put_frag}
  [D] 'function int mca_pml_csum_send_request_schedule_once(mca_pml_csum_send_request_t*)'    {mca_pml_csum_send_request_schedule_once}
  [D] 'function int mca_pml_csum_send_request_start_buffered(mca_pml_csum_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_csum_send_request_start_buffered}
  [D] 'function int mca_pml_csum_send_request_start_copy(mca_pml_csum_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_csum_send_request_start_copy}
  [D] 'function int mca_pml_csum_send_request_start_prepare(mca_pml_csum_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_csum_send_request_start_prepare}
  [D] 'function int mca_pml_csum_send_request_start_rdma(mca_pml_csum_send_request_t*, mca_bml_base_btl_t*, size_t)'    {mca_pml_csum_send_request_start_rdma}
  [D] 'function int mca_pml_csum_send_request_start_rndv(mca_pml_csum_send_request_t*, mca_bml_base_btl_t*, size_t, int)'    {mca_pml_csum_send_request_start_rndv}
  [D] 'function int mca_pml_csum_start(size_t, ompi_request_t**)'    {mca_pml_csum_start}
  [D] 'function int mca_rcache_base_close()'    {mca_rcache_base_close}
  [D] 'function mca_rcache_base_module_t* mca_rcache_base_module_create(const char*)'    {mca_rcache_base_module_create}
  [D] 'function int mca_rcache_base_open()'    {mca_rcache_base_open}
  [D] 'function int mca_rcache_vma_clean(mca_rcache_base_module_t*)'    {mca_rcache_vma_clean}
  [D] 'function int mca_rcache_vma_delete(mca_rcache_base_module_t*, mca_mpool_base_registration_t*)'    {mca_rcache_vma_delete}
  [D] 'function void mca_rcache_vma_destroy(mca_rcache_vma_t*)'    {mca_rcache_vma_destroy}
  [D] 'function void mca_rcache_vma_finalize(mca_rcache_base_module_t*)'    {mca_rcache_vma_finalize}
  [D] 'function int mca_rcache_vma_find(mca_rcache_base_module_t*, void*, size_t, mca_mpool_base_registration_t**)'    {mca_rcache_vma_find}
  [D] 'function int mca_rcache_vma_find_all(mca_rcache_base_module_t*, void*, size_t, mca_mpool_base_registration_t**, int)'    {mca_rcache_vma_find_all}
  [D] 'function int mca_rcache_vma_insert(mca_rcache_base_module_t*, mca_mpool_base_registration_t*, size_t)'    {mca_rcache_vma_insert}
  [D] 'function void mca_rcache_vma_module_init(mca_rcache_vma_module_t*)'    {mca_rcache_vma_module_init}
  [D] 'function int mca_rcache_vma_tree_delete(mca_rcache_vma_module_t*, mca_mpool_base_registration_t*)'    {mca_rcache_vma_tree_delete}
  [D] 'function mca_mpool_base_registration_t* mca_rcache_vma_tree_find(mca_rcache_vma_module_t*, unsigned char*, unsigned char*)'    {mca_rcache_vma_tree_find}
  [D] 'function int mca_rcache_vma_tree_find_all(mca_rcache_vma_module_t*, unsigned char*, unsigned char*, mca_mpool_base_registration_t**, int)'    {mca_rcache_vma_tree_find_all}
  [D] 'function int mca_rcache_vma_tree_init(mca_rcache_vma_module_t*)'    {mca_rcache_vma_tree_init}
  [D] 'function int mca_rcache_vma_tree_insert(mca_rcache_vma_module_t*, mca_mpool_base_registration_t*, size_t)'    {mca_rcache_vma_tree_insert}
  [D] 'function int mca_topo_base_close()'    {mca_topo_base_close}
  [D] 'function int mca_topo_base_comm_unselect(ompi_communicator_t*)'    {mca_topo_base_comm_unselect}
  [D] 'function int mca_topo_base_open()'    {mca_topo_base_open}
  [D] 'function int mca_topo_unity_cart_map(ompi_communicator_t*, int, int*, int*, int*)'    {mca_topo_unity_cart_map}
  [D] 'function mca_topo_base_module_1_0_0_t* mca_topo_unity_component_comm_query(int*)'    {mca_topo_unity_component_comm_query}
  [D] 'function int mca_topo_unity_component_comm_unquery(ompi_communicator_t*)'    {mca_topo_unity_component_comm_unquery}
  [D] 'function int mca_topo_unity_component_init_query(bool, bool)'    {mca_topo_unity_component_init_query}
  [D] 'function int mca_topo_unity_graph_map(ompi_communicator_t*, int, int*, int*, int*)'    {mca_topo_unity_graph_map}
  [D] 'function int mca_vprotocol_base_close()'    {mca_vprotocol_base_close}
  [D] 'function int mca_vprotocol_base_open(char*)'    {mca_vprotocol_base_open}
  [D] 'function void odls_base_default_wait_local_proc(pid_t, int, void*)'    {odls_base_default_wait_local_proc}
  [D] 'function int ompi_attr_get_fortran_mpi1(opal_hash_table_t*, int, int*, int*)'    {ompi_attr_get_fortran_mpi1}
  [D] 'function int ompi_attr_get_fortran_mpi2(opal_hash_table_t*, int, MPI_Aint*, int*)'    {ompi_attr_get_fortran_mpi2}
  [D] 'function int ompi_attr_set_fortran_mpi1(ompi_attribute_type_t, void*, opal_hash_table_t**, int, int, bool)'    {ompi_attr_set_fortran_mpi1}
  [D] 'function int ompi_attr_set_fortran_mpi2(ompi_attribute_type_t, void*, opal_hash_table_t**, int, MPI_Aint, bool)'    {ompi_attr_set_fortran_mpi2}
  [D] 'function int ompi_coll_tuned_allgather_intra_basic_linear(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_allgather_intra_bruck(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_bruck}
  [D] 'function int ompi_coll_tuned_allgather_intra_do_forced(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_do_forced}
  [D] 'function int ompi_coll_tuned_allgather_intra_neighborexchange(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_neighborexchange}
  [D] 'function int ompi_coll_tuned_allgather_intra_recursivedoubling(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_recursivedoubling}
  [D] 'function int ompi_coll_tuned_allgather_intra_ring(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_ring}
  [D] 'function int ompi_coll_tuned_allgather_intra_two_procs(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgather_intra_two_procs}
  [D] 'function int ompi_coll_tuned_allgatherv_intra_basic_default(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgatherv_intra_basic_default}
  [D] 'function int ompi_coll_tuned_allgatherv_intra_bruck(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgatherv_intra_bruck}
  [D] 'function int ompi_coll_tuned_allgatherv_intra_do_forced(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgatherv_intra_do_forced}
  [D] 'function int ompi_coll_tuned_allgatherv_intra_neighborexchange(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgatherv_intra_neighborexchange}
  [D] 'function int ompi_coll_tuned_allgatherv_intra_ring(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgatherv_intra_ring}
  [D] 'function int ompi_coll_tuned_allgatherv_intra_two_procs(void*, int, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allgatherv_intra_two_procs}
  [D] 'function int ompi_coll_tuned_allreduce_intra_basic_linear(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allreduce_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_allreduce_intra_do_forced(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allreduce_intra_do_forced}
  [D] 'function int ompi_coll_tuned_allreduce_intra_nonoverlapping(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allreduce_intra_nonoverlapping}
  [D] 'function int ompi_coll_tuned_allreduce_intra_recursivedoubling(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allreduce_intra_recursivedoubling}
  [D] 'function int ompi_coll_tuned_allreduce_intra_ring(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_allreduce_intra_ring}
  [D] 'function int ompi_coll_tuned_allreduce_intra_ring_segmented(void*, void*, int, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t)'    {ompi_coll_tuned_allreduce_intra_ring_segmented}
  [D] 'function int ompi_coll_tuned_alltoall_intra_basic_linear(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoall_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_alltoall_intra_bruck(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoall_intra_bruck}
  [D] 'function int ompi_coll_tuned_alltoall_intra_do_forced(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoall_intra_do_forced}
  [D] 'function int ompi_coll_tuned_alltoall_intra_linear_sync(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*, int)'    {ompi_coll_tuned_alltoall_intra_linear_sync}
  [D] 'function int ompi_coll_tuned_alltoall_intra_pairwise(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoall_intra_pairwise}
  [D] 'function int ompi_coll_tuned_alltoall_intra_two_procs(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoall_intra_two_procs}
  [D] 'function int ompi_coll_tuned_alltoallv_intra_basic_linear(void*, int*, int*, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoallv_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_alltoallv_intra_do_forced(void*, int*, int*, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoallv_intra_do_forced}
  [D] 'function int ompi_coll_tuned_alltoallv_intra_pairwise(void*, int*, int*, ompi_datatype_t*, void*, int*, int*, ompi_datatype_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_alltoallv_intra_pairwise}
  [D] 'function int ompi_coll_tuned_barrier_intra_bruck(ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_barrier_intra_bruck}
  [D] 'function int ompi_coll_tuned_barrier_intra_do_forced(ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_barrier_intra_do_forced}
  [D] 'function int ompi_coll_tuned_barrier_intra_doublering(ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_barrier_intra_doublering}
  [D] 'function int ompi_coll_tuned_barrier_intra_recursivedoubling(ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_barrier_intra_recursivedoubling}
  [D] 'function int ompi_coll_tuned_barrier_intra_tree(ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_barrier_intra_tree}
  [D] 'function int ompi_coll_tuned_barrier_intra_two_procs(ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_barrier_intra_two_procs}
  [D] 'function int ompi_coll_tuned_bcast_intra_basic_linear(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_bcast_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_bcast_intra_binomial(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t)'    {ompi_coll_tuned_bcast_intra_binomial}
  [D] 'function int ompi_coll_tuned_bcast_intra_bintree(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t)'    {ompi_coll_tuned_bcast_intra_bintree}
  [D] 'function int ompi_coll_tuned_bcast_intra_chain(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, int32_t)'    {ompi_coll_tuned_bcast_intra_chain}
  [D] 'function int ompi_coll_tuned_bcast_intra_do_forced(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_bcast_intra_do_forced}
  [D] 'function int ompi_coll_tuned_bcast_intra_generic(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, ompi_coll_tree_t*)'    {ompi_coll_tuned_bcast_intra_generic}
  [D] 'function int ompi_coll_tuned_bcast_intra_pipeline(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t)'    {ompi_coll_tuned_bcast_intra_pipeline}
  [D] 'function int ompi_coll_tuned_bcast_intra_split_bintree(void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t)'    {ompi_coll_tuned_bcast_intra_split_bintree}
  [D] 'function int ompi_coll_tuned_gather_intra_basic_linear(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_gather_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_gather_intra_binomial(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_gather_intra_binomial}
  [D] 'function int ompi_coll_tuned_gather_intra_do_forced(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_gather_intra_do_forced}
  [D] 'function int ompi_coll_tuned_gather_intra_linear_sync(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, int)'    {ompi_coll_tuned_gather_intra_linear_sync}
  [D] 'function int ompi_coll_tuned_reduce_generic(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, ompi_coll_tree_t*, int, int)'    {ompi_coll_tuned_reduce_generic}
  [D] 'function int ompi_coll_tuned_reduce_intra_basic_linear(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_reduce_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_reduce_intra_binary(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, int)'    {ompi_coll_tuned_reduce_intra_binary}
  [D] 'function int ompi_coll_tuned_reduce_intra_binomial(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, int)'    {ompi_coll_tuned_reduce_intra_binomial}
  [D] 'function int ompi_coll_tuned_reduce_intra_chain(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, int, int)'    {ompi_coll_tuned_reduce_intra_chain}
  [D] 'function int ompi_coll_tuned_reduce_intra_do_forced(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_reduce_intra_do_forced}
  [D] 'function int ompi_coll_tuned_reduce_intra_in_order_binary(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, int)'    {ompi_coll_tuned_reduce_intra_in_order_binary}
  [D] 'function int ompi_coll_tuned_reduce_intra_pipeline(void*, void*, int, ompi_datatype_t*, ompi_op_t*, int, ompi_communicator_t*, mca_coll_base_module_t*, uint32_t, int)'    {ompi_coll_tuned_reduce_intra_pipeline}
  [D] 'function int ompi_coll_tuned_reduce_scatter_intra_basic_recursivehalving(void*, void*, int*, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_reduce_scatter_intra_basic_recursivehalving}
  [D] 'function int ompi_coll_tuned_reduce_scatter_intra_do_forced(void*, void*, int*, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_reduce_scatter_intra_do_forced}
  [D] 'function int ompi_coll_tuned_reduce_scatter_intra_nonoverlapping(void*, void*, int*, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_reduce_scatter_intra_nonoverlapping}
  [D] 'function int ompi_coll_tuned_reduce_scatter_intra_ring(void*, void*, int*, ompi_datatype_t*, ompi_op_t*, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_reduce_scatter_intra_ring}
  [D] 'function int ompi_coll_tuned_scatter_intra_basic_linear(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_scatter_intra_basic_linear}
  [D] 'function int ompi_coll_tuned_scatter_intra_binomial(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_scatter_intra_binomial}
  [D] 'function int ompi_coll_tuned_scatter_intra_do_forced(void*, int, ompi_datatype_t*, void*, int, ompi_datatype_t*, int, ompi_communicator_t*, mca_coll_base_module_t*)'    {ompi_coll_tuned_scatter_intra_do_forced}
  [D] 'function int ompi_coll_tuned_sendrecv_actual(void*, int, ompi_datatype_t*, int, int, void*, int, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_status_public_t*)'    {ompi_coll_tuned_sendrecv_actual}
  [D] 'function int ompi_coll_tuned_sendrecv_actual_localcompleted(void*, int, ompi_datatype_t*, int, int, void*, int, ompi_datatype_t*, int, int, ompi_communicator_t*, ompi_status_public_t*)'    {ompi_coll_tuned_sendrecv_actual_localcompleted}
  [D] 'function ompi_coll_tree_t* ompi_coll_tuned_topo_build_bmtree(ompi_communicator_t*, int)'    {ompi_coll_tuned_topo_build_bmtree}
  [D] 'function ompi_coll_tree_t* ompi_coll_tuned_topo_build_chain(int, ompi_communicator_t*, int)'    {ompi_coll_tuned_topo_build_chain}
  [D] 'function ompi_coll_tree_t* ompi_coll_tuned_topo_build_in_order_bintree(ompi_communicator_t*)'    {ompi_coll_tuned_topo_build_in_order_bintree}
  [D] 'function ompi_coll_tree_t* ompi_coll_tuned_topo_build_in_order_bmtree(ompi_communicator_t*, int)'    {ompi_coll_tuned_topo_build_in_order_bmtree}
  [D] 'function ompi_coll_tree_t* ompi_coll_tuned_topo_build_tree(int, ompi_communicator_t*, int)'    {ompi_coll_tuned_topo_build_tree}
  [D] 'function int ompi_coll_tuned_topo_destroy_tree(ompi_coll_tree_t**)'    {ompi_coll_tuned_topo_destroy_tree}
  [D] 'function int ompi_coll_tuned_topo_dump_tree(ompi_coll_tree_t*, int)'    {ompi_coll_tuned_topo_dump_tree}
  [D] 'function int ompi_comm_link_function()'    {ompi_comm_link_function}
  [D] 'function void ompi_comm_reg_finalize()'    {ompi_comm_reg_finalize}
  [D] 'function void ompi_comm_reg_init()'    {ompi_comm_reg_init}
  [D] 'function int ompi_crcp_base_close()'    {ompi_crcp_base_close}
  [D] 'function int ompi_crcp_base_open()'    {ompi_crcp_base_open}
  [D] 'function void ompi_debugger_notify_abort(char*)'    {ompi_debugger_notify_abort}
  [D] 'function int ompi_dpm_base_close()'    {ompi_dpm_base_close}
  [D] 'function ompi_dpm_base_disconnect_obj* ompi_dpm_base_disconnect_init(ompi_communicator_t*)'    {ompi_dpm_base_disconnect_init}
  [D] 'function void ompi_dpm_base_disconnect_waitall(int, ompi_dpm_base_disconnect_obj**)'    {ompi_dpm_base_disconnect_waitall}
  [D] 'function int ompi_dpm_base_dyn_finalize()'    {ompi_dpm_base_dyn_finalize}
  [D] 'function char* ompi_dpm_base_dyn_init()'    {ompi_dpm_base_dyn_init}
  [D] 'function void ompi_dpm_base_mark_dyncomm(ompi_communicator_t*)'    {ompi_dpm_base_mark_dyncomm}
  [D] 'function int ompi_dpm_base_null_close_port(char*)'    {ompi_dpm_base_null_close_port}
  [D] 'function int ompi_dpm_base_null_connect_accept(ompi_communicator_t*, int, char*, bool, ompi_communicator_t**)'    {ompi_dpm_base_null_connect_accept}
  [D] 'function void ompi_dpm_base_null_disconnect(ompi_communicator_t*)'    {ompi_dpm_base_null_disconnect}
  [D] 'function int ompi_dpm_base_null_dyn_init()'    {ompi_dpm_base_null_dyn_init}
  [D] 'function int ompi_dpm_base_null_open_port(char*, orte_rml_tag_t)'    {ompi_dpm_base_null_open_port}
  [D] 'function int ompi_dpm_base_null_parse_port(char*, char**, char**, orte_rml_tag_t*)'    {ompi_dpm_base_null_parse_port}
  [D] 'function int ompi_dpm_base_null_route_to_port(char*, orte_process_name_t*)'    {ompi_dpm_base_null_route_to_port}
  [D] 'function int ompi_dpm_base_null_spawn(int, char**, char***, int*, MPI_Info*, char*)'    {ompi_dpm_base_null_spawn}
  [D] 'function int ompi_dpm_base_open()'    {ompi_dpm_base_open}
  [D] 'function int ompi_dpm_base_select()'    {ompi_dpm_base_select}
  [D] 'function int ompi_fortran_argv_f2c(char*, int, int, char***)'    {ompi_fortran_argv_f2c}
  [D] 'function int ompi_free_list_grow(ompi_free_list_t*, size_t)'    {ompi_free_list_grow}
  [D] 'function int ompi_free_list_init_ex(ompi_free_list_t*, size_t, size_t, opal_class_t*, int, int, int, mca_mpool_base_module_t*, ompi_free_list_item_init_fn_t, void*)'    {ompi_free_list_init_ex}
  [D] 'function int ompi_free_list_init_ex_new(ompi_free_list_t*, size_t, size_t, opal_class_t*, size_t, size_t, int, int, int, mca_mpool_base_module_t*, ompi_free_list_item_init_fn_t, void*)'    {ompi_free_list_init_ex_new}
  [D] 'function int ompi_free_list_resize(ompi_free_list_t*, size_t)'    {ompi_free_list_resize}
  [D] 'function ompi_proc_t* ompi_group_get_proc_ptr(ompi_group_t*, int)'    {ompi_group_get_proc_ptr}
  [D] 'function int ompi_info_finalize()'    {ompi_info_finalize}
  [D] 'function int ompi_info_init()'    {ompi_info_init}
  [D] 'function int ompi_info_value_to_bool(char*, bool*)'    {ompi_info_value_to_bool}
  [D] 'function int ompi_info_value_to_int(char*, int*)'    {ompi_info_value_to_int}
  [D] 'function int ompi_modex_recv(mca_base_component_t*, ompi_proc_t*, void**, size_t*)'    {ompi_modex_recv}
  [D] 'function int ompi_modex_recv_key_value(const char*, ompi_proc_t*, void*, opal_data_type_t)'    {ompi_modex_recv_key_value}
  [D] 'function int ompi_modex_recv_string(const char*, ompi_proc_t*, void**, size_t*)'    {ompi_modex_recv_string}
  [D] 'function int ompi_modex_send(mca_base_component_t*, void*, size_t)'    {ompi_modex_send}
  [D] 'function int ompi_modex_send_key_value(const char*, void*, opal_data_type_t)'    {ompi_modex_send_key_value}
  [D] 'function int ompi_modex_send_string(const char*, void*, size_t)'    {ompi_modex_send_string}
  [D] 'function int ompi_mtl_base_close()'    {ompi_mtl_base_close}
  [D] 'function int ompi_mtl_base_open()'    {ompi_mtl_base_open}
  [D] 'function void ompi_op_base_3buff_band_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_band_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_band_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_int16_t}
  [D] 'function void ompi_op_base_3buff_band_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_int32_t}
  [D] 'function void ompi_op_base_3buff_band_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_int64_t}
  [D] 'function void ompi_op_base_3buff_band_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_int8_t}
  [D] 'function void ompi_op_base_3buff_band_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_uint16_t}
  [D] 'function void ompi_op_base_3buff_band_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_uint32_t}
  [D] 'function void ompi_op_base_3buff_band_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_uint64_t}
  [D] 'function void ompi_op_base_3buff_band_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_band_uint8_t}
  [D] 'function void ompi_op_base_3buff_bor_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_bor_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_bor_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_int16_t}
  [D] 'function void ompi_op_base_3buff_bor_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_int32_t}
  [D] 'function void ompi_op_base_3buff_bor_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_int64_t}
  [D] 'function void ompi_op_base_3buff_bor_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_int8_t}
  [D] 'function void ompi_op_base_3buff_bor_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_uint16_t}
  [D] 'function void ompi_op_base_3buff_bor_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_uint32_t}
  [D] 'function void ompi_op_base_3buff_bor_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_uint64_t}
  [D] 'function void ompi_op_base_3buff_bor_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bor_uint8_t}
  [D] 'function void ompi_op_base_3buff_bxor_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_bxor_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_bxor_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_int16_t}
  [D] 'function void ompi_op_base_3buff_bxor_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_int32_t}
  [D] 'function void ompi_op_base_3buff_bxor_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_int64_t}
  [D] 'function void ompi_op_base_3buff_bxor_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_int8_t}
  [D] 'function void ompi_op_base_3buff_bxor_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_uint16_t}
  [D] 'function void ompi_op_base_3buff_bxor_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_uint32_t}
  [D] 'function void ompi_op_base_3buff_bxor_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_uint64_t}
  [D] 'function void ompi_op_base_3buff_bxor_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_bxor_uint8_t}
  [D] 'function void ompi_op_base_3buff_land_bool(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_bool}
  [D] 'function void ompi_op_base_3buff_land_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_int16_t}
  [D] 'function void ompi_op_base_3buff_land_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_int32_t}
  [D] 'function void ompi_op_base_3buff_land_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_int64_t}
  [D] 'function void ompi_op_base_3buff_land_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_int8_t}
  [D] 'function void ompi_op_base_3buff_land_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_uint16_t}
  [D] 'function void ompi_op_base_3buff_land_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_uint32_t}
  [D] 'function void ompi_op_base_3buff_land_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_uint64_t}
  [D] 'function void ompi_op_base_3buff_land_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_land_uint8_t}
  [D] 'function void ompi_op_base_3buff_lor_bool(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_bool}
  [D] 'function void ompi_op_base_3buff_lor_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_int16_t}
  [D] 'function void ompi_op_base_3buff_lor_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_int32_t}
  [D] 'function void ompi_op_base_3buff_lor_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_int64_t}
  [D] 'function void ompi_op_base_3buff_lor_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_int8_t}
  [D] 'function void ompi_op_base_3buff_lor_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_uint16_t}
  [D] 'function void ompi_op_base_3buff_lor_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_uint32_t}
  [D] 'function void ompi_op_base_3buff_lor_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_uint64_t}
  [D] 'function void ompi_op_base_3buff_lor_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lor_uint8_t}
  [D] 'function void ompi_op_base_3buff_lxor_bool(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_bool}
  [D] 'function void ompi_op_base_3buff_lxor_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_int16_t}
  [D] 'function void ompi_op_base_3buff_lxor_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_int32_t}
  [D] 'function void ompi_op_base_3buff_lxor_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_int64_t}
  [D] 'function void ompi_op_base_3buff_lxor_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_int8_t}
  [D] 'function void ompi_op_base_3buff_lxor_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_uint16_t}
  [D] 'function void ompi_op_base_3buff_lxor_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_uint32_t}
  [D] 'function void ompi_op_base_3buff_lxor_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_uint64_t}
  [D] 'function void ompi_op_base_3buff_lxor_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_lxor_uint8_t}
  [D] 'function void ompi_op_base_3buff_max_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_double}
  [D] 'function void ompi_op_base_3buff_max_float(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_float}
  [D] 'function void ompi_op_base_3buff_max_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_max_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_max_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_int16_t}
  [D] 'function void ompi_op_base_3buff_max_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_int32_t}
  [D] 'function void ompi_op_base_3buff_max_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_int64_t}
  [D] 'function void ompi_op_base_3buff_max_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_int8_t}
  [D] 'function void ompi_op_base_3buff_max_long_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_long_double}
  [D] 'function void ompi_op_base_3buff_max_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_uint16_t}
  [D] 'function void ompi_op_base_3buff_max_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_uint32_t}
  [D] 'function void ompi_op_base_3buff_max_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_uint64_t}
  [D] 'function void ompi_op_base_3buff_max_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_max_uint8_t}
  [D] 'function void ompi_op_base_3buff_maxloc_2double_precision(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_2double_precision}
  [D] 'function void ompi_op_base_3buff_maxloc_2int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_2int}
  [D] 'function void ompi_op_base_3buff_maxloc_2integer(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_2integer}
  [D] 'function void ompi_op_base_3buff_maxloc_2real(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_2real}
  [D] 'function void ompi_op_base_3buff_maxloc_double_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_double_int}
  [D] 'function void ompi_op_base_3buff_maxloc_float_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_float_int}
  [D] 'function void ompi_op_base_3buff_maxloc_long_double_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_long_double_int}
  [D] 'function void ompi_op_base_3buff_maxloc_long_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_long_int}
  [D] 'function void ompi_op_base_3buff_maxloc_short_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_maxloc_short_int}
  [D] 'function void ompi_op_base_3buff_min_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_double}
  [D] 'function void ompi_op_base_3buff_min_float(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_float}
  [D] 'function void ompi_op_base_3buff_min_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_min_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_min_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_int16_t}
  [D] 'function void ompi_op_base_3buff_min_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_int32_t}
  [D] 'function void ompi_op_base_3buff_min_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_int64_t}
  [D] 'function void ompi_op_base_3buff_min_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_int8_t}
  [D] 'function void ompi_op_base_3buff_min_long_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_long_double}
  [D] 'function void ompi_op_base_3buff_min_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_uint16_t}
  [D] 'function void ompi_op_base_3buff_min_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_uint32_t}
  [D] 'function void ompi_op_base_3buff_min_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_uint64_t}
  [D] 'function void ompi_op_base_3buff_min_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_min_uint8_t}
  [D] 'function void ompi_op_base_3buff_minloc_2double_precision(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_2double_precision}
  [D] 'function void ompi_op_base_3buff_minloc_2int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_2int}
  [D] 'function void ompi_op_base_3buff_minloc_2integer(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_2integer}
  [D] 'function void ompi_op_base_3buff_minloc_2real(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_2real}
  [D] 'function void ompi_op_base_3buff_minloc_double_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_double_int}
  [D] 'function void ompi_op_base_3buff_minloc_float_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_float_int}
  [D] 'function void ompi_op_base_3buff_minloc_long_double_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_long_double_int}
  [D] 'function void ompi_op_base_3buff_minloc_long_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_long_int}
  [D] 'function void ompi_op_base_3buff_minloc_short_int(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_minloc_short_int}
  [D] 'function void ompi_op_base_3buff_prod_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_double}
  [D] 'function void ompi_op_base_3buff_prod_float(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_float}
  [D] 'function void ompi_op_base_3buff_prod_fortran_complex(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_complex}
  [D] 'function void ompi_op_base_3buff_prod_fortran_complex16(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_complex16}
  [D] 'function void ompi_op_base_3buff_prod_fortran_complex32(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_complex32}
  [D] 'function void ompi_op_base_3buff_prod_fortran_complex8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_complex8}
  [D] 'function void ompi_op_base_3buff_prod_fortran_double_complex(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_double_complex}
  [D] 'function void ompi_op_base_3buff_prod_fortran_integer(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_integer}
  [D] 'function void ompi_op_base_3buff_prod_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_prod_fortran_integer2(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_integer2}
  [D] 'function void ompi_op_base_3buff_prod_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_prod_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_int16_t}
  [D] 'function void ompi_op_base_3buff_prod_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_int32_t}
  [D] 'function void ompi_op_base_3buff_prod_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_int64_t}
  [D] 'function void ompi_op_base_3buff_prod_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_int8_t}
  [D] 'function void ompi_op_base_3buff_prod_long_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_long_double}
  [D] 'function void ompi_op_base_3buff_prod_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_uint16_t}
  [D] 'function void ompi_op_base_3buff_prod_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_uint32_t}
  [D] 'function void ompi_op_base_3buff_prod_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_uint64_t}
  [D] 'function void ompi_op_base_3buff_prod_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_prod_uint8_t}
  [D] 'function void ompi_op_base_3buff_sum_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_double}
  [D] 'function void ompi_op_base_3buff_sum_float(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_float}
  [D] 'function void ompi_op_base_3buff_sum_fortran_complex(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_complex}
  [D] 'function void ompi_op_base_3buff_sum_fortran_complex16(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_complex16}
  [D] 'function void ompi_op_base_3buff_sum_fortran_complex32(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_complex32}
  [D] 'function void ompi_op_base_3buff_sum_fortran_complex8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_complex8}
  [D] 'function void ompi_op_base_3buff_sum_fortran_double_complex(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_double_complex}
  [D] 'function void ompi_op_base_3buff_sum_fortran_integer(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_integer}
  [D] 'function void ompi_op_base_3buff_sum_fortran_integer1(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_integer1}
  [D] 'function void ompi_op_base_3buff_sum_fortran_integer2(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_integer2}
  [D] 'function void ompi_op_base_3buff_sum_fortran_integer8(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_fortran_integer8}
  [D] 'function void ompi_op_base_3buff_sum_int16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_int16_t}
  [D] 'function void ompi_op_base_3buff_sum_int32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_int32_t}
  [D] 'function void ompi_op_base_3buff_sum_int64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_int64_t}
  [D] 'function void ompi_op_base_3buff_sum_int8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_int8_t}
  [D] 'function void ompi_op_base_3buff_sum_long_double(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_long_double}
  [D] 'function void ompi_op_base_3buff_sum_uint16_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_uint16_t}
  [D] 'function void ompi_op_base_3buff_sum_uint32_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_uint32_t}
  [D] 'function void ompi_op_base_3buff_sum_uint64_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_uint64_t}
  [D] 'function void ompi_op_base_3buff_sum_uint8_t(void* restrict, void* restrict, void* restrict, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_3buff_sum_uint8_t}
  [D] 'function void ompi_op_base_band_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_fortran_integer1}
  [D] 'function void ompi_op_base_band_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_fortran_integer8}
  [D] 'function void ompi_op_base_band_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_int16_t}
  [D] 'function void ompi_op_base_band_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_int32_t}
  [D] 'function void ompi_op_base_band_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_int64_t}
  [D] 'function void ompi_op_base_band_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_int8_t}
  [D] 'function void ompi_op_base_band_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_uint16_t}
  [D] 'function void ompi_op_base_band_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_uint32_t}
  [D] 'function void ompi_op_base_band_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_uint64_t}
  [D] 'function void ompi_op_base_band_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_band_uint8_t}
  [D] 'function void ompi_op_base_bor_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_fortran_integer1}
  [D] 'function void ompi_op_base_bor_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_fortran_integer8}
  [D] 'function void ompi_op_base_bor_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_int16_t}
  [D] 'function void ompi_op_base_bor_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_int32_t}
  [D] 'function void ompi_op_base_bor_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_int64_t}
  [D] 'function void ompi_op_base_bor_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_int8_t}
  [D] 'function void ompi_op_base_bor_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_uint16_t}
  [D] 'function void ompi_op_base_bor_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_uint32_t}
  [D] 'function void ompi_op_base_bor_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_uint64_t}
  [D] 'function void ompi_op_base_bor_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bor_uint8_t}
  [D] 'function void ompi_op_base_bxor_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_fortran_integer1}
  [D] 'function void ompi_op_base_bxor_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_fortran_integer8}
  [D] 'function void ompi_op_base_bxor_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_int16_t}
  [D] 'function void ompi_op_base_bxor_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_int32_t}
  [D] 'function void ompi_op_base_bxor_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_int64_t}
  [D] 'function void ompi_op_base_bxor_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_int8_t}
  [D] 'function void ompi_op_base_bxor_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_uint16_t}
  [D] 'function void ompi_op_base_bxor_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_uint32_t}
  [D] 'function void ompi_op_base_bxor_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_uint64_t}
  [D] 'function void ompi_op_base_bxor_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_bxor_uint8_t}
  [D] 'function int ompi_op_base_close()'    {ompi_op_base_close}
  [D] 'function void ompi_op_base_land_bool(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_bool}
  [D] 'function void ompi_op_base_land_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_int16_t}
  [D] 'function void ompi_op_base_land_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_int32_t}
  [D] 'function void ompi_op_base_land_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_int64_t}
  [D] 'function void ompi_op_base_land_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_int8_t}
  [D] 'function void ompi_op_base_land_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_uint16_t}
  [D] 'function void ompi_op_base_land_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_uint32_t}
  [D] 'function void ompi_op_base_land_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_uint64_t}
  [D] 'function void ompi_op_base_land_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_land_uint8_t}
  [D] 'function void ompi_op_base_lor_bool(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_bool}
  [D] 'function void ompi_op_base_lor_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_int16_t}
  [D] 'function void ompi_op_base_lor_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_int32_t}
  [D] 'function void ompi_op_base_lor_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_int64_t}
  [D] 'function void ompi_op_base_lor_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_int8_t}
  [D] 'function void ompi_op_base_lor_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_uint16_t}
  [D] 'function void ompi_op_base_lor_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_uint32_t}
  [D] 'function void ompi_op_base_lor_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_uint64_t}
  [D] 'function void ompi_op_base_lor_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lor_uint8_t}
  [D] 'function void ompi_op_base_lxor_bool(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_bool}
  [D] 'function void ompi_op_base_lxor_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_int16_t}
  [D] 'function void ompi_op_base_lxor_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_int32_t}
  [D] 'function void ompi_op_base_lxor_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_int64_t}
  [D] 'function void ompi_op_base_lxor_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_int8_t}
  [D] 'function void ompi_op_base_lxor_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_uint16_t}
  [D] 'function void ompi_op_base_lxor_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_uint32_t}
  [D] 'function void ompi_op_base_lxor_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_uint64_t}
  [D] 'function void ompi_op_base_lxor_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_lxor_uint8_t}
  [D] 'function void ompi_op_base_max_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_double}
  [D] 'function void ompi_op_base_max_float(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_float}
  [D] 'function void ompi_op_base_max_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_fortran_integer1}
  [D] 'function void ompi_op_base_max_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_fortran_integer8}
  [D] 'function void ompi_op_base_max_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_int16_t}
  [D] 'function void ompi_op_base_max_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_int32_t}
  [D] 'function void ompi_op_base_max_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_int64_t}
  [D] 'function void ompi_op_base_max_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_int8_t}
  [D] 'function void ompi_op_base_max_long_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_long_double}
  [D] 'function void ompi_op_base_max_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_uint16_t}
  [D] 'function void ompi_op_base_max_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_uint32_t}
  [D] 'function void ompi_op_base_max_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_uint64_t}
  [D] 'function void ompi_op_base_max_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_max_uint8_t}
  [D] 'function void ompi_op_base_maxloc_2double_precision(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_2double_precision}
  [D] 'function void ompi_op_base_maxloc_2int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_2int}
  [D] 'function void ompi_op_base_maxloc_2integer(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_2integer}
  [D] 'function void ompi_op_base_maxloc_2real(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_2real}
  [D] 'function void ompi_op_base_maxloc_double_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_double_int}
  [D] 'function void ompi_op_base_maxloc_float_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_float_int}
  [D] 'function void ompi_op_base_maxloc_long_double_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_long_double_int}
  [D] 'function void ompi_op_base_maxloc_long_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_long_int}
  [D] 'function void ompi_op_base_maxloc_short_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_maxloc_short_int}
  [D] 'function void ompi_op_base_min_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_double}
  [D] 'function void ompi_op_base_min_float(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_float}
  [D] 'function void ompi_op_base_min_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_fortran_integer1}
  [D] 'function void ompi_op_base_min_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_fortran_integer8}
  [D] 'function void ompi_op_base_min_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_int16_t}
  [D] 'function void ompi_op_base_min_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_int32_t}
  [D] 'function void ompi_op_base_min_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_int64_t}
  [D] 'function void ompi_op_base_min_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_int8_t}
  [D] 'function void ompi_op_base_min_long_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_long_double}
  [D] 'function void ompi_op_base_min_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_uint16_t}
  [D] 'function void ompi_op_base_min_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_uint32_t}
  [D] 'function void ompi_op_base_min_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_uint64_t}
  [D] 'function void ompi_op_base_min_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_min_uint8_t}
  [D] 'function void ompi_op_base_minloc_2double_precision(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_2double_precision}
  [D] 'function void ompi_op_base_minloc_2int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_2int}
  [D] 'function void ompi_op_base_minloc_2integer(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_2integer}
  [D] 'function void ompi_op_base_minloc_2real(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_2real}
  [D] 'function void ompi_op_base_minloc_double_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_double_int}
  [D] 'function void ompi_op_base_minloc_float_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_float_int}
  [D] 'function void ompi_op_base_minloc_long_double_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_long_double_int}
  [D] 'function void ompi_op_base_minloc_long_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_long_int}
  [D] 'function void ompi_op_base_minloc_short_int(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_minloc_short_int}
  [D] 'function int ompi_op_base_open()'    {ompi_op_base_open}
  [D] 'function void ompi_op_base_prod_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_double}
  [D] 'function void ompi_op_base_prod_float(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_float}
  [D] 'function void ompi_op_base_prod_fortran_complex(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_complex}
  [D] 'function void ompi_op_base_prod_fortran_complex16(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_complex16}
  [D] 'function void ompi_op_base_prod_fortran_complex32(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_complex32}
  [D] 'function void ompi_op_base_prod_fortran_complex8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_complex8}
  [D] 'function void ompi_op_base_prod_fortran_double_complex(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_double_complex}
  [D] 'function void ompi_op_base_prod_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_integer1}
  [D] 'function void ompi_op_base_prod_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_fortran_integer8}
  [D] 'function void ompi_op_base_prod_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_int16_t}
  [D] 'function void ompi_op_base_prod_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_int32_t}
  [D] 'function void ompi_op_base_prod_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_int64_t}
  [D] 'function void ompi_op_base_prod_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_int8_t}
  [D] 'function void ompi_op_base_prod_long_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_long_double}
  [D] 'function void ompi_op_base_prod_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_uint16_t}
  [D] 'function void ompi_op_base_prod_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_uint32_t}
  [D] 'function void ompi_op_base_prod_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_uint64_t}
  [D] 'function void ompi_op_base_prod_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_prod_uint8_t}
  [D] 'function void ompi_op_base_sum_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_double}
  [D] 'function void ompi_op_base_sum_float(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_float}
  [D] 'function void ompi_op_base_sum_fortran_complex(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_complex}
  [D] 'function void ompi_op_base_sum_fortran_complex16(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_complex16}
  [D] 'function void ompi_op_base_sum_fortran_complex32(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_complex32}
  [D] 'function void ompi_op_base_sum_fortran_complex8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_complex8}
  [D] 'function void ompi_op_base_sum_fortran_double_complex(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_double_complex}
  [D] 'function void ompi_op_base_sum_fortran_integer1(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_integer1}
  [D] 'function void ompi_op_base_sum_fortran_integer8(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_fortran_integer8}
  [D] 'function void ompi_op_base_sum_int16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_int16_t}
  [D] 'function void ompi_op_base_sum_int32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_int32_t}
  [D] 'function void ompi_op_base_sum_int64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_int64_t}
  [D] 'function void ompi_op_base_sum_int8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_int8_t}
  [D] 'function void ompi_op_base_sum_long_double(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_long_double}
  [D] 'function void ompi_op_base_sum_uint16_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_uint16_t}
  [D] 'function void ompi_op_base_sum_uint32_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_uint32_t}
  [D] 'function void ompi_op_base_sum_uint64_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_uint64_t}
  [D] 'function void ompi_op_base_sum_uint8_t(void*, void*, int*, ompi_datatype_t**, ompi_op_base_module_1_0_0_t*)'    {ompi_op_base_sum_uint8_t}
  [D] 'function int ompi_osc_base_close()'    {ompi_osc_base_close}
  [D] 'function int ompi_osc_base_open()'    {ompi_osc_base_open}
  [D] 'function int ompi_osc_pt2pt_component_finalize()'    {ompi_osc_pt2pt_component_finalize}
  [D] 'function int ompi_osc_pt2pt_component_init(bool, bool)'    {ompi_osc_pt2pt_component_init}
  [D] 'function int ompi_osc_pt2pt_component_progress()'    {ompi_osc_pt2pt_component_progress}
  [D] 'function int ompi_osc_pt2pt_component_query(ompi_win_t*, ompi_info_t*, ompi_communicator_t*)'    {ompi_osc_pt2pt_component_query}
  [D] 'function int ompi_osc_pt2pt_component_select(ompi_win_t*, ompi_info_t*, ompi_communicator_t*)'    {ompi_osc_pt2pt_component_select}
  [D] 'function int ompi_osc_pt2pt_module_accumulate(void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_op_t*, ompi_win_t*)'    {ompi_osc_pt2pt_module_accumulate}
  [D] 'function int ompi_osc_pt2pt_module_complete(ompi_win_t*)'    {ompi_osc_pt2pt_module_complete}
  [D] 'function int ompi_osc_pt2pt_module_fence(int, ompi_win_t*)'    {ompi_osc_pt2pt_module_fence}
  [D] 'function int ompi_osc_pt2pt_module_free(ompi_win_t*)'    {ompi_osc_pt2pt_module_free}
  [D] 'function int ompi_osc_pt2pt_module_get(void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_win_t*)'    {ompi_osc_pt2pt_module_get}
  [D] 'function int ompi_osc_pt2pt_module_lock(int, int, int, ompi_win_t*)'    {ompi_osc_pt2pt_module_lock}
  [D] 'function int ompi_osc_pt2pt_module_post(ompi_group_t*, int, ompi_win_t*)'    {ompi_osc_pt2pt_module_post}
  [D] 'function int ompi_osc_pt2pt_module_put(void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_win_t*)'    {ompi_osc_pt2pt_module_put}
  [D] 'function int ompi_osc_pt2pt_module_start(ompi_group_t*, int, ompi_win_t*)'    {ompi_osc_pt2pt_module_start}
  [D] 'function int ompi_osc_pt2pt_module_test(ompi_win_t*, int*)'    {ompi_osc_pt2pt_module_test}
  [D] 'function int ompi_osc_pt2pt_module_unlock(int, ompi_win_t*)'    {ompi_osc_pt2pt_module_unlock}
  [D] 'function int ompi_osc_pt2pt_module_wait(ompi_win_t*)'    {ompi_osc_pt2pt_module_wait}
  [D] 'function int ompi_osc_pt2pt_passive_lock(ompi_osc_pt2pt_module_t*, int32_t, int32_t)'    {ompi_osc_pt2pt_passive_lock}
  [D] 'function int ompi_osc_pt2pt_passive_unlock(ompi_osc_pt2pt_module_t*, int32_t, int32_t)'    {ompi_osc_pt2pt_passive_unlock}
  [D] 'function int ompi_osc_pt2pt_passive_unlock_complete(ompi_osc_pt2pt_module_t*)'    {ompi_osc_pt2pt_passive_unlock_complete}
  [D] 'function int ompi_osc_pt2pt_replyreq_alloc_init(ompi_osc_pt2pt_module_t*, int, ompi_ptr_t, ptrdiff_t, int, ompi_datatype_t*, ompi_osc_pt2pt_replyreq_t**)'    {ompi_osc_pt2pt_replyreq_alloc_init}
  [D] 'function int ompi_osc_pt2pt_replyreq_recv(ompi_osc_pt2pt_module_t*, ompi_osc_pt2pt_sendreq_t*, ompi_osc_pt2pt_reply_header_t*, void*)'    {ompi_osc_pt2pt_replyreq_recv}
  [D] 'function int ompi_osc_pt2pt_replyreq_send(ompi_osc_pt2pt_module_t*, ompi_osc_pt2pt_replyreq_t*)'    {ompi_osc_pt2pt_replyreq_send}
  [D] 'function int ompi_osc_pt2pt_sendreq_alloc_init(ompi_osc_pt2pt_req_type_t, void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_osc_pt2pt_module_t*, ompi_osc_pt2pt_sendreq_t**)'    {ompi_osc_pt2pt_sendreq_alloc_init}
  [D] 'function int ompi_osc_pt2pt_sendreq_recv_accum(ompi_osc_pt2pt_module_t*, ompi_osc_pt2pt_send_header_t*, void*)'    {ompi_osc_pt2pt_sendreq_recv_accum}
  [D] 'function int ompi_osc_pt2pt_sendreq_recv_put(ompi_osc_pt2pt_module_t*, ompi_osc_pt2pt_send_header_t*, void*)'    {ompi_osc_pt2pt_sendreq_recv_put}
  [D] 'function int ompi_osc_pt2pt_sendreq_send(ompi_osc_pt2pt_module_t*, ompi_osc_pt2pt_sendreq_t*)'    {ompi_osc_pt2pt_sendreq_send}
  [D] 'function int ompi_osc_rdma_component_finalize()'    {ompi_osc_rdma_component_finalize}
  [D] 'function int ompi_osc_rdma_component_init(bool, bool)'    {ompi_osc_rdma_component_init}
  [D] 'function int ompi_osc_rdma_component_progress()'    {ompi_osc_rdma_component_progress}
  [D] 'function int ompi_osc_rdma_component_query(ompi_win_t*, ompi_info_t*, ompi_communicator_t*)'    {ompi_osc_rdma_component_query}
  [D] 'function int ompi_osc_rdma_component_select(ompi_win_t*, ompi_info_t*, ompi_communicator_t*)'    {ompi_osc_rdma_component_select}
  [D] 'function int ompi_osc_rdma_control_send(ompi_osc_rdma_module_t*, ompi_proc_t*, uint8_t, int32_t, int32_t)'    {ompi_osc_rdma_control_send}
  [D] 'function int ompi_osc_rdma_module_accumulate(void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_op_t*, ompi_win_t*)'    {ompi_osc_rdma_module_accumulate}
  [D] 'function int ompi_osc_rdma_module_complete(ompi_win_t*)'    {ompi_osc_rdma_module_complete}
  [D] 'function int ompi_osc_rdma_module_fence(int, ompi_win_t*)'    {ompi_osc_rdma_module_fence}
  [D] 'function int ompi_osc_rdma_module_free(ompi_win_t*)'    {ompi_osc_rdma_module_free}
  [D] 'function int ompi_osc_rdma_module_get(void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_win_t*)'    {ompi_osc_rdma_module_get}
  [D] 'function int ompi_osc_rdma_module_lock(int, int, int, ompi_win_t*)'    {ompi_osc_rdma_module_lock}
  [D] 'function int ompi_osc_rdma_module_post(ompi_group_t*, int, ompi_win_t*)'    {ompi_osc_rdma_module_post}
  [D] 'function int ompi_osc_rdma_module_put(void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_win_t*)'    {ompi_osc_rdma_module_put}
  [D] 'function int ompi_osc_rdma_module_start(ompi_group_t*, int, ompi_win_t*)'    {ompi_osc_rdma_module_start}
  [D] 'function int ompi_osc_rdma_module_test(ompi_win_t*, int*)'    {ompi_osc_rdma_module_test}
  [D] 'function int ompi_osc_rdma_module_unlock(int, ompi_win_t*)'    {ompi_osc_rdma_module_unlock}
  [D] 'function int ompi_osc_rdma_module_wait(ompi_win_t*)'    {ompi_osc_rdma_module_wait}
  [D] 'function int ompi_osc_rdma_passive_lock(ompi_osc_rdma_module_t*, int32_t, int32_t)'    {ompi_osc_rdma_passive_lock}
  [D] 'function int ompi_osc_rdma_passive_unlock(ompi_osc_rdma_module_t*, int32_t, int32_t)'    {ompi_osc_rdma_passive_unlock}
  [D] 'function int ompi_osc_rdma_passive_unlock_complete(ompi_osc_rdma_module_t*)'    {ompi_osc_rdma_passive_unlock_complete}
  [D] 'function int ompi_osc_rdma_peer_info_free(ompi_osc_rdma_peer_info_t*)'    {ompi_osc_rdma_peer_info_free}
  [D] 'function int ompi_osc_rdma_rdma_ack_send(ompi_osc_rdma_module_t*, ompi_proc_t*, ompi_osc_rdma_btl_t*)'    {ompi_osc_rdma_rdma_ack_send}
  [D] 'function int ompi_osc_rdma_replyreq_alloc_init(ompi_osc_rdma_module_t*, int, ompi_ptr_t, ptrdiff_t, int, ompi_datatype_t*, ompi_osc_rdma_replyreq_t**)'    {ompi_osc_rdma_replyreq_alloc_init}
  [D] 'function int ompi_osc_rdma_replyreq_recv(ompi_osc_rdma_module_t*, ompi_osc_rdma_sendreq_t*, ompi_osc_rdma_reply_header_t*, void**)'    {ompi_osc_rdma_replyreq_recv}
  [D] 'function int ompi_osc_rdma_replyreq_send(ompi_osc_rdma_module_t*, ompi_osc_rdma_replyreq_t*)'    {ompi_osc_rdma_replyreq_send}
  [D] 'function int ompi_osc_rdma_sendreq_alloc_init(ompi_osc_rdma_req_type_t, void*, int, ompi_datatype_t*, int, ptrdiff_t, int, ompi_datatype_t*, ompi_osc_rdma_module_t*, ompi_osc_rdma_sendreq_t**)'    {ompi_osc_rdma_sendreq_alloc_init}
  [D] 'function int ompi_osc_rdma_sendreq_recv_accum(ompi_osc_rdma_module_t*, ompi_osc_rdma_send_header_t*, void**)'    {ompi_osc_rdma_sendreq_recv_accum}
  [D] 'function int ompi_osc_rdma_sendreq_recv_put(ompi_osc_rdma_module_t*, ompi_osc_rdma_send_header_t*, void**)'    {ompi_osc_rdma_sendreq_recv_put}
  [D] 'function int ompi_osc_rdma_sendreq_send(ompi_osc_rdma_module_t*, ompi_osc_rdma_sendreq_t*)'    {ompi_osc_rdma_sendreq_send}
  [D] 'function int ompi_proc_set_arch()'    {ompi_proc_set_arch}
  [D] 'function int ompi_pubsub_base_close()'    {ompi_pubsub_base_close}
  [D] 'function char* ompi_pubsub_base_null_lookup(char*, ompi_info_t*)'    {ompi_pubsub_base_null_lookup}
  [D] 'function int ompi_pubsub_base_null_publish(char*, ompi_info_t*, char*)'    {ompi_pubsub_base_null_publish}
  [D] 'function int ompi_pubsub_base_null_unpublish(char*, ompi_info_t*)'    {ompi_pubsub_base_null_unpublish}
  [D] 'function int ompi_pubsub_base_open()'    {ompi_pubsub_base_open}
  [D] 'function int ompi_pubsub_base_select()'    {ompi_pubsub_base_select}
  [D] 'function void ompi_rb_tree_construct(opal_object_t*)'    {ompi_rb_tree_construct}
  [D] 'function int ompi_rb_tree_delete(ompi_rb_tree_t*, void*)'    {ompi_rb_tree_delete}
  [D] 'function int ompi_rb_tree_destroy(ompi_rb_tree_t*)'    {ompi_rb_tree_destroy}
  [D] 'function void ompi_rb_tree_destruct(opal_object_t*)'    {ompi_rb_tree_destruct}
  [D] 'function void* ompi_rb_tree_find_with(ompi_rb_tree_t*, void*, ompi_rb_tree_comp_fn_t)'    {ompi_rb_tree_find_with}
  [D] 'function int ompi_rb_tree_init(ompi_rb_tree_t*, ompi_rb_tree_comp_fn_t)'    {ompi_rb_tree_init}
  [D] 'function int ompi_rb_tree_insert(ompi_rb_tree_t*, void*, void*)'    {ompi_rb_tree_insert}
  [D] 'function int ompi_rb_tree_size(ompi_rb_tree_t*)'    {ompi_rb_tree_size}
  [D] 'function int ompi_rb_tree_traverse(ompi_rb_tree_t*, ompi_rb_tree_condition_fn_t, ompi_rb_tree_action_fn_t)'    {ompi_rb_tree_traverse}
  [D] 'function int ompi_request_persistent_proc_null_free(ompi_request_t**)'    {ompi_request_persistent_proc_null_free}
  [D] 'function int ompi_topo_create(ompi_communicator_t*, int, int*, int*, bool, ompi_communicator_t**, int)'    {ompi_topo_create}
  [D] 'function void ompi_wait_for_debugger()'    {ompi_wait_for_debugger}
  [D] 'function void ompi_warn_fork()'    {ompi_warn_fork}
  [D] 'function void opal__event_debugx(const char*, ...)'    {opal__event_debugx}
  [D] 'function int32_t opal_arch_checkmask(uint32_t*, uint32_t)'    {opal_arch_checkmask}
  [D] 'function int32_t opal_arch_compute_local_id(uint32_t*)'    {opal_arch_compute_local_id}
  [D] 'function int opal_argv_append(int*, char***, const char*)'    {opal_argv_append}
  [D] 'function int opal_argv_append_nosize(char***, const char*)'    {opal_argv_append_nosize}
  [D] 'function int opal_argv_append_unique_nosize(char***, const char*, bool)'    {opal_argv_append_unique_nosize}
  [D] 'function char** opal_argv_copy(char**)'    {opal_argv_copy}
  [D] 'function int opal_argv_count(char**)'    {opal_argv_count}
  [D] 'function int opal_argv_delete(int*, char***, int, int)'    {opal_argv_delete}
  [D] 'function void opal_argv_free(char**)'    {opal_argv_free}
  [D] 'function int opal_argv_insert(char***, int, char**)'    {opal_argv_insert}
  [D] 'function char* opal_argv_join(char**, int)'    {opal_argv_join}
  [D] 'function char* opal_argv_join_range(char**, size_t, size_t, int)'    {opal_argv_join_range}
  [D] 'function size_t opal_argv_len(char**)'    {opal_argv_len}
  [D] 'function char** opal_argv_split(const char*, int)'    {opal_argv_split}
  [D] 'function char** opal_argv_split_with_empty(const char*, int)'    {opal_argv_split_with_empty}
  [D] 'function int opal_asprintf(char**, const char*, ...)'    {opal_asprintf}
  [D] 'function int opal_backtrace_base_close()'    {opal_backtrace_base_close}
  [D] 'function int opal_backtrace_base_open()'    {opal_backtrace_base_open}
  [D] 'function int opal_backtrace_buffer(char***, int*)'    {opal_backtrace_buffer}
  [D] 'function void opal_backtrace_print(FILE*)'    {opal_backtrace_print}
  [D] 'function char* opal_basename(const char*)'    {opal_basename}
  [D] 'function unsigned long int opal_bcopy_csum_partial(void*, void*, size_t, size_t, unsigned long int*, size_t*)'    {opal_bcopy_csum_partial}
  [D] 'function unsigned int opal_bcopy_uicrc_partial(void*, void*, size_t, size_t, unsigned int)'    {opal_bcopy_uicrc_partial}
  [D] 'function unsigned int opal_bcopy_uicsum_partial(void*, void*, size_t, size_t, unsigned int*, size_t*)'    {opal_bcopy_uicsum_partial}
  [D] 'function int opal_bitmap_clear_all_bits(opal_bitmap_t*)'    {opal_bitmap_clear_all_bits}
  [D] 'function int opal_bitmap_clear_bit(opal_bitmap_t*, int)'    {opal_bitmap_clear_bit}
  [D] 'function int opal_bitmap_find_and_set_first_unset_bit(opal_bitmap_t*, int*)'    {opal_bitmap_find_and_set_first_unset_bit}
  [D] 'function int opal_bitmap_init(opal_bitmap_t*, int)'    {opal_bitmap_init}
  [D] 'function bool opal_bitmap_is_set_bit(opal_bitmap_t*, int)'    {opal_bitmap_is_set_bit}
  [D] 'function int opal_bitmap_set_all_bits(opal_bitmap_t*)'    {opal_bitmap_set_all_bits}
  [D] 'function int opal_bitmap_set_bit(opal_bitmap_t*, int)'    {opal_bitmap_set_bit}
  [D] 'function int opal_bitmap_set_max_size(opal_bitmap_t*, int)'    {opal_bitmap_set_max_size}
  [D] 'function void* opal_calloc(size_t, size_t, const char*, int)'    {opal_calloc}
  [D] 'function int opal_carto_auto_detect_component_query(mca_base_module_t**, int*)'    {opal_carto_auto_detect_component_query}
  [D] 'function int opal_carto_base_close()'    {opal_carto_base_close}
  [D] 'function int opal_carto_base_connect_nodes_fn(opal_carto_graph_t*, opal_carto_base_node_t*, opal_carto_base_node_t*, uint32_t)'    {opal_carto_base_connect_nodes_fn}
  [D] 'function void opal_carto_base_duplicate_graph_fn(opal_carto_graph_t**, const opal_carto_graph_t*, const char*)'    {opal_carto_base_duplicate_graph_fn}
  [D] 'function opal_carto_base_node_t* opal_carto_base_find_node(opal_carto_graph_t*, const char*)'    {opal_carto_base_find_node}
  [D] 'function void opal_carto_base_free_graph(opal_carto_graph_t*)'    {opal_carto_base_free_graph}
  [D] 'function void opal_carto_base_free_graph_fn(opal_carto_graph_t*)'    {opal_carto_base_free_graph_fn}
  [D] 'function int opal_carto_base_get_host_graph(opal_carto_graph_t**, const char*)'    {opal_carto_base_get_host_graph}
  [D] 'function int opal_carto_base_get_nodes_distance(opal_carto_graph_t*, opal_carto_base_node_t*, const char*, opal_value_array_t*)'    {opal_carto_base_get_nodes_distance}
  [D] 'function int opal_carto_base_get_nodes_distance_fn(opal_carto_graph_t*, opal_carto_base_node_t*, const char*, opal_value_array_t*)'    {opal_carto_base_get_nodes_distance_fn}
  [D] 'function void opal_carto_base_graph_add_node_fn(opal_carto_graph_t*, opal_carto_base_node_t*)'    {opal_carto_base_graph_add_node_fn}
  [D] 'function void opal_carto_base_graph_create_fn(opal_carto_graph_t**)'    {opal_carto_base_graph_create_fn}
  [D] 'function opal_carto_base_node_t* opal_carto_base_graph_find_node_fn(opal_carto_graph_t*, const char*)'    {opal_carto_base_graph_find_node_fn}
  [D] 'function int opal_carto_base_graph_get_host_graph_fn(opal_carto_graph_t**, const char*)'    {opal_carto_base_graph_get_host_graph_fn}
  [D] 'function uint32_t opal_carto_base_graph_spf_fn(opal_carto_graph_t*, opal_carto_base_node_t*, opal_carto_base_node_t*)'    {opal_carto_base_graph_spf_fn}
  [D] 'function int opal_carto_base_open()'    {opal_carto_base_open}
  [D] 'function int opal_carto_base_select()'    {opal_carto_base_select}
  [D] 'function uint32_t opal_carto_base_spf(opal_carto_graph_t*, opal_carto_base_node_t*, opal_carto_base_node_t*)'    {opal_carto_base_spf}
  [D] 'function int opal_carto_file_component_query(mca_base_module_t**, int*)'    {opal_carto_file_component_query}
  [D] 'function int opal_class_finalize()'    {opal_class_finalize}
  [D] 'function void opal_class_initialize(opal_class_t*)'    {opal_class_initialize}
  [D] 'function int opal_cmd_line_create(opal_cmd_line_t*, opal_cmd_line_init_t*)'    {opal_cmd_line_create}
  [D] 'function int opal_cmd_line_get_argc(opal_cmd_line_t*)'    {opal_cmd_line_get_argc}
  [D] 'function char* opal_cmd_line_get_argv(opal_cmd_line_t*, int)'    {opal_cmd_line_get_argv}
  [D] 'function int opal_cmd_line_get_ninsts(opal_cmd_line_t*, const char*)'    {opal_cmd_line_get_ninsts}
  [D] 'function char* opal_cmd_line_get_param(opal_cmd_line_t*, const char*, int, int)'    {opal_cmd_line_get_param}
  [D] 'function int opal_cmd_line_get_tail(opal_cmd_line_t*, int*, char***)'    {opal_cmd_line_get_tail}
  [D] 'function char* opal_cmd_line_get_usage_msg(opal_cmd_line_t*)'    {opal_cmd_line_get_usage_msg}
  [D] 'function bool opal_cmd_line_is_taken(opal_cmd_line_t*, const char*)'    {opal_cmd_line_is_taken}
  [D] 'function int opal_cmd_line_make_opt(opal_cmd_line_t*, char, const char*, int, const char*)'    {opal_cmd_line_make_opt}
  [D] 'function int opal_cmd_line_make_opt3(opal_cmd_line_t*, char, const char*, const char*, int, const char*)'    {opal_cmd_line_make_opt3}
  [D] 'function int opal_cmd_line_make_opt_mca(opal_cmd_line_t*, opal_cmd_line_init_t)'    {opal_cmd_line_make_opt_mca}
  [D] 'function int opal_cmd_line_parse(opal_cmd_line_t*, bool, int, char**)'    {opal_cmd_line_parse}
  [D] 'function int opal_convertor_clone(const opal_convertor_t*, opal_convertor_t*, int32_t)'    {opal_convertor_clone}
  [D] 'function opal_convertor_t* opal_convertor_create(int32_t, int32_t)'    {opal_convertor_create}
  [D] 'function int opal_convertor_create_stack_with_pos_general(opal_convertor_t*, size_t, const size_t*)'    {opal_convertor_create_stack_with_pos_general}
  [D] 'function void opal_convertor_destroy_masters()'    {opal_convertor_destroy_masters}
  [D] 'function void opal_convertor_dump(opal_convertor_t*)'    {opal_convertor_dump}
  [D] 'function opal_convertor_master_t* opal_convertor_find_or_create_master(uint32_t)'    {opal_convertor_find_or_create_master}
  [D] 'function int opal_convertor_generic_simple_position(opal_convertor_t*, size_t*)'    {opal_convertor_generic_simple_position}
  [D] 'function int32_t opal_convertor_pack(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_convertor_pack}
  [D] 'function int32_t opal_convertor_prepare_for_recv(opal_convertor_t*, const opal_datatype_t*, int32_t, void*)'    {opal_convertor_prepare_for_recv}
  [D] 'function int32_t opal_convertor_prepare_for_send(opal_convertor_t*, const opal_datatype_t*, int32_t, void*)'    {opal_convertor_prepare_for_send}
  [D] 'function int32_t opal_convertor_raw(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_convertor_raw}
  [D] 'function int32_t opal_convertor_set_position_nocheck(opal_convertor_t*, size_t*)'    {opal_convertor_set_position_nocheck}
  [D] 'function int32_t opal_convertor_unpack(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_convertor_unpack}
  [D] 'function void opal_cr_clear_timers()'    {opal_cr_clear_timers}
  [D] 'function int opal_cr_coord(int)'    {opal_cr_coord}
  [D] 'function void opal_cr_display_all_timers()'    {opal_cr_display_all_timers}
  [D] 'function int opal_cr_finalize()'    {opal_cr_finalize}
  [D] 'function int opal_cr_inc_core(pid_t, opal_crs_base_snapshot_t*, opal_crs_base_ckpt_options_t*, int*)'    {opal_cr_inc_core}
  [D] 'function int opal_cr_inc_core_ckpt(pid_t, opal_crs_base_snapshot_t*, opal_crs_base_ckpt_options_t*, int*)'    {opal_cr_inc_core_ckpt}
  [D] 'function int opal_cr_inc_core_prep()'    {opal_cr_inc_core_prep}
  [D] 'function int opal_cr_inc_core_recover(int)'    {opal_cr_inc_core_recover}
  [D] 'function int opal_cr_init()'    {opal_cr_init}
  [D] 'function int opal_cr_reg_coord_callback(opal_cr_coord_callback_fn_t, opal_cr_coord_callback_fn_t*)'    {opal_cr_reg_coord_callback}
  [D] 'function int opal_cr_reg_notify_callback(opal_cr_notify_callback_fn_t, opal_cr_notify_callback_fn_t*)'    {opal_cr_reg_notify_callback}
  [D] 'function int opal_cr_set_enabled(bool)'    {opal_cr_set_enabled}
  [D] 'function void opal_cr_set_time(int)'    {opal_cr_set_time}
  [D] 'function void opal_cr_test_if_checkpoint_ready()'    {opal_cr_test_if_checkpoint_ready}
  [D] 'function int opal_crs_base_cleanup_append(char*, bool)'    {opal_crs_base_cleanup_append}
  [D] 'function int opal_crs_base_cleanup_flush()'    {opal_crs_base_cleanup_flush}
  [D] 'function int opal_crs_base_clear_options(opal_crs_base_ckpt_options_t*)'    {opal_crs_base_clear_options}
  [D] 'function int opal_crs_base_close()'    {opal_crs_base_close}
  [D] 'function int opal_crs_base_copy_options(opal_crs_base_ckpt_options_t*, opal_crs_base_ckpt_options_t*)'    {opal_crs_base_copy_options}
  [D] 'function int opal_crs_base_extract_expected_component(char*, char**, int*)'    {opal_crs_base_extract_expected_component}
  [D] 'function char* opal_crs_base_get_snapshot_directory(char*)'    {opal_crs_base_get_snapshot_directory}
  [D] 'function int opal_crs_base_init_snapshot_directory(opal_crs_base_snapshot_t*)'    {opal_crs_base_init_snapshot_directory}
  [D] 'function int opal_crs_base_metadata_read_token(char*, char*, char***)'    {opal_crs_base_metadata_read_token}
  [D] 'function int opal_crs_base_metadata_write_token(char*, char*, char*)'    {opal_crs_base_metadata_write_token}
  [D] 'function int opal_crs_base_open()'    {opal_crs_base_open}
  [D] 'function int opal_crs_base_select()'    {opal_crs_base_select}
  [D] 'function char* opal_crs_base_state_str(opal_crs_state_type_t)'    {opal_crs_base_state_str}
  [D] 'function char* opal_crs_base_unique_snapshot_name(pid_t)'    {opal_crs_base_unique_snapshot_name}
  [D] 'function int opal_crs_none_checkpoint(pid_t, opal_crs_base_snapshot_t*, opal_crs_base_ckpt_options_t*, opal_crs_state_type_t*)'    {opal_crs_none_checkpoint}
  [D] 'function int opal_crs_none_component_query(mca_base_module_t**, int*)'    {opal_crs_none_component_query}
  [D] 'function int opal_crs_none_module_finalize()'    {opal_crs_none_module_finalize}
  [D] 'function int opal_crs_none_module_init()'    {opal_crs_none_module_init}
  [D] 'function int opal_crs_none_prelaunch(int32_t, char*, char**, char**, char***, char***)'    {opal_crs_none_prelaunch}
  [D] 'function int opal_crs_none_restart(opal_crs_base_snapshot_t*, bool, pid_t*)'    {opal_crs_none_restart}
  [D] 'function unsigned long int opal_csum_partial(void*, size_t, unsigned long int*, size_t*)'    {opal_csum_partial}
  [D] 'function int opal_daemon_init(char*)'    {opal_daemon_init}
  [D] 'function int32_t opal_datatype_add(opal_datatype_t*, const opal_datatype_t*, uint32_t, ptrdiff_t, ptrdiff_t)'    {opal_datatype_add}
  [D] 'function int32_t opal_datatype_clone(const opal_datatype_t*, opal_datatype_t*)'    {opal_datatype_clone}
  [D] 'function int32_t opal_datatype_commit(opal_datatype_t*)'    {opal_datatype_commit}
  [D] 'function int opal_datatype_contain_basic_datatypes(const opal_datatype_t*, char*, size_t)'    {opal_datatype_contain_basic_datatypes}
  [D] 'function int32_t opal_datatype_copy_content_same_ddt(const opal_datatype_t*, int32_t, char*, char*)'    {opal_datatype_copy_content_same_ddt}
  [D] 'function opal_datatype_t* opal_datatype_create(int32_t)'    {opal_datatype_create}
  [D] 'function int32_t opal_datatype_create_contiguous(int, const opal_datatype_t*, opal_datatype_t**)'    {opal_datatype_create_contiguous}
  [D] 'function int32_t opal_datatype_create_desc(opal_datatype_t*, int32_t)'    {opal_datatype_create_desc}
  [D] 'function int32_t opal_datatype_destroy(opal_datatype_t**)'    {opal_datatype_destroy}
  [D] 'function void opal_datatype_dump(const opal_datatype_t*)'    {opal_datatype_dump}
  [D] 'function int opal_datatype_dump_data_desc(dt_elem_desc_t*, int, char*, size_t)'    {opal_datatype_dump_data_desc}
  [D] 'function int opal_datatype_dump_data_flags(unsigned short int, char*, size_t)'    {opal_datatype_dump_data_flags}
  [D] 'function void opal_datatype_dump_stack(const dt_stack_t*, int, const dt_elem_desc*, const char*)'    {opal_datatype_dump_stack}
  [D] 'function int32_t opal_datatype_finalize()'    {opal_datatype_finalize}
  [D] 'function int32_t opal_datatype_get_element_count(const opal_datatype_t*, size_t)'    {opal_datatype_get_element_count}
  [D] 'function int32_t opal_datatype_init()'    {opal_datatype_init}
  [D] 'function int opal_datatype_register_params()'    {opal_datatype_register_params}
  [D] 'function int32_t opal_datatype_resize(opal_datatype_t*, ptrdiff_t, ptrdiff_t)'    {opal_datatype_resize}
  [D] 'function int32_t opal_datatype_set_element_count(const opal_datatype_t*, uint32_t, size_t*)'    {opal_datatype_set_element_count}
  [D] 'function char* opal_dirname(const char*)'    {opal_dirname}
  [D] 'function char* opal_dss_buffer_extend(opal_buffer_t*, size_t)'    {opal_dss_buffer_extend}
  [D] 'function int opal_dss_close()'    {opal_dss_close}
  [D] 'function int opal_dss_compare(void*, void*, opal_data_type_t)'    {opal_dss_compare}
  [D] 'function int opal_dss_compare_bool(bool*, bool*, opal_data_type_t)'    {opal_dss_compare_bool}
  [D] 'function int opal_dss_compare_byte(char*, char*, opal_data_type_t)'    {opal_dss_compare_byte}
  [D] 'function int opal_dss_compare_byte_object(opal_byte_object_t*, opal_byte_object_t*, opal_data_type_t)'    {opal_dss_compare_byte_object}
  [D] 'function int opal_dss_compare_data_value(opal_dss_value_t*, opal_dss_value_t*, opal_data_type_t)'    {opal_dss_compare_data_value}
  [D] 'function int opal_dss_compare_int(int*, int*, opal_data_type_t)'    {opal_dss_compare_int}
  [D] 'function int opal_dss_compare_int16(int16_t*, int16_t*, opal_data_type_t)'    {opal_dss_compare_int16}
  [D] 'function int opal_dss_compare_int64(int64_t*, int64_t*, opal_data_type_t)'    {opal_dss_compare_int64}
  [D] 'function int opal_dss_compare_int8(int8_t*, int8_t*, opal_data_type_t)'    {opal_dss_compare_int8}
  [D] 'function int opal_dss_compare_null(char*, char*, opal_data_type_t)'    {opal_dss_compare_null}
  [D] 'function int opal_dss_compare_size(size_t*, size_t*, opal_data_type_t)'    {opal_dss_compare_size}
  [D] 'function int opal_dss_compare_string(char*, char*, opal_data_type_t)'    {opal_dss_compare_string}
  [D] 'function int opal_dss_compare_uint(unsigned int*, unsigned int*, opal_data_type_t)'    {opal_dss_compare_uint}
  [D] 'function int opal_dss_compare_uint16(uint16_t*, uint16_t*, opal_data_type_t)'    {opal_dss_compare_uint16}
  [D] 'function int opal_dss_compare_uint8(uint8_t*, uint8_t*, opal_data_type_t)'    {opal_dss_compare_uint8}
  [D] 'function int opal_dss_copy(void**, void*, opal_data_type_t)'    {opal_dss_copy}
  [D] 'function int opal_dss_copy_byte_object(opal_byte_object_t**, opal_byte_object_t*, opal_data_type_t)'    {opal_dss_copy_byte_object}
  [D] 'function int opal_dss_copy_data_value(opal_dss_value_t**, opal_dss_value_t*, opal_data_type_t)'    {opal_dss_copy_data_value}
  [D] 'function int opal_dss_copy_null(char**, char*, opal_data_type_t)'    {opal_dss_copy_null}
  [D] 'function int opal_dss_copy_payload(opal_buffer_t*, opal_buffer_t*)'    {opal_dss_copy_payload}
  [D] 'function int opal_dss_copy_pstat(opal_pstats_t**, opal_pstats_t*, opal_data_type_t)'    {opal_dss_copy_pstat}
  [D] 'function int opal_dss_copy_string(char**, char*, opal_data_type_t)'    {opal_dss_copy_string}
  [D] 'function int opal_dss_dump(int, void*, opal_data_type_t)'    {opal_dss_dump}
  [D] 'function void opal_dss_dump_data_types(int)'    {opal_dss_dump_data_types}
  [D] 'function int opal_dss_get(void**, opal_dss_value_t*, opal_data_type_t)'    {opal_dss_get}
  [D] 'function int opal_dss_get_data_type(opal_buffer_t*, opal_data_type_t*)'    {opal_dss_get_data_type}
  [D] 'function int opal_dss_load(opal_buffer_t*, void*, int32_t)'    {opal_dss_load}
  [D] 'function char* opal_dss_lookup_data_type(opal_data_type_t)'    {opal_dss_lookup_data_type}
  [D] 'function int opal_dss_open()'    {opal_dss_open}
  [D] 'function int opal_dss_pack(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack}
  [D] 'function int opal_dss_pack_bool(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_bool}
  [D] 'function int opal_dss_pack_buffer(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_buffer}
  [D] 'function int opal_dss_pack_byte(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_byte}
  [D] 'function int opal_dss_pack_byte_object(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_byte_object}
  [D] 'function int opal_dss_pack_data_type(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_data_type}
  [D] 'function int opal_dss_pack_data_value(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_data_value}
  [D] 'function int opal_dss_pack_int(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_int}
  [D] 'function int opal_dss_pack_int16(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_int16}
  [D] 'function int opal_dss_pack_int32(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_int32}
  [D] 'function int opal_dss_pack_int64(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_int64}
  [D] 'function int opal_dss_pack_null(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_null}
  [D] 'function int opal_dss_pack_pid(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_pid}
  [D] 'function int opal_dss_pack_pstat(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_pstat}
  [D] 'function int opal_dss_pack_sizet(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_sizet}
  [D] 'function int opal_dss_pack_string(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_dss_pack_string}
  [D] 'function int opal_dss_peek(opal_buffer_t*, opal_data_type_t*, int32_t*)'    {opal_dss_peek}
  [D] 'function int opal_dss_peek_type(opal_buffer_t*, opal_data_type_t*)'    {opal_dss_peek_type}
  [D] 'function int opal_dss_print(char**, char*, void*, opal_data_type_t)'    {opal_dss_print}
  [D] 'function int opal_dss_print_bool(char**, char*, bool*, opal_data_type_t)'    {opal_dss_print_bool}
  [D] 'function int opal_dss_print_byte(char**, char*, uint8_t*, opal_data_type_t)'    {opal_dss_print_byte}
  [D] 'function int opal_dss_print_byte_object(char**, char*, opal_byte_object_t*, opal_data_type_t)'    {opal_dss_print_byte_object}
  [D] 'function int opal_dss_print_data_type(char**, char*, opal_data_type_t*, opal_data_type_t)'    {opal_dss_print_data_type}
  [D] 'function int opal_dss_print_data_value(char**, char*, opal_dss_value_t*, opal_data_type_t)'    {opal_dss_print_data_value}
  [D] 'function int opal_dss_print_int(char**, char*, int*, opal_data_type_t)'    {opal_dss_print_int}
  [D] 'function int opal_dss_print_int16(char**, char*, int16_t*, opal_data_type_t)'    {opal_dss_print_int16}
  [D] 'function int opal_dss_print_int32(char**, char*, int32_t*, opal_data_type_t)'    {opal_dss_print_int32}
  [D] 'function int opal_dss_print_int64(char**, char*, int64_t*, opal_data_type_t)'    {opal_dss_print_int64}
  [D] 'function int opal_dss_print_int8(char**, char*, int8_t*, opal_data_type_t)'    {opal_dss_print_int8}
  [D] 'function int opal_dss_print_null(char**, char*, void*, opal_data_type_t)'    {opal_dss_print_null}
  [D] 'function int opal_dss_print_pid(char**, char*, pid_t*, opal_data_type_t)'    {opal_dss_print_pid}
  [D] 'function int opal_dss_print_pstat(char**, char*, opal_pstats_t*, opal_data_type_t)'    {opal_dss_print_pstat}
  [D] 'function int opal_dss_print_size(char**, char*, size_t*, opal_data_type_t)'    {opal_dss_print_size}
  [D] 'function int opal_dss_print_string(char**, char*, char*, opal_data_type_t)'    {opal_dss_print_string}
  [D] 'function int opal_dss_print_uint(char**, char*, int*, opal_data_type_t)'    {opal_dss_print_uint}
  [D] 'function int opal_dss_print_uint16(char**, char*, uint16_t*, opal_data_type_t)'    {opal_dss_print_uint16}
  [D] 'function int opal_dss_print_uint32(char**, char*, uint32_t*, opal_data_type_t)'    {opal_dss_print_uint32}
  [D] 'function int opal_dss_print_uint64(char**, char*, uint64_t*, opal_data_type_t)'    {opal_dss_print_uint64}
  [D] 'function int opal_dss_print_uint8(char**, char*, uint8_t*, opal_data_type_t)'    {opal_dss_print_uint8}
  [D] 'function int opal_dss_register(opal_dss_pack_fn_t, opal_dss_unpack_fn_t, opal_dss_copy_fn_t, opal_dss_compare_fn_t, opal_dss_size_fn_t, opal_dss_print_fn_t, opal_dss_release_fn_t, bool, const char*, opal_data_type_t*)'    {opal_dss_register}
  [D] 'function void opal_dss_release(opal_dss_value_t*)'    {opal_dss_release}
  [D] 'function void opal_dss_release_byte_object(opal_dss_value_t*)'    {opal_dss_release_byte_object}
  [D] 'function int opal_dss_set(opal_dss_value_t*, void*, opal_data_type_t)'    {opal_dss_set}
  [D] 'function int opal_dss_set_buffer_type(opal_buffer_t*, opal_dss_buffer_type_t)'    {opal_dss_set_buffer_type}
  [D] 'function int opal_dss_size(size_t*, void*, opal_data_type_t)'    {opal_dss_size}
  [D] 'function int opal_dss_size_byte_object(size_t*, opal_byte_object_t*, opal_data_type_t)'    {opal_dss_size_byte_object}
  [D] 'function int opal_dss_size_data_value(size_t*, opal_dss_value_t*, opal_data_type_t)'    {opal_dss_size_data_value}
  [D] 'function int opal_dss_size_pstat(size_t*, opal_pstats_t*, opal_data_type_t)'    {opal_dss_size_pstat}
  [D] 'function int opal_dss_size_string(size_t*, char*, opal_data_type_t)'    {opal_dss_size_string}
  [D] 'function int opal_dss_std_copy(void**, void*, opal_data_type_t)'    {opal_dss_std_copy}
  [D] 'function void opal_dss_std_obj_release(opal_dss_value_t*)'    {opal_dss_std_obj_release}
  [D] 'function void opal_dss_std_release(opal_dss_value_t*)'    {opal_dss_std_release}
  [D] 'function int opal_dss_std_size(size_t*, void*, opal_data_type_t)'    {opal_dss_std_size}
  [D] 'function int opal_dss_store_data_type(opal_buffer_t*, opal_data_type_t)'    {opal_dss_store_data_type}
  [D] 'function bool opal_dss_too_small(opal_buffer_t*, size_t)'    {opal_dss_too_small}
  [D] 'function int opal_dss_unload(opal_buffer_t*, void**, int32_t*)'    {opal_dss_unload}
  [D] 'function int opal_dss_unpack(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack}
  [D] 'function int opal_dss_unpack_bool(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_bool}
  [D] 'function int opal_dss_unpack_buffer(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_buffer}
  [D] 'function int opal_dss_unpack_byte_object(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_byte_object}
  [D] 'function int opal_dss_unpack_data_type(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_data_type}
  [D] 'function int opal_dss_unpack_data_value(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_data_value}
  [D] 'function int opal_dss_unpack_int(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_int}
  [D] 'function int opal_dss_unpack_int16(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_int16}
  [D] 'function int opal_dss_unpack_int32(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_int32}
  [D] 'function int opal_dss_unpack_int64(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_int64}
  [D] 'function int opal_dss_unpack_null(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_null}
  [D] 'function int opal_dss_unpack_pid(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_pid}
  [D] 'function int opal_dss_unpack_pstat(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_pstat}
  [D] 'function int opal_dss_unpack_sizet(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_sizet}
  [D] 'function int opal_dss_unpack_string(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_dss_unpack_string}
  [D] 'function char* opal_dtostr(double)'    {opal_dtostr}
  [D] 'function char** opal_environ_merge(char**, char**)'    {opal_environ_merge}
  [D] 'function int opal_error_register(const char*, int, int, opal_err2str_fn_t)'    {opal_error_register}
  [D] 'function void opal_event_active_i(opal_event*, int, short int)'    {opal_event_active_i}
  [D] 'function int opal_event_add_i(opal_event*, const timeval*)'    {opal_event_add_i}
  [D] 'function int opal_event_base_dispatch(opal_event_base*)'    {opal_event_base_dispatch}
  [D] 'function void opal_event_base_free(opal_event_base*)'    {opal_event_base_free}
  [D] 'function const char* opal_event_base_get_method(opal_event_base*)'    {opal_event_base_get_method}
  [D] 'function int opal_event_base_loop(opal_event_base*, int)'    {opal_event_base_loop}
  [D] 'function int opal_event_base_loopbreak(opal_event_base*)'    {opal_event_base_loopbreak}
  [D] 'function int opal_event_base_loopexit(opal_event_base*, const timeval*)'    {opal_event_base_loopexit}
  [D] 'function opal_event_base* opal_event_base_new()'    {opal_event_base_new}
  [D] 'function int opal_event_base_once(opal_event_base*, int, short int, void (int, short int, void*)*, void*, const timeval*)'    {opal_event_base_once}
  [D] 'function int opal_event_base_priority_init(opal_event_base*, int)'    {opal_event_base_priority_init}
  [D] 'function int opal_event_base_set(opal_event_base*, opal_event*)'    {opal_event_base_set}
  [D] 'function int opal_event_del_i(opal_event*)'    {opal_event_del_i}
  [D] 'function int opal_event_disable()'    {opal_event_disable}
  [D] 'function int opal_event_dispatch()'    {opal_event_dispatch}
  [D] 'function int opal_event_enable()'    {opal_event_enable}
  [D] 'function void opal_event_err(int, const char*, ...)'    {opal_event_err}
  [D] 'function void opal_event_errx(int, const char*, ...)'    {opal_event_errx}
  [D] 'function int opal_event_fini()'    {opal_event_fini}
  [D] 'function const char* opal_event_get_method()'    {opal_event_get_method}
  [D] 'function const char* opal_event_get_version()'    {opal_event_get_version}
  [D] 'function int opal_event_init()'    {opal_event_init}
  [D] 'function int opal_event_loop(int)'    {opal_event_loop}
  [D] 'function int opal_event_loopbreak()'    {opal_event_loopbreak}
  [D] 'function int opal_event_loopexit(const timeval*)'    {opal_event_loopexit}
  [D] 'function void opal_event_msgx(const char*, ...)'    {opal_event_msgx}
  [D] 'function int opal_event_once(int, short int, void (int, short int, void*)*, void*, const timeval*)'    {opal_event_once}
  [D] 'function int opal_event_pending(opal_event*, short int, timeval*)'    {opal_event_pending}
  [D] 'function int opal_event_priority_init(int)'    {opal_event_priority_init}
  [D] 'function int opal_event_priority_set(opal_event*, int)'    {opal_event_priority_set}
  [D] 'function bool opal_event_progress_thread()'    {opal_event_progress_thread}
  [D] 'function int opal_event_reinit(opal_event_base*)'    {opal_event_reinit}
  [D] 'function int opal_event_restart()'    {opal_event_restart}
  [D] 'function void opal_event_set(opal_event*, int, short int, void (int, short int, void*)*, void*)'    {opal_event_set}
  [D] 'function void opal_event_set_log_callback(event_log_cb)'    {opal_event_set_log_callback}
  [D] 'function void opal_event_warn(const char*, ...)'    {opal_event_warn}
  [D] 'function void opal_event_warnx(const char*, ...)'    {opal_event_warnx}
  [D] 'function int opal_evsignal_add(opal_event*)'    {opal_evsignal_add}
  [D] 'function void opal_evsignal_dealloc(opal_event_base*)'    {opal_evsignal_dealloc}
  [D] 'function int opal_evsignal_del(opal_event*)'    {opal_evsignal_del}
  [D] 'function int opal_evsignal_init(opal_event_base*)'    {opal_evsignal_init}
  [D] 'function void opal_evsignal_process(opal_event_base*)'    {opal_evsignal_process}
  [D] 'function int opal_evutil_make_socket_nonblocking(int)'    {opal_evutil_make_socket_nonblocking}
  [D] 'function int opal_evutil_socketpair(int, int, int, int*)'    {opal_evutil_socketpair}
  [D] 'function int opal_fd_read(int, int, void*)'    {opal_fd_read}
  [D] 'function int opal_fd_write(int, int, void*)'    {opal_fd_write}
  [D] 'function int opal_few(char**, int*)'    {opal_few}
  [D] 'function int opal_finalize()'    {opal_finalize}
  [D] 'function int opal_finalize_util()'    {opal_finalize_util}
  [D] 'function char* opal_find_absolute_path(char*)'    {opal_find_absolute_path}
  [D] 'function void opal_free(void*, const char*, int)'    {opal_free}
  [D] 'function int opal_free_list_grow(opal_free_list_t*, size_t)'    {opal_free_list_grow}
  [D] 'function int opal_free_list_init(opal_free_list_t*, size_t, opal_class_t*, int, int, int)'    {opal_free_list_init}
  [D] 'function int32_t opal_generic_simple_pack(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_generic_simple_pack}
  [D] 'function int32_t opal_generic_simple_pack_checksum(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_generic_simple_pack_checksum}
  [D] 'function int32_t opal_generic_simple_unpack(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_generic_simple_unpack}
  [D] 'function int32_t opal_generic_simple_unpack_checksum(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_generic_simple_unpack_checksum}
  [D] 'function int opal_getcwd(char*, size_t)'    {opal_getcwd}
  [D] 'function int opal_graph_add_edge(opal_graph_t*, opal_graph_edge_t*)'    {opal_graph_add_edge}
  [D] 'function void opal_graph_add_vertex(opal_graph_t*, opal_graph_vertex_t*)'    {opal_graph_add_vertex}
  [D] 'function uint32_t opal_graph_adjacent(opal_graph_t*, opal_graph_vertex_t*, opal_graph_vertex_t*)'    {opal_graph_adjacent}
  [D] 'function uint32_t opal_graph_dijkstra(opal_graph_t*, opal_graph_vertex_t*, opal_value_array_t*)'    {opal_graph_dijkstra}
  [D] 'function void opal_graph_duplicate(opal_graph_t**, opal_graph_t*)'    {opal_graph_duplicate}
  [D] 'function opal_graph_vertex_t* opal_graph_find_vertex(opal_graph_t*, void*)'    {opal_graph_find_vertex}
  [D] 'function int opal_graph_get_adjacent_vertices(opal_graph_t*, opal_graph_vertex_t*, opal_value_array_t*)'    {opal_graph_get_adjacent_vertices}
  [D] 'function int opal_graph_get_graph_vertices(opal_graph_t*, opal_pointer_array_t*)'    {opal_graph_get_graph_vertices}
  [D] 'function int opal_graph_get_order(opal_graph_t*)'    {opal_graph_get_order}
  [D] 'function int opal_graph_get_size(opal_graph_t*)'    {opal_graph_get_size}
  [D] 'function void opal_graph_print(opal_graph_t*)'    {opal_graph_print}
  [D] 'function void opal_graph_remove_edge(opal_graph_t*, opal_graph_edge_t*)'    {opal_graph_remove_edge}
  [D] 'function void opal_graph_remove_vertex(opal_graph_t*, opal_graph_vertex_t*)'    {opal_graph_remove_vertex}
  [D] 'function uint32_t opal_graph_spf(opal_graph_t*, opal_graph_vertex_t*, opal_graph_vertex_t*)'    {opal_graph_spf}
  [D] 'function int opal_hash_table_get_first_key_uint32(opal_hash_table_t*, uint32_t*, void**, void**)'    {opal_hash_table_get_first_key_uint32}
  [D] 'function int opal_hash_table_get_first_key_uint64(opal_hash_table_t*, uint64_t*, void**, void**)'    {opal_hash_table_get_first_key_uint64}
  [D] 'function int opal_hash_table_get_next_key_uint32(opal_hash_table_t*, uint32_t*, void**, void*, void**)'    {opal_hash_table_get_next_key_uint32}
  [D] 'function int opal_hash_table_get_next_key_uint64(opal_hash_table_t*, uint64_t*, void**, void*, void**)'    {opal_hash_table_get_next_key_uint64}
  [D] 'function int opal_hash_table_get_value_ptr(opal_hash_table_t*, void*, size_t, void**)'    {opal_hash_table_get_value_ptr}
  [D] 'function int opal_hash_table_get_value_uint32(opal_hash_table_t*, uint32_t, void**)'    {opal_hash_table_get_value_uint32}
  [D] 'function int opal_hash_table_get_value_uint64(opal_hash_table_t*, uint64_t, void**)'    {opal_hash_table_get_value_uint64}
  [D] 'function int opal_hash_table_init(opal_hash_table_t*, size_t)'    {opal_hash_table_init}
  [D] 'function int opal_hash_table_remove_all(opal_hash_table_t*)'    {opal_hash_table_remove_all}
  [D] 'function int opal_hash_table_remove_value_ptr(opal_hash_table_t*, void*, size_t)'    {opal_hash_table_remove_value_ptr}
  [D] 'function int opal_hash_table_remove_value_uint32(opal_hash_table_t*, uint32_t)'    {opal_hash_table_remove_value_uint32}
  [D] 'function int opal_hash_table_remove_value_uint64(opal_hash_table_t*, uint64_t)'    {opal_hash_table_remove_value_uint64}
  [D] 'function int opal_hash_table_set_value_ptr(opal_hash_table_t*, void*, size_t, void*)'    {opal_hash_table_set_value_ptr}
  [D] 'function int opal_hash_table_set_value_uint32(opal_hash_table_t*, uint32_t, void*)'    {opal_hash_table_set_value_uint32}
  [D] 'function int opal_hash_table_set_value_uint64(opal_hash_table_t*, uint64_t, void*)'    {opal_hash_table_set_value_uint64}
  [D] 'function const char* opal_home_directory()'    {opal_home_directory}
  [D] 'function int opal_hwloc_base_close()'    {opal_hwloc_base_close}
  [D] 'function int opal_hwloc_base_open()'    {opal_hwloc_base_open}
  [D] 'function int opal_hwloc_base_report_bind_failure(const char*, int, const char*, int)'    {opal_hwloc_base_report_bind_failure}
  [D] 'function int opal_hwloc_base_set_process_membind_policy()'    {opal_hwloc_base_set_process_membind_policy}
  [D] 'function int opal_hwloc_compare(const hwloc_topology_t, const hwloc_topology_t, opal_data_type_t)'    {opal_hwloc_compare}
  [D] 'function int opal_hwloc_copy(hwloc_topology_t*, hwloc_topology_t, opal_data_type_t)'    {opal_hwloc_copy}
  [D] 'function int opal_hwloc_pack(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {opal_hwloc_pack}
  [D] 'function int opal_hwloc_print(char**, char*, hwloc_topology_t, opal_data_type_t)'    {opal_hwloc_print}
  [D] 'function void opal_hwloc_release(opal_dss_value_t*)'    {opal_hwloc_release}
  [D] 'function int opal_hwloc_size(size_t*, hwloc_topology_t, opal_data_type_t)'    {opal_hwloc_size}
  [D] 'function int opal_hwloc_unpack(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {opal_hwloc_unpack}
  [D] 'function int opal_ifaddrtoname(const char*, char*, int)'    {opal_ifaddrtoname}
  [D] 'function int opal_ifbegin()'    {opal_ifbegin}
  [D] 'function int opal_ifcount()'    {opal_ifcount}
  [D] 'function int opal_iffinalize()'    {opal_iffinalize}
  [D] 'function int opal_ifindextoaddr(int, sockaddr*, unsigned int)'    {opal_ifindextoaddr}
  [D] 'function int opal_ifindextoflags(int, uint32_t*)'    {opal_ifindextoflags}
  [D] 'function int opal_ifindextokindex(int)'    {opal_ifindextokindex}
  [D] 'function int opal_ifindextomask(int, uint32_t*, int)'    {opal_ifindextomask}
  [D] 'function int opal_ifindextoname(int, char*, int)'    {opal_ifindextoname}
  [D] 'function bool opal_ifislocal(const char*)'    {opal_ifislocal}
  [D] 'function bool opal_ifisloopback(int)'    {opal_ifisloopback}
  [D] 'function int opal_ifkindextoname(int, char*, int)'    {opal_ifkindextoname}
  [D] 'function int opal_ifnametoaddr(const char*, sockaddr*, int)'    {opal_ifnametoaddr}
  [D] 'function int opal_ifnametoindex(const char*)'    {opal_ifnametoindex}
  [D] 'function int16_t opal_ifnametokindex(const char*)'    {opal_ifnametokindex}
  [D] 'function int opal_ifnext(int)'    {opal_ifnext}
  [D] 'function int opal_iftupletoaddr(char*, uint32_t*, uint32_t*)'    {opal_iftupletoaddr}
  [D] 'function int opal_init(int*, char***)'    {opal_init}
  [D] 'function int opal_init_util(int*, char***)'    {opal_init_util}
  [D] 'function void opal_initialize_crc_table()'    {opal_initialize_crc_table}
  [D] 'function char* opal_install_dirs_expand(const char*)'    {opal_install_dirs_expand}
  [D] 'function char* opal_install_dirs_expand_setup(const char*)'    {opal_install_dirs_expand_setup}
  [D] 'function int opal_installdirs_base_close()'    {opal_installdirs_base_close}
  [D] 'function int opal_installdirs_base_open()'    {opal_installdirs_base_open}
  [D] 'function bool opal_list_insert(opal_list_t*, opal_list_item_t*, long long int)'    {opal_list_insert}
  [D] 'function void opal_list_join(opal_list_t*, opal_list_item_t*, opal_list_t*)'    {opal_list_join}
  [D] 'function int opal_list_sort(opal_list_t*, opal_list_item_compare_fn_t)'    {opal_list_sort}
  [D] 'function void opal_list_splice(opal_list_t*, opal_list_item_t*, opal_list_t*, opal_list_item_t*, opal_list_item_t*)'    {opal_list_splice}
  [D] 'function char* opal_ltostr(long int)'    {opal_ltostr}
  [D] 'function int opal_maffinity_base_bind(opal_maffinity_base_segment_t*, size_t, int)'    {opal_maffinity_base_bind}
  [D] 'function int opal_maffinity_base_close()'    {opal_maffinity_base_close}
  [D] 'function int opal_maffinity_base_node_name_to_id(char*, int*)'    {opal_maffinity_base_node_name_to_id}
  [D] 'function int opal_maffinity_base_open()'    {opal_maffinity_base_open}
  [D] 'function int opal_maffinity_base_select()'    {opal_maffinity_base_select}
  [D] 'function int opal_maffinity_base_set(opal_maffinity_base_segment_t*, size_t)'    {opal_maffinity_base_set}
  [D] 'function int opal_maffinity_first_use_component_query(mca_base_module_t**, int*)'    {opal_maffinity_first_use_component_query}
  [D] 'function int opal_maffinity_hwloc_component_query(mca_base_module_t**, int*)'    {opal_maffinity_hwloc_component_query}
  [D] 'function void* opal_malloc(size_t, const char*, int)'    {opal_malloc}
  [D] 'function void opal_malloc_debug(int)'    {opal_malloc_debug}
  [D] 'function void opal_malloc_finalize()'    {opal_malloc_finalize}
  [D] 'function void opal_malloc_init()'    {opal_malloc_init}
  [D] 'function int opal_mem_hooks_finalize()'    {opal_mem_hooks_finalize}
  [D] 'function int opal_mem_hooks_init()'    {opal_mem_hooks_init}
  [D] 'function int opal_mem_hooks_register_release(opal_mem_hooks_callback_fn_t*, void*)'    {opal_mem_hooks_register_release}
  [D] 'function void opal_mem_hooks_release_hook(void*, size_t, bool)'    {opal_mem_hooks_release_hook}
  [D] 'function void opal_mem_hooks_set_support(int)'    {opal_mem_hooks_set_support}
  [D] 'function int opal_mem_hooks_support_level()'    {opal_mem_hooks_support_level}
  [D] 'function int opal_mem_hooks_unregister_release(opal_mem_hooks_callback_fn_t*)'    {opal_mem_hooks_unregister_release}
  [D] 'function int opal_memchecker_base_close()'    {opal_memchecker_base_close}
  [D] 'function int opal_memchecker_base_open()'    {opal_memchecker_base_open}
  [D] 'function int opal_memchecker_base_select()'    {opal_memchecker_base_select}
  [D] 'function int opal_memcpy_base_close()'    {opal_memcpy_base_close}
  [D] 'function int opal_memcpy_base_open()'    {opal_memcpy_base_open}
  [D] 'function int opal_memory_base_close()'    {opal_memory_base_close}
  [D] 'function int opal_memory_base_component_register_empty(void*, size_t, uint64_t)'    {opal_memory_base_component_register_empty}
  [D] 'function int opal_memory_base_open()'    {opal_memory_base_open}
  [D] 'function bool opal_net_addr_isipv4public(const sockaddr*)'    {opal_net_addr_isipv4public}
  [D] 'function int opal_net_finalize()'    {opal_net_finalize}
  [D] 'function char* opal_net_get_hostname(const sockaddr*)'    {opal_net_get_hostname}
  [D] 'function int opal_net_get_port(const sockaddr*)'    {opal_net_get_port}
  [D] 'function int opal_net_init()'    {opal_net_init}
  [D] 'function bool opal_net_islocalhost(const sockaddr*)'    {opal_net_islocalhost}
  [D] 'function uint32_t opal_net_prefix2netmask(uint32_t)'    {opal_net_prefix2netmask}
  [D] 'function bool opal_net_samenetwork(const sockaddr*, const sockaddr*, uint32_t)'    {opal_net_samenetwork}
  [D] 'function int opal_openpty(int*, int*, char*, termios*, winsize*)'    {opal_openpty}
  [D] 'function int opal_os_dirpath_access(const char*, const mode_t)'    {opal_os_dirpath_access}
  [D] 'function int opal_os_dirpath_create(const char*, const mode_t)'    {opal_os_dirpath_create}
  [D] 'function int opal_os_dirpath_destroy(const char*, bool, opal_os_dirpath_destroy_callback_fn_t)'    {opal_os_dirpath_destroy}
  [D] 'function bool opal_os_dirpath_is_empty(const char*)'    {opal_os_dirpath_is_empty}
  [D] 'function char* opal_os_path(bool, ...)'    {opal_os_path}
  [D] 'function void opal_output(int, const char*, ...)'    {opal_output}
  [D] 'function void opal_output_close(int)'    {opal_output_close}
  [D] 'function void opal_output_finalize()'    {opal_output_finalize}
  [D] 'function int opal_output_get_verbosity(int)'    {opal_output_get_verbosity}
  [D] 'function bool opal_output_init()'    {opal_output_init}
  [D] 'function int opal_output_open(opal_output_stream_t*)'    {opal_output_open}
  [D] 'function int opal_output_reopen(int, opal_output_stream_t*)'    {opal_output_reopen}
  [D] 'function void opal_output_reopen_all()'    {opal_output_reopen_all}
  [D] 'function void opal_output_set_output_file_info(const char*, const char*, char**, char**)'    {opal_output_set_output_file_info}
  [D] 'function void opal_output_set_verbosity(int, int)'    {opal_output_set_verbosity}
  [D] 'function char* opal_output_string(int, int, const char*, ...)'    {opal_output_string}
  [D] 'function bool opal_output_switch(int, bool)'    {opal_output_switch}
  [D] 'function void opal_output_verbose(int, int, const char*, ...)'    {opal_output_verbose}
  [D] 'function char* opal_output_vstring(int, int, const char*, __va_list_tag*)'    {opal_output_vstring}
  [D] 'function void opal_output_vverbose(int, int, const char*, __va_list_tag*)'    {opal_output_vverbose}
  [D] 'function int32_t opal_pack_homogeneous_contig(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_pack_homogeneous_contig}
  [D] 'function int32_t opal_pack_homogeneous_contig_checksum(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_pack_homogeneous_contig_checksum}
  [D] 'function int32_t opal_pack_homogeneous_contig_with_gaps(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_pack_homogeneous_contig_with_gaps}
  [D] 'function int32_t opal_pack_homogeneous_contig_with_gaps_checksum(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_pack_homogeneous_contig_with_gaps_checksum}
  [D] 'function int opal_paffinity_base_close()'    {opal_paffinity_base_close}
  [D] 'function int opal_paffinity_base_cset2mapstr(char*, int, opal_paffinity_base_cpu_set_t*)'    {opal_paffinity_base_cset2mapstr}
  [D] 'function int opal_paffinity_base_cset2str(char*, int, opal_paffinity_base_cpu_set_t*)'    {opal_paffinity_base_cset2str}
  [D] 'function int opal_paffinity_base_get(opal_paffinity_base_cpu_set_t*)'    {opal_paffinity_base_get}
  [D] 'function int opal_paffinity_base_get_core_info(int, int*)'    {opal_paffinity_base_get_core_info}
  [D] 'function int opal_paffinity_base_get_map_to_processor_id(int, int, int*)'    {opal_paffinity_base_get_map_to_processor_id}
  [D] 'function int opal_paffinity_base_get_map_to_socket_core(int, int*, int*)'    {opal_paffinity_base_get_map_to_socket_core}
  [D] 'function int opal_paffinity_base_get_physical_core_id(int, int)'    {opal_paffinity_base_get_physical_core_id}
  [D] 'function int opal_paffinity_base_get_physical_processor_id(int)'    {opal_paffinity_base_get_physical_processor_id}
  [D] 'function int opal_paffinity_base_get_physical_socket_id(int)'    {opal_paffinity_base_get_physical_socket_id}
  [D] 'function int opal_paffinity_base_get_processor_info(int*)'    {opal_paffinity_base_get_processor_info}
  [D] 'function int opal_paffinity_base_get_socket_info(int*)'    {opal_paffinity_base_get_socket_info}
  [D] 'function int opal_paffinity_base_open()'    {opal_paffinity_base_open}
  [D] 'function int opal_paffinity_base_parse_binding(char*, opal_paffinity_base_cpu_set_t*)'    {opal_paffinity_base_parse_binding}
  [D] 'function char* opal_paffinity_base_print_binding(opal_paffinity_base_cpu_set_t)'    {opal_paffinity_base_print_binding}
  [D] 'function int opal_paffinity_base_register_params()'    {opal_paffinity_base_register_params}
  [D] 'function int opal_paffinity_base_select()'    {opal_paffinity_base_select}
  [D] 'function int opal_paffinity_base_set(opal_paffinity_base_cpu_set_t)'    {opal_paffinity_base_set}
  [D] 'function int opal_paffinity_base_slot_list_set(long int, char*)'    {opal_paffinity_base_slot_list_set}
  [D] 'function int opal_paffinity_hwloc_component_query(mca_base_module_t**, int*)'    {opal_paffinity_hwloc_component_query}
  [D] 'function char* opal_path_access(char*, char*, int)'    {opal_path_access}
  [D] 'function char* opal_path_find(char*, char**, int, char**)'    {opal_path_find}
  [D] 'function char* opal_path_findv(char*, int, char**, char*)'    {opal_path_findv}
  [D] 'function bool opal_path_is_absolute(const char*)'    {opal_path_is_absolute}
  [D] 'function bool opal_path_nfs(char*)'    {opal_path_nfs}
  [D] 'function void opal_perror(int, const char*)'    {opal_perror}
  [D] 'function int opal_pointer_array_add(opal_pointer_array_t*, void*)'    {opal_pointer_array_add}
  [D] 'function int opal_pointer_array_init(opal_pointer_array_t*, int, int, int)'    {opal_pointer_array_init}
  [D] 'function int opal_pointer_array_set_item(opal_pointer_array_t*, int, void*)'    {opal_pointer_array_set_item}
  [D] 'function int opal_pointer_array_set_size(opal_pointer_array_t*, int)'    {opal_pointer_array_set_size}
  [D] 'function bool opal_pointer_array_test_and_set_item(opal_pointer_array_t*, int, void*)'    {opal_pointer_array_test_and_set_item}
  [D] 'function void opal_progress()'    {opal_progress}
  [D] 'function void opal_progress_event_users_decrement()'    {opal_progress_event_users_decrement}
  [D] 'function void opal_progress_event_users_increment()'    {opal_progress_event_users_increment}
  [D] 'function int opal_progress_finalize()'    {opal_progress_finalize}
  [D] 'function int opal_progress_init()'    {opal_progress_init}
  [D] 'function int opal_progress_register(opal_progress_callback_t)'    {opal_progress_register}
  [D] 'function int opal_progress_set_event_flag(int)'    {opal_progress_set_event_flag}
  [D] 'function void opal_progress_set_event_poll_rate(int)'    {opal_progress_set_event_poll_rate}
  [D] 'function bool opal_progress_set_yield_when_idle(bool)'    {opal_progress_set_yield_when_idle}
  [D] 'function int opal_progress_unregister(opal_progress_callback_t)'    {opal_progress_unregister}
  [D] 'function int opal_pstat_base_close()'    {opal_pstat_base_close}
  [D] 'function int opal_pstat_base_open()'    {opal_pstat_base_open}
  [D] 'function int opal_pstat_base_select()'    {opal_pstat_base_select}
  [D] 'function void* opal_realloc(void*, size_t, const char*, int)'    {opal_realloc}
  [D] 'function int opal_register_params()'    {opal_register_params}
  [D] 'function int opal_ring_buffer_init(opal_ring_buffer_t*, int)'    {opal_ring_buffer_init}
  [D] 'function void* opal_ring_buffer_poke(opal_ring_buffer_t*, int)'    {opal_ring_buffer_poke}
  [D] 'function void* opal_ring_buffer_pop(opal_ring_buffer_t*)'    {opal_ring_buffer_pop}
  [D] 'function void* opal_ring_buffer_push(opal_ring_buffer_t*, void*)'    {opal_ring_buffer_push}
  [D] 'function int opal_setenv(const char*, const char*, bool, char***)'    {opal_setenv}
  [D] 'function char* opal_shmem_base_best_runnable_component_name()'    {opal_shmem_base_best_runnable_component_name}
  [D] 'function int opal_shmem_base_close()'    {opal_shmem_base_close}
  [D] 'function int opal_shmem_base_open()'    {opal_shmem_base_open}
  [D] 'function int opal_shmem_base_register_params()'    {opal_shmem_base_register_params}
  [D] 'function int opal_shmem_base_runtime_query(mca_base_module_t**, mca_base_component_t**)'    {opal_shmem_base_runtime_query}
  [D] 'function int opal_shmem_base_select()'    {opal_shmem_base_select}
  [D] 'function int opal_shmem_ds_copy(const opal_shmem_ds_t*, opal_shmem_ds_t*)'    {opal_shmem_ds_copy}
  [D] 'function void* opal_shmem_segment_attach(opal_shmem_ds_t*)'    {opal_shmem_segment_attach}
  [D] 'function int opal_shmem_segment_create(opal_shmem_ds_t*, const char*, size_t)'    {opal_shmem_segment_create}
  [D] 'function int opal_shmem_segment_detach(opal_shmem_ds_t*)'    {opal_shmem_segment_detach}
  [D] 'function int opal_shmem_unlink(opal_shmem_ds_t*)'    {opal_shmem_unlink}
  [D] 'function int opal_show_help_add_dir(const char*)'    {opal_show_help_add_dir}
  [D] 'function int opal_show_help_finalize()'    {opal_show_help_finalize}
  [D] 'function int opal_show_help_finish_parsing()'    {opal_show_help_finish_parsing}
  [D] 'function int opal_show_help_init()'    {opal_show_help_init}
  [D] 'function int opal_show_help_init_buffer(FILE*)'    {opal_show_help_init_buffer}
  [D] 'function char* opal_show_help_string(const char*, const char*, bool, ...)'    {opal_show_help_string}
  [D] 'function char* opal_show_help_vstring(const char*, const char*, bool, __va_list_tag*)'    {opal_show_help_vstring}
  [D] 'function YY_BUFFER_STATE opal_show_help_yy_create_buffer(FILE*, int)'    {opal_show_help_yy_create_buffer}
  [D] 'function void opal_show_help_yy_delete_buffer(YY_BUFFER_STATE)'    {opal_show_help_yy_delete_buffer}
  [D] 'function void opal_show_help_yy_flush_buffer(YY_BUFFER_STATE)'    {opal_show_help_yy_flush_buffer}
  [D] 'function YY_BUFFER_STATE opal_show_help_yy_scan_buffer(char*, yy_size_t)'    {opal_show_help_yy_scan_buffer}
  [D] 'function YY_BUFFER_STATE opal_show_help_yy_scan_bytes(const char*, int)'    {opal_show_help_yy_scan_bytes}
  [D] 'function YY_BUFFER_STATE opal_show_help_yy_scan_string(const char*)'    {opal_show_help_yy_scan_string}
  [D] 'function void opal_show_help_yy_switch_to_buffer(YY_BUFFER_STATE)'    {opal_show_help_yy_switch_to_buffer}
  [D] 'function void* opal_show_help_yyalloc(yy_size_t)'    {opal_show_help_yyalloc}
  [D] 'function void opal_show_help_yyfree(void*)'    {opal_show_help_yyfree}
  [D] 'function int opal_show_help_yyget_debug()'    {opal_show_help_yyget_debug}
  [D] 'function FILE* opal_show_help_yyget_in()'    {opal_show_help_yyget_in}
  [D] 'function int opal_show_help_yyget_leng()'    {opal_show_help_yyget_leng}
  [D] 'function int opal_show_help_yyget_lineno()'    {opal_show_help_yyget_lineno}
  [D] 'function FILE* opal_show_help_yyget_out()'    {opal_show_help_yyget_out}
  [D] 'function char* opal_show_help_yyget_text()'    {opal_show_help_yyget_text}
  [D] 'function int opal_show_help_yylex()'    {opal_show_help_yylex}
  [D] 'function int opal_show_help_yylex_destroy()'    {opal_show_help_yylex_destroy}
  [D] 'function void opal_show_help_yypop_buffer_state()'    {opal_show_help_yypop_buffer_state}
  [D] 'function void opal_show_help_yypush_buffer_state(YY_BUFFER_STATE)'    {opal_show_help_yypush_buffer_state}
  [D] 'function void* opal_show_help_yyrealloc(void*, yy_size_t)'    {opal_show_help_yyrealloc}
  [D] 'function void opal_show_help_yyrestart(FILE*)'    {opal_show_help_yyrestart}
  [D] 'function void opal_show_help_yyset_debug(int)'    {opal_show_help_yyset_debug}
  [D] 'function void opal_show_help_yyset_in(FILE*)'    {opal_show_help_yyset_in}
  [D] 'function void opal_show_help_yyset_lineno(int)'    {opal_show_help_yyset_lineno}
  [D] 'function void opal_show_help_yyset_out(FILE*)'    {opal_show_help_yyset_out}
  [D] 'function int opal_size2int(size_t, int*, bool)'    {opal_size2int}
  [D] 'function int opal_snprintf(char*, size_t, const char*, ...)'    {opal_snprintf}
  [D] 'function void opal_stackframe_output(int)'    {opal_stackframe_output}
  [D] 'function const char* opal_strerror(int)'    {opal_strerror}
  [D] 'function int opal_strerror_r(int, char*, size_t)'    {opal_strerror_r}
  [D] 'function char* opal_strncpy(char*, const char*, size_t)'    {opal_strncpy}
  [D] 'function int opal_sysinfo_base_close()'    {opal_sysinfo_base_close}
  [D] 'function int opal_sysinfo_base_open()'    {opal_sysinfo_base_open}
  [D] 'function int opal_sysinfo_base_select()'    {opal_sysinfo_base_select}
  [D] 'function opal_thread_t* opal_thread_get_self()'    {opal_thread_get_self}
  [D] 'function int opal_thread_join(opal_thread_t*, void**)'    {opal_thread_join}
  [D] 'function bool opal_thread_self_compare(opal_thread_t*)'    {opal_thread_self_compare}
  [D] 'function int opal_thread_start(opal_thread_t*)'    {opal_thread_start}
  [D] 'function int opal_timer_base_close()'    {opal_timer_base_close}
  [D] 'function int opal_timer_base_open()'    {opal_timer_base_open}
  [D] 'function const char* opal_tmp_directory()'    {opal_tmp_directory}
  [D] 'function void opal_trace_init()'    {opal_trace_init}
  [D] 'function unsigned int opal_uicrc_partial(void*, size_t, unsigned int)'    {opal_uicrc_partial}
  [D] 'function unsigned int opal_uicsum_partial(void*, size_t, unsigned int*, size_t*)'    {opal_uicsum_partial}
  [D] 'function int32_t opal_unpack_general(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_unpack_general}
  [D] 'function int32_t opal_unpack_general_checksum(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_unpack_general_checksum}
  [D] 'function int32_t opal_unpack_homogeneous_contig(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_unpack_homogeneous_contig}
  [D] 'function int32_t opal_unpack_homogeneous_contig_checksum(opal_convertor_t*, iovec*, uint32_t*, size_t*)'    {opal_unpack_homogeneous_contig_checksum}
  [D] 'function int opal_unsetenv(const char*, char***)'    {opal_unsetenv}
  [D] 'function int opal_util_init_sys_limits()'    {opal_util_init_sys_limits}
  [D] 'function int opal_util_keyval_init_buffer(FILE*)'    {opal_util_keyval_init_buffer}
  [D] 'function int opal_util_keyval_parse(const char*, opal_keyval_parse_fn_t)'    {opal_util_keyval_parse}
  [D] 'function int opal_util_keyval_parse_finalize()'    {opal_util_keyval_parse_finalize}
  [D] 'function int opal_util_keyval_parse_init()'    {opal_util_keyval_parse_init}
  [D] 'function YY_BUFFER_STATE opal_util_keyval_yy_create_buffer(FILE*, int)'    {opal_util_keyval_yy_create_buffer}
  [D] 'function void opal_util_keyval_yy_delete_buffer(YY_BUFFER_STATE)'    {opal_util_keyval_yy_delete_buffer}
  [D] 'function void opal_util_keyval_yy_flush_buffer(YY_BUFFER_STATE)'    {opal_util_keyval_yy_flush_buffer}
  [D] 'function YY_BUFFER_STATE opal_util_keyval_yy_scan_buffer(char*, yy_size_t)'    {opal_util_keyval_yy_scan_buffer}
  [D] 'function YY_BUFFER_STATE opal_util_keyval_yy_scan_bytes(const char*, int)'    {opal_util_keyval_yy_scan_bytes}
  [D] 'function YY_BUFFER_STATE opal_util_keyval_yy_scan_string(const char*)'    {opal_util_keyval_yy_scan_string}
  [D] 'function void opal_util_keyval_yy_switch_to_buffer(YY_BUFFER_STATE)'    {opal_util_keyval_yy_switch_to_buffer}
  [D] 'function void* opal_util_keyval_yyalloc(yy_size_t)'    {opal_util_keyval_yyalloc}
  [D] 'function void opal_util_keyval_yyfree(void*)'    {opal_util_keyval_yyfree}
  [D] 'function int opal_util_keyval_yyget_debug()'    {opal_util_keyval_yyget_debug}
  [D] 'function FILE* opal_util_keyval_yyget_in()'    {opal_util_keyval_yyget_in}
  [D] 'function int opal_util_keyval_yyget_leng()'    {opal_util_keyval_yyget_leng}
  [D] 'function int opal_util_keyval_yyget_lineno()'    {opal_util_keyval_yyget_lineno}
  [D] 'function FILE* opal_util_keyval_yyget_out()'    {opal_util_keyval_yyget_out}
  [D] 'function char* opal_util_keyval_yyget_text()'    {opal_util_keyval_yyget_text}
  [D] 'function int opal_util_keyval_yylex()'    {opal_util_keyval_yylex}
  [D] 'function int opal_util_keyval_yylex_destroy()'    {opal_util_keyval_yylex_destroy}
  [D] 'function void opal_util_keyval_yypop_buffer_state()'    {opal_util_keyval_yypop_buffer_state}
  [D] 'function void opal_util_keyval_yypush_buffer_state(YY_BUFFER_STATE)'    {opal_util_keyval_yypush_buffer_state}
  [D] 'function void* opal_util_keyval_yyrealloc(void*, yy_size_t)'    {opal_util_keyval_yyrealloc}
  [D] 'function void opal_util_keyval_yyrestart(FILE*)'    {opal_util_keyval_yyrestart}
  [D] 'function void opal_util_keyval_yyset_debug(int)'    {opal_util_keyval_yyset_debug}
  [D] 'function void opal_util_keyval_yyset_in(FILE*)'    {opal_util_keyval_yyset_in}
  [D] 'function void opal_util_keyval_yyset_lineno(int)'    {opal_util_keyval_yyset_lineno}
  [D] 'function void opal_util_keyval_yyset_out(FILE*)'    {opal_util_keyval_yyset_out}
  [D] 'function int opal_util_keyval_yywrap()'    {opal_util_keyval_yywrap}
  [D] 'function int opal_util_register_stackhandlers()'    {opal_util_register_stackhandlers}
  [D] 'function int opal_value_array_set_size(opal_value_array_t*, size_t)'    {opal_value_array_set_size}
  [D] 'function int opal_vasprintf(char**, const char*, __va_list_tag*)'    {opal_vasprintf}
  [D] 'function int opal_vsnprintf(char*, size_t, const char*, __va_list_tag*)'    {opal_vsnprintf}
  [D] 'function void orte_base_default_waitpid_fired(orte_process_name_t*, int32_t)'    {orte_base_default_waitpid_fired}
  [D] 'function int orte_cr_coord(int)'    {orte_cr_coord}
  [D] 'function int orte_cr_entry_point_init()'    {orte_cr_entry_point_init}
  [D] 'function int orte_cr_finalize()'    {orte_cr_finalize}
  [D] 'function int orte_cr_init()'    {orte_cr_init}
  [D] 'function int orte_daemon(int, char**)'    {orte_daemon}
  [D] 'function void orte_daemon_cmd_processor(int, short int, void*)'    {orte_daemon_cmd_processor}
  [D] 'function void orte_daemon_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_daemon_recv}
  [D] 'function void orte_data_server(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_data_server}
  [D] 'function void orte_data_server_finalize()'    {orte_data_server_finalize}
  [D] 'function int orte_data_server_init()'    {orte_data_server_init}
  [D] 'function int orte_dt_compare_app_context(orte_app_context_t*, orte_app_context_t*, opal_data_type_t)'    {orte_dt_compare_app_context}
  [D] 'function int orte_dt_compare_daemon_cmd(orte_daemon_cmd_flag_t*, orte_daemon_cmd_flag_t*, opal_data_type_t)'    {orte_dt_compare_daemon_cmd}
  [D] 'function int orte_dt_compare_job(orte_job_t*, orte_job_t*, opal_data_type_t)'    {orte_dt_compare_job}
  [D] 'function int orte_dt_compare_jobid(orte_jobid_t*, orte_jobid_t*, opal_data_type_t)'    {orte_dt_compare_jobid}
  [D] 'function int orte_dt_compare_map(orte_job_map_t*, orte_job_map_t*, opal_data_type_t)'    {orte_dt_compare_map}
  [D] 'function int orte_dt_compare_name(orte_process_name_t*, orte_process_name_t*, opal_data_type_t)'    {orte_dt_compare_name}
  [D] 'function int orte_dt_compare_node(orte_node_t*, orte_node_t*, opal_data_type_t)'    {orte_dt_compare_node}
  [D] 'function int orte_dt_compare_node_state(orte_node_state_t*, orte_node_state_t*, orte_node_state_t)'    {orte_dt_compare_node_state}
  [D] 'function int orte_dt_compare_proc(orte_proc_t*, orte_proc_t*, opal_data_type_t)'    {orte_dt_compare_proc}
  [D] 'function int orte_dt_compare_proc_state(orte_proc_state_t*, orte_proc_state_t*, orte_proc_state_t)'    {orte_dt_compare_proc_state}
  [D] 'function int orte_dt_compare_std_cntr(orte_std_cntr_t*, orte_std_cntr_t*, opal_data_type_t)'    {orte_dt_compare_std_cntr}
  [D] 'function int orte_dt_compare_tags(orte_rml_tag_t*, orte_rml_tag_t*, opal_data_type_t)'    {orte_dt_compare_tags}
  [D] 'function int orte_dt_copy_app_context(orte_app_context_t**, orte_app_context_t*, opal_data_type_t)'    {orte_dt_copy_app_context}
  [D] 'function int orte_dt_copy_daemon_cmd(orte_daemon_cmd_flag_t**, orte_daemon_cmd_flag_t*, opal_data_type_t)'    {orte_dt_copy_daemon_cmd}
  [D] 'function int orte_dt_copy_exit_code(orte_exit_code_t**, orte_exit_code_t*, opal_data_type_t)'    {orte_dt_copy_exit_code}
  [D] 'function int orte_dt_copy_grpcomm_mode(orte_grpcomm_mode_t**, orte_grpcomm_mode_t*, opal_data_type_t)'    {orte_dt_copy_grpcomm_mode}
  [D] 'function int orte_dt_copy_iof_tag(orte_iof_tag_t**, orte_iof_tag_t*, opal_data_type_t)'    {orte_dt_copy_iof_tag}
  [D] 'function int orte_dt_copy_job(orte_job_t**, orte_job_t*, opal_data_type_t)'    {orte_dt_copy_job}
  [D] 'function int orte_dt_copy_job_state(orte_job_state_t**, orte_job_state_t*, opal_data_type_t)'    {orte_dt_copy_job_state}
  [D] 'function int orte_dt_copy_jobid(orte_jobid_t**, orte_jobid_t*, opal_data_type_t)'    {orte_dt_copy_jobid}
  [D] 'function int orte_dt_copy_map(orte_job_map_t**, orte_job_map_t*, opal_data_type_t)'    {orte_dt_copy_map}
  [D] 'function int orte_dt_copy_name(orte_process_name_t**, orte_process_name_t*, opal_data_type_t)'    {orte_dt_copy_name}
  [D] 'function int orte_dt_copy_node(orte_node_t**, orte_node_t*, opal_data_type_t)'    {orte_dt_copy_node}
  [D] 'function int orte_dt_copy_node_state(orte_node_state_t**, orte_node_state_t*, opal_data_type_t)'    {orte_dt_copy_node_state}
  [D] 'function int orte_dt_copy_proc(orte_proc_t**, orte_proc_t*, opal_data_type_t)'    {orte_dt_copy_proc}
  [D] 'function int orte_dt_copy_proc_state(orte_proc_state_t**, orte_proc_state_t*, opal_data_type_t)'    {orte_dt_copy_proc_state}
  [D] 'function int orte_dt_copy_std_cntr(orte_std_cntr_t**, orte_std_cntr_t*, opal_data_type_t)'    {orte_dt_copy_std_cntr}
  [D] 'function int orte_dt_copy_tag(orte_rml_tag_t**, orte_rml_tag_t*, opal_data_type_t)'    {orte_dt_copy_tag}
  [D] 'function int orte_dt_copy_vpid(orte_vpid_t**, orte_vpid_t*, opal_data_type_t)'    {orte_dt_copy_vpid}
  [D] 'function int orte_dt_init()'    {orte_dt_init}
  [D] 'function int orte_dt_pack_app_context(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_app_context}
  [D] 'function int orte_dt_pack_daemon_cmd(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_daemon_cmd}
  [D] 'function int orte_dt_pack_exit_code(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_exit_code}
  [D] 'function int orte_dt_pack_grpcomm_mode(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_grpcomm_mode}
  [D] 'function int orte_dt_pack_iof_tag(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_iof_tag}
  [D] 'function int orte_dt_pack_job(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_job}
  [D] 'function int orte_dt_pack_job_state(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_job_state}
  [D] 'function int orte_dt_pack_jobid(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_jobid}
  [D] 'function int orte_dt_pack_map(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_map}
  [D] 'function int orte_dt_pack_name(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_name}
  [D] 'function int orte_dt_pack_node(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_node}
  [D] 'function int orte_dt_pack_node_state(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_node_state}
  [D] 'function int orte_dt_pack_proc(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_proc}
  [D] 'function int orte_dt_pack_proc_state(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_proc_state}
  [D] 'function int orte_dt_pack_std_cntr(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_std_cntr}
  [D] 'function int orte_dt_pack_tag(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_tag}
  [D] 'function int orte_dt_pack_vpid(opal_buffer_t*, void*, int32_t, opal_data_type_t)'    {orte_dt_pack_vpid}
  [D] 'function int orte_dt_print_app_context(char**, char*, orte_app_context_t*, opal_data_type_t)'    {orte_dt_print_app_context}
  [D] 'function int orte_dt_print_job(char**, char*, orte_job_t*, opal_data_type_t)'    {orte_dt_print_job}
  [D] 'function int orte_dt_print_map(char**, char*, orte_job_map_t*, opal_data_type_t)'    {orte_dt_print_map}
  [D] 'function int orte_dt_print_name(char**, char*, orte_process_name_t*, opal_data_type_t)'    {orte_dt_print_name}
  [D] 'function int orte_dt_print_node(char**, char*, orte_node_t*, opal_data_type_t)'    {orte_dt_print_node}
  [D] 'function int orte_dt_print_proc(char**, char*, orte_proc_t*, opal_data_type_t)'    {orte_dt_print_proc}
  [D] 'function int orte_dt_size_app_context(size_t*, orte_app_context_t*, opal_data_type_t)'    {orte_dt_size_app_context}
  [D] 'function int orte_dt_size_job(size_t*, orte_job_t*, opal_data_type_t)'    {orte_dt_size_job}
  [D] 'function int orte_dt_size_map(size_t*, orte_job_map_t*, opal_data_type_t)'    {orte_dt_size_map}
  [D] 'function int orte_dt_size_node(size_t*, orte_node_t*, opal_data_type_t)'    {orte_dt_size_node}
  [D] 'function int orte_dt_size_proc(size_t*, orte_proc_t*, opal_data_type_t)'    {orte_dt_size_proc}
  [D] 'function void orte_dt_std_obj_release(opal_dss_value_t*)'    {orte_dt_std_obj_release}
  [D] 'function int orte_dt_std_print(char**, char*, void*, opal_data_type_t)'    {orte_dt_std_print}
  [D] 'function void orte_dt_std_release(opal_dss_value_t*)'    {orte_dt_std_release}
  [D] 'function int orte_dt_std_size(size_t*, void*, opal_data_type_t)'    {orte_dt_std_size}
  [D] 'function int orte_dt_unpack_app_context(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_app_context}
  [D] 'function int orte_dt_unpack_daemon_cmd(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_daemon_cmd}
  [D] 'function int orte_dt_unpack_exit_code(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_exit_code}
  [D] 'function int orte_dt_unpack_job(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_job}
  [D] 'function int orte_dt_unpack_job_state(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_job_state}
  [D] 'function int orte_dt_unpack_jobid(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_jobid}
  [D] 'function int orte_dt_unpack_map(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_map}
  [D] 'function int orte_dt_unpack_name(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_name}
  [D] 'function int orte_dt_unpack_node(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_node}
  [D] 'function int orte_dt_unpack_node_state(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_node_state}
  [D] 'function int orte_dt_unpack_proc(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_proc}
  [D] 'function int orte_dt_unpack_proc_state(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_proc_state}
  [D] 'function int orte_dt_unpack_std_cntr(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_std_cntr}
  [D] 'function int orte_dt_unpack_tag(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_tag}
  [D] 'function int orte_dt_unpack_vpid(opal_buffer_t*, void*, int32_t*, opal_data_type_t)'    {orte_dt_unpack_vpid}
  [D] 'function const char* orte_err2str(int)'    {orte_err2str}
  [D] 'function int orte_errmgr_base_close()'    {orte_errmgr_base_close}
  [D] 'function void orte_errmgr_base_error_abort(int, char*, ...)'    {orte_errmgr_base_error_abort}
  [D] 'function void orte_errmgr_base_incomplete_start_not_avail(orte_jobid_t, int)'    {orte_errmgr_base_incomplete_start_not_avail}
  [D] 'function void orte_errmgr_base_log(int, char*, int)'    {orte_errmgr_base_log}
  [D] 'function int orte_errmgr_base_open()'    {orte_errmgr_base_open}
  [D] 'function void orte_errmgr_base_proc_aborted_not_avail(orte_process_name_t*, int)'    {orte_errmgr_base_proc_aborted_not_avail}
  [D] 'function int orte_errmgr_base_register_cb_not_avail(orte_jobid_t, orte_job_state_t, orte_err_cb_fn_t, void*)'    {orte_errmgr_base_register_cb_not_avail}
  [D] 'function int orte_errmgr_base_select()'    {orte_errmgr_base_select}
  [D] 'function int orte_errmgr_default_component_open()'    {orte_errmgr_default_component_open}
  [D] 'function int orte_errmgr_default_component_query(mca_base_module_t**, int*)'    {orte_errmgr_default_component_query}
  [D] 'function void orte_errmgr_default_incomplete_start(orte_jobid_t, int)'    {orte_errmgr_default_incomplete_start}
  [D] 'function void orte_errmgr_default_proc_aborted(orte_process_name_t*, int)'    {orte_errmgr_default_proc_aborted}
  [D] 'function int orte_errmgr_default_register_callback(orte_jobid_t, orte_proc_state_t, orte_err_cb_fn_t, void*)'    {orte_errmgr_default_register_callback}
  [D] 'function void orte_ess_base_app_abort(int, bool)'    {orte_ess_base_app_abort}
  [D] 'function int orte_ess_base_app_finalize()'    {orte_ess_base_app_finalize}
  [D] 'function int orte_ess_base_app_setup()'    {orte_ess_base_app_setup}
  [D] 'function int orte_ess_base_close()'    {orte_ess_base_close}
  [D] 'function int orte_ess_base_open()'    {orte_ess_base_open}
  [D] 'function int orte_ess_base_orted_finalize()'    {orte_ess_base_orted_finalize}
  [D] 'function int orte_ess_base_orted_setup(char**)'    {orte_ess_base_orted_setup}
  [D] 'function int orte_ess_base_select()'    {orte_ess_base_select}
  [D] 'function int orte_ess_base_std_prolog()'    {orte_ess_base_std_prolog}
  [D] 'function int orte_ess_base_tool_finalize()'    {orte_ess_base_tool_finalize}
  [D] 'function int orte_ess_base_tool_setup()'    {orte_ess_base_tool_setup}
  [D] 'function int orte_ess_env_component_open()'    {orte_ess_env_component_open}
  [D] 'function int orte_ess_env_component_query(mca_base_module_t**, int*)'    {orte_ess_env_component_query}
  [D] 'function int orte_ess_env_get()'    {orte_ess_env_get}
  [D] 'function int orte_ess_env_put(orte_std_cntr_t, orte_std_cntr_t, char***)'    {orte_ess_env_put}
  [D] 'function int orte_ess_hnp_component_open()'    {orte_ess_hnp_component_open}
  [D] 'function int orte_ess_hnp_component_query(mca_base_module_t**, int*)'    {orte_ess_hnp_component_query}
  [D] 'function int orte_ess_singleton_component_open()'    {orte_ess_singleton_component_open}
  [D] 'function int orte_ess_singleton_component_query(mca_base_module_t**, int*)'    {orte_ess_singleton_component_query}
  [D] 'function int orte_ess_slave_component_open()'    {orte_ess_slave_component_open}
  [D] 'function int orte_ess_slave_component_query(mca_base_module_t**, int*)'    {orte_ess_slave_component_query}
  [D] 'function int orte_ess_tool_component_open()'    {orte_ess_tool_component_open}
  [D] 'function int orte_ess_tool_component_query(mca_base_module_t**, int*)'    {orte_ess_tool_component_query}
  [D] 'function int orte_filem_base_close()'    {orte_filem_base_close}
  [D] 'function int orte_filem_base_comm_start()'    {orte_filem_base_comm_start}
  [D] 'function int orte_filem_base_comm_stop()'    {orte_filem_base_comm_stop}
  [D] 'function void orte_filem_base_construct(orte_filem_base_request_t*)'    {orte_filem_base_construct}
  [D] 'function void orte_filem_base_destruct(orte_filem_base_request_t*)'    {orte_filem_base_destruct}
  [D] 'function void orte_filem_base_file_set_construct(orte_filem_base_file_set_t*)'    {orte_filem_base_file_set_construct}
  [D] 'function void orte_filem_base_file_set_destruct(orte_filem_base_file_set_t*)'    {orte_filem_base_file_set_destruct}
  [D] 'function int orte_filem_base_get_proc_node_name(orte_process_name_t*, char**)'    {orte_filem_base_get_proc_node_name}
  [D] 'function int orte_filem_base_get_remote_path(char**, orte_process_name_t*, int*)'    {orte_filem_base_get_remote_path}
  [D] 'function int orte_filem_base_module_init()'    {orte_filem_base_module_init}
  [D] 'function int orte_filem_base_none_open()'    {orte_filem_base_none_open}
  [D] 'function int orte_filem_base_none_put(orte_filem_base_request_t*)'    {orte_filem_base_none_put}
  [D] 'function int orte_filem_base_none_query(mca_base_module_t**, int*)'    {orte_filem_base_none_query}
  [D] 'function int orte_filem_base_open()'    {orte_filem_base_open}
  [D] 'function int orte_filem_base_prepare_request(orte_filem_base_request_t*, int)'    {orte_filem_base_prepare_request}
  [D] 'function void orte_filem_base_process_set_construct(orte_filem_base_process_set_t*)'    {orte_filem_base_process_set_construct}
  [D] 'function void orte_filem_base_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_filem_base_recv}
  [D] 'function int orte_filem_base_select()'    {orte_filem_base_select}
  [D] 'function int orte_filem_rsh_component_query(mca_base_module_t**, int*)'    {orte_filem_rsh_component_query}
  [D] 'function int orte_filem_rsh_get(orte_filem_base_request_t*)'    {orte_filem_rsh_get}
  [D] 'function int orte_filem_rsh_get_nb(orte_filem_base_request_t*)'    {orte_filem_rsh_get_nb}
  [D] 'function int orte_filem_rsh_module_finalize()'    {orte_filem_rsh_module_finalize}
  [D] 'function int orte_filem_rsh_module_init()'    {orte_filem_rsh_module_init}
  [D] 'function int orte_filem_rsh_put(orte_filem_base_request_t*)'    {orte_filem_rsh_put}
  [D] 'function int orte_filem_rsh_put_nb(orte_filem_base_request_t*)'    {orte_filem_rsh_put_nb}
  [D] 'function int orte_filem_rsh_rm(orte_filem_base_request_t*)'    {orte_filem_rsh_rm}
  [D] 'function int orte_filem_rsh_rm_nb(orte_filem_base_request_t*)'    {orte_filem_rsh_rm_nb}
  [D] 'function int orte_filem_rsh_wait(orte_filem_base_request_t*)'    {orte_filem_rsh_wait}
  [D] 'function int orte_filem_rsh_wait_all(opal_list_t*)'    {orte_filem_rsh_wait_all}
  [D] 'function void orte_filem_rsh_work_pool_construct(orte_filem_rsh_work_pool_item_t*)'    {orte_filem_rsh_work_pool_construct}
  [D] 'function void orte_filem_rsh_work_pool_destruct(orte_filem_rsh_work_pool_item_t*)'    {orte_filem_rsh_work_pool_destruct}
  [D] 'function int orte_finalize()'    {orte_finalize}
  [D] 'function orte_job_t* orte_get_job_data_object(orte_jobid_t)'    {orte_get_job_data_object}
  [D] 'function int orte_grpcomm_bad_component_query(mca_base_module_t**, int*)'    {orte_grpcomm_bad_component_query}
  [D] 'function int orte_grpcomm_bad_open()'    {orte_grpcomm_bad_open}
  [D] 'function int orte_grpcomm_base_allgather(opal_buffer_t*, opal_buffer_t*, int32_t, orte_jobid_t, orte_vpid_t, orte_vpid_t*)'    {orte_grpcomm_base_allgather}
  [D] 'function int orte_grpcomm_base_allgather_list(opal_list_t*, opal_buffer_t*, opal_buffer_t*)'    {orte_grpcomm_base_allgather_list}
  [D] 'function int orte_grpcomm_base_close()'    {orte_grpcomm_base_close}
  [D] 'function void orte_grpcomm_base_coll_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_grpcomm_base_coll_recv}
  [D] 'function int orte_grpcomm_base_full_modex(opal_list_t*, bool)'    {orte_grpcomm_base_full_modex}
  [D] 'function int orte_grpcomm_base_get_proc_attr(const orte_process_name_t, const char*, void**, size_t*)'    {orte_grpcomm_base_get_proc_attr}
  [D] 'function int orte_grpcomm_base_load_modex_data(orte_process_name_t*, char*, void*, int)'    {orte_grpcomm_base_load_modex_data}
  [D] 'function void orte_grpcomm_base_modex_finalize()'    {orte_grpcomm_base_modex_finalize}
  [D] 'function int orte_grpcomm_base_modex_init()'    {orte_grpcomm_base_modex_init}
  [D] 'function int orte_grpcomm_base_modex_unpack(opal_buffer_t*, bool)'    {orte_grpcomm_base_modex_unpack}
  [D] 'function int orte_grpcomm_base_open()'    {orte_grpcomm_base_open}
  [D] 'function int orte_grpcomm_base_pack_modex_entries(opal_buffer_t*, bool*)'    {orte_grpcomm_base_pack_modex_entries}
  [D] 'function int orte_grpcomm_base_peer_modex(bool)'    {orte_grpcomm_base_peer_modex}
  [D] 'function int orte_grpcomm_base_purge_proc_attrs()'    {orte_grpcomm_base_purge_proc_attrs}
  [D] 'function int orte_grpcomm_base_select()'    {orte_grpcomm_base_select}
  [D] 'function int orte_grpcomm_base_set_proc_attr(const char*, void*, size_t)'    {orte_grpcomm_base_set_proc_attr}
  [D] 'function int orte_grpcomm_base_update_modex_entries(orte_process_name_t*, opal_buffer_t*)'    {orte_grpcomm_base_update_modex_entries}
  [D] 'function int orte_grpcomm_basic_component_query(mca_base_module_t**, int*)'    {orte_grpcomm_basic_component_query}
  [D] 'function int orte_grpcomm_basic_open()'    {orte_grpcomm_basic_open}
  [D] 'function int orte_grpcomm_hier_component_query(mca_base_module_t**, int*)'    {orte_grpcomm_hier_component_query}
  [D] 'function int orte_grpcomm_hier_open()'    {orte_grpcomm_hier_open}
  [D] 'function int orte_init(int*, char***, orte_proc_type_t)'    {orte_init}
  [D] 'function int orte_iof_base_close()'    {orte_iof_base_close}
  [D] 'function int orte_iof_base_open()'    {orte_iof_base_open}
  [D] 'function int orte_iof_base_select()'    {orte_iof_base_select}
  [D] 'function int orte_iof_base_setup_child(orte_iof_base_io_conf_t*, char***)'    {orte_iof_base_setup_child}
  [D] 'function int orte_iof_base_setup_parent(const orte_process_name_t*, orte_iof_base_io_conf_t*)'    {orte_iof_base_setup_parent}
  [D] 'function int orte_iof_base_setup_prefork(orte_iof_base_io_conf_t*)'    {orte_iof_base_setup_prefork}
  [D] 'function void orte_iof_base_write_handler(int, short int, void*)'    {orte_iof_base_write_handler}
  [D] 'function int orte_iof_base_write_output(orte_process_name_t*, orte_iof_tag_t, unsigned char*, int, orte_iof_write_event_t*)'    {orte_iof_base_write_output}
  [D] 'function void orte_iof_hnp_read_local_handler(int, short int, void*)'    {orte_iof_hnp_read_local_handler}
  [D] 'function void orte_iof_hnp_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_iof_hnp_recv}
  [D] 'function void orte_iof_hnp_send_data_to_endpoint(orte_process_name_t*, orte_process_name_t*, orte_iof_tag_t, unsigned char*, int)'    {orte_iof_hnp_send_data_to_endpoint}
  [D] 'function void orte_iof_hnp_stdin_cb(int, short int, void*)'    {orte_iof_hnp_stdin_cb}
  [D] 'function bool orte_iof_hnp_stdin_check(int)'    {orte_iof_hnp_stdin_check}
  [D] 'function void orte_iof_orted_read_handler(int, short int, void*)'    {orte_iof_orted_read_handler}
  [D] 'function void orte_iof_orted_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_iof_orted_recv}
  [D] 'function void orte_iof_orted_send_xonxoff(orte_iof_tag_t)'    {orte_iof_orted_send_xonxoff}
  [D] 'function void orte_iof_tool_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_iof_tool_recv}
  [D] 'function void orte_jmap_dump(orte_jmap_t*)'    {orte_jmap_dump}
  [D] 'function void orte_jobmap_dump()'    {orte_jobmap_dump}
  [D] 'function int orte_list_local_hnps(opal_list_t*, bool)'    {orte_list_local_hnps}
  [D] 'function int orte_locks_init()'    {orte_locks_init}
  [D] 'function void orte_nidmap_dump()'    {orte_nidmap_dump}
  [D] 'function int orte_notifier_base_close()'    {orte_notifier_base_close}
  [D] 'function int orte_notifier_base_open()'    {orte_notifier_base_open}
  [D] 'function int orte_notifier_base_select()'    {orte_notifier_base_select}
  [D] 'function void orte_notifier_command_child_main()'    {orte_notifier_command_child_main}
  [D] 'function int orte_notifier_command_read_fd(int, int, void*)'    {orte_notifier_command_read_fd}
  [D] 'function int orte_notifier_command_split(const char*, char***)'    {orte_notifier_command_split}
  [D] 'function int orte_notifier_command_write_fd(int, int, void*)'    {orte_notifier_command_write_fd}
  [D] 'function int orte_notifier_syslog_component_query(mca_base_module_t**, int*)'    {orte_notifier_syslog_component_query}
  [D] 'function int orte_notifier_syslog_open()'    {orte_notifier_syslog_open}
  [D] 'function int orte_odls_base_close()'    {orte_odls_base_close}
  [D] 'function int orte_odls_base_default_construct_child_list(opal_buffer_t*, orte_jobid_t*)'    {orte_odls_base_default_construct_child_list}
  [D] 'function int orte_odls_base_default_deliver_message(orte_jobid_t, opal_buffer_t*, orte_rml_tag_t)'    {orte_odls_base_default_deliver_message}
  [D] 'function int orte_odls_base_default_get_add_procs_data(opal_buffer_t*, orte_jobid_t)'    {orte_odls_base_default_get_add_procs_data}
  [D] 'function int orte_odls_base_default_kill_local_procs(opal_pointer_array_t*, bool, orte_odls_base_kill_local_fn_t, orte_odls_base_child_died_fn_t)'    {orte_odls_base_default_kill_local_procs}
  [D] 'function int orte_odls_base_default_launch_local(orte_jobid_t, orte_odls_base_fork_local_proc_fn_t)'    {orte_odls_base_default_launch_local}
  [D] 'function int orte_odls_base_default_require_sync(orte_process_name_t*, opal_buffer_t*, bool)'    {orte_odls_base_default_require_sync}
  [D] 'function int orte_odls_base_default_signal_local_procs(const orte_process_name_t*, int32_t, orte_odls_base_signal_local_fn_t)'    {orte_odls_base_default_signal_local_procs}
  [D] 'function int orte_odls_base_default_update_daemon_info(opal_buffer_t*)'    {orte_odls_base_default_update_daemon_info}
  [D] 'function int orte_odls_base_get_proc_stats(opal_buffer_t*, orte_process_name_t*)'    {orte_odls_base_get_proc_stats}
  [D] 'function void orte_odls_base_notify_iof_complete(orte_process_name_t*)'    {orte_odls_base_notify_iof_complete}
  [D] 'function int orte_odls_base_open()'    {orte_odls_base_open}
  [D] 'function int orte_odls_base_preload_files_app_context(orte_app_context_t*)'    {orte_odls_base_preload_files_app_context}
  [D] 'function int orte_odls_base_select()'    {orte_odls_base_select}
  [D] 'function void orte_odls_base_setup_singleton_jobdat(orte_jobid_t)'    {orte_odls_base_setup_singleton_jobdat}
  [D] 'function int orte_odls_default_component_open()'    {orte_odls_default_component_open}
  [D] 'function int orte_odls_default_component_query(mca_base_module_t**, int*)'    {orte_odls_default_component_query}
  [D] 'function void orte_plm_base_app_report_launch(int, short int, void*)'    {orte_plm_base_app_report_launch}
  [D] 'function int orte_plm_base_append_bootproxy_args(orte_app_context_t*, char***, orte_jobid_t, orte_vpid_t, int, orte_vpid_t, orte_node_rank_t, orte_local_rank_t, orte_vpid_t, int, bool)'    {orte_plm_base_append_bootproxy_args}
  [D] 'function void orte_plm_base_check_job_completed(orte_job_t*)'    {orte_plm_base_check_job_completed}
  [D] 'function int orte_plm_base_close()'    {orte_plm_base_close}
  [D] 'function int orte_plm_base_comm_start()'    {orte_plm_base_comm_start}
  [D] 'function int orte_plm_base_comm_stop()'    {orte_plm_base_comm_stop}
  [D] 'function int orte_plm_base_create_jobid(orte_job_t*)'    {orte_plm_base_create_jobid}
  [D] 'function int orte_plm_base_daemon_callback(orte_std_cntr_t)'    {orte_plm_base_daemon_callback}
  [D] 'function int orte_plm_base_finalize()'    {orte_plm_base_finalize}
  [D] 'function void orte_plm_base_heartbeat(int, short int, void*)'    {orte_plm_base_heartbeat}
  [D] 'function int orte_plm_base_launch_apps(orte_jobid_t)'    {orte_plm_base_launch_apps}
  [D] 'function void orte_plm_base_launch_failed(orte_jobid_t, pid_t, int, orte_job_state_t)'    {orte_plm_base_launch_failed}
  [D] 'function void orte_plm_base_local_slave_finalize()'    {orte_plm_base_local_slave_finalize}
  [D] 'function int orte_plm_base_local_slave_launch(orte_job_t*)'    {orte_plm_base_local_slave_launch}
  [D] 'function int orte_plm_base_open()'    {orte_plm_base_open}
  [D] 'function int orte_plm_base_orted_append_basic_args(int*, char***, char*, int*, bool, char*)'    {orte_plm_base_orted_append_basic_args}
  [D] 'function int orte_plm_base_orted_exit(orte_daemon_cmd_flag_t)'    {orte_plm_base_orted_exit}
  [D] 'function int orte_plm_base_orted_kill_local_procs(opal_pointer_array_t*)'    {orte_plm_base_orted_kill_local_procs}
  [D] 'function int orte_plm_base_orted_signal_local_procs(orte_jobid_t, int32_t)'    {orte_plm_base_orted_signal_local_procs}
  [D] 'function int orte_plm_base_orted_terminate_job(orte_jobid_t)'    {orte_plm_base_orted_terminate_job}
  [D] 'function void orte_plm_base_receive_process_msg(int, short int, void*)'    {orte_plm_base_receive_process_msg}
  [D] 'function void orte_plm_base_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_plm_base_recv}
  [D] 'function int orte_plm_base_report_launched(orte_jobid_t)'    {orte_plm_base_report_launched}
  [D] 'function void orte_plm_base_reset_job(orte_job_t*)'    {orte_plm_base_reset_job}
  [D] 'function int orte_plm_base_rsh_launch_agent_lookup(const char*, char*)'    {orte_plm_base_rsh_launch_agent_lookup}
  [D] 'function int orte_plm_base_rsh_launch_agent_setup(const char*, char*)'    {orte_plm_base_rsh_launch_agent_setup}
  [D] 'function int orte_plm_base_select()'    {orte_plm_base_select}
  [D] 'function int orte_plm_base_set_hnp_name()'    {orte_plm_base_set_hnp_name}
  [D] 'function int orte_plm_base_setup_job(orte_job_t*)'    {orte_plm_base_setup_job}
  [D] 'function int orte_plm_base_setup_orted_cmd(int*, char***)'    {orte_plm_base_setup_orted_cmd}
  [D] 'function int orte_plm_base_setup_rsh_launch(char*, orte_app_context_t*, char*, char***, char**)'    {orte_plm_base_setup_rsh_launch}
  [D] 'function void orte_plm_base_start_heart()'    {orte_plm_base_start_heart}
  [D] 'function int orte_plm_proxy_init()'    {orte_plm_proxy_init}
  [D] 'function int orte_plm_proxy_spawn(orte_job_t*)'    {orte_plm_proxy_spawn}
  [D] 'function int orte_plm_rsh_component_close()'    {orte_plm_rsh_component_close}
  [D] 'function int orte_plm_rsh_component_open()'    {orte_plm_rsh_component_open}
  [D] 'function int orte_plm_rsh_component_query(mca_base_module_t**, int*)'    {orte_plm_rsh_component_query}
  [D] 'function int orte_plm_rsh_finalize()'    {orte_plm_rsh_finalize}
  [D] 'function int orte_plm_rsh_init()'    {orte_plm_rsh_init}
  [D] 'function int orte_plm_rsh_launch(orte_job_t*)'    {orte_plm_rsh_launch}
  [D] 'function int orte_plm_rsh_signal_job(orte_jobid_t, int32_t)'    {orte_plm_rsh_signal_job}
  [D] 'function int orte_plm_rsh_terminate_orteds()'    {orte_plm_rsh_terminate_orteds}
  [D] 'function int orte_pre_condition_transports(orte_job_t*)'    {orte_pre_condition_transports}
  [D] 'function char* orte_pre_condition_transports_print(uint64_t*)'    {orte_pre_condition_transports_print}
  [D] 'function int orte_proc_info()'    {orte_proc_info}
  [D] 'function int orte_proc_info_finalize()'    {orte_proc_info_finalize}
  [D] 'function int orte_ras_base_add_hosts(orte_job_t*)'    {orte_ras_base_add_hosts}
  [D] 'function int orte_ras_base_allocate(orte_job_t*)'    {orte_ras_base_allocate}
  [D] 'function int orte_ras_base_close()'    {orte_ras_base_close}
  [D] 'function int orte_ras_base_finalize()'    {orte_ras_base_finalize}
  [D] 'function int orte_ras_base_node_insert(opal_list_t*, orte_job_t*)'    {orte_ras_base_node_insert}
  [D] 'function int orte_ras_base_open()'    {orte_ras_base_open}
  [D] 'function int orte_ras_base_select()'    {orte_ras_base_select}
  [D] 'function int orte_read_hnp_contact_file(char*, orte_hnp_contact_t*, bool)'    {orte_read_hnp_contact_file}
  [D] 'function int orte_regex_decode_maps(char*, orte_odls_job_t**)'    {orte_regex_decode_maps}
  [D] 'function char* orte_regex_encode_maps(orte_job_t*)'    {orte_regex_encode_maps}
  [D] 'function int orte_regex_extract_node_names(char*, char***)'    {orte_regex_extract_node_names}
  [D] 'function int orte_regex_extract_ppn(int, char*, int**)'    {orte_regex_extract_ppn}
  [D] 'function int orte_register_params()'    {orte_register_params}
  [D] 'function int orte_rmaps_base_add_proc_to_map(orte_job_map_t*, orte_node_t*, bool, orte_proc_t*)'    {orte_rmaps_base_add_proc_to_map}
  [D] 'function int orte_rmaps_base_claim_slot(orte_job_t*, orte_node_t*, int32_t, int32_t, opal_list_t*, bool, bool, orte_proc_t**)'    {orte_rmaps_base_claim_slot}
  [D] 'function int orte_rmaps_base_close()'    {orte_rmaps_base_close}
  [D] 'function int orte_rmaps_base_compute_local_ranks(orte_job_t*)'    {orte_rmaps_base_compute_local_ranks}
  [D] 'function int orte_rmaps_base_compute_vpids(orte_job_t*)'    {orte_rmaps_base_compute_vpids}
  [D] 'function int orte_rmaps_base_define_daemons(orte_job_map_t*)'    {orte_rmaps_base_define_daemons}
  [D] 'function orte_job_map_t* orte_rmaps_base_get_job_map(orte_jobid_t)'    {orte_rmaps_base_get_job_map}
  [D] 'function opal_list_item_t* orte_rmaps_base_get_starting_point(opal_list_t*, orte_job_t*)'    {orte_rmaps_base_get_starting_point}
  [D] 'function int orte_rmaps_base_get_target_nodes(opal_list_t*, orte_std_cntr_t*, orte_app_context_t*, orte_mapping_policy_t)'    {orte_rmaps_base_get_target_nodes}
  [D] 'function int orte_rmaps_base_map_bynode(orte_job_t*, orte_app_context_t*, opal_list_t*, orte_vpid_t, opal_list_item_t*)'    {orte_rmaps_base_map_bynode}
  [D] 'function int orte_rmaps_base_map_byslot(orte_job_t*, orte_app_context_t*, opal_list_t*, orte_vpid_t, opal_list_item_t*)'    {orte_rmaps_base_map_byslot}
  [D] 'function int orte_rmaps_base_map_job(orte_job_t*)'    {orte_rmaps_base_map_job}
  [D] 'function int orte_rmaps_base_open()'    {orte_rmaps_base_open}
  [D] 'function int orte_rmaps_base_select()'    {orte_rmaps_base_select}
  [D] 'function void orte_rmaps_base_update_local_ranks(orte_job_t*, orte_node_t*, orte_node_t*, orte_proc_t*)'    {orte_rmaps_base_update_local_ranks}
  [D] 'function YY_BUFFER_STATE orte_rmaps_rank_file__create_buffer(FILE*, int)'    {orte_rmaps_rank_file__create_buffer}
  [D] 'function void orte_rmaps_rank_file__delete_buffer(YY_BUFFER_STATE)'    {orte_rmaps_rank_file__delete_buffer}
  [D] 'function void orte_rmaps_rank_file__flush_buffer(YY_BUFFER_STATE)'    {orte_rmaps_rank_file__flush_buffer}
  [D] 'function YY_BUFFER_STATE orte_rmaps_rank_file__scan_buffer(char*, yy_size_t)'    {orte_rmaps_rank_file__scan_buffer}
  [D] 'function YY_BUFFER_STATE orte_rmaps_rank_file__scan_bytes(const char*, int)'    {orte_rmaps_rank_file__scan_bytes}
  [D] 'function YY_BUFFER_STATE orte_rmaps_rank_file__scan_string(const char*)'    {orte_rmaps_rank_file__scan_string}
  [D] 'function void orte_rmaps_rank_file__switch_to_buffer(YY_BUFFER_STATE)'    {orte_rmaps_rank_file__switch_to_buffer}
  [D] 'function void* orte_rmaps_rank_file_alloc(yy_size_t)'    {orte_rmaps_rank_file_alloc}
  [D] 'function void orte_rmaps_rank_file_free(void*)'    {orte_rmaps_rank_file_free}
  [D] 'function int orte_rmaps_rank_file_get_debug()'    {orte_rmaps_rank_file_get_debug}
  [D] 'function FILE* orte_rmaps_rank_file_get_in()'    {orte_rmaps_rank_file_get_in}
  [D] 'function int orte_rmaps_rank_file_get_leng()'    {orte_rmaps_rank_file_get_leng}
  [D] 'function int orte_rmaps_rank_file_get_lineno()'    {orte_rmaps_rank_file_get_lineno}
  [D] 'function FILE* orte_rmaps_rank_file_get_out()'    {orte_rmaps_rank_file_get_out}
  [D] 'function char* orte_rmaps_rank_file_get_text()'    {orte_rmaps_rank_file_get_text}
  [D] 'function int orte_rmaps_rank_file_lex()'    {orte_rmaps_rank_file_lex}
  [D] 'function int orte_rmaps_rank_file_lex_destroy()'    {orte_rmaps_rank_file_lex_destroy}
  [D] 'function void orte_rmaps_rank_file_pop_buffer_state()'    {orte_rmaps_rank_file_pop_buffer_state}
  [D] 'function void orte_rmaps_rank_file_push_buffer_state(YY_BUFFER_STATE)'    {orte_rmaps_rank_file_push_buffer_state}
  [D] 'function void* orte_rmaps_rank_file_realloc(void*, yy_size_t)'    {orte_rmaps_rank_file_realloc}
  [D] 'function void orte_rmaps_rank_file_restart(FILE*)'    {orte_rmaps_rank_file_restart}
  [D] 'function void orte_rmaps_rank_file_set_debug(int)'    {orte_rmaps_rank_file_set_debug}
  [D] 'function void orte_rmaps_rank_file_set_in(FILE*)'    {orte_rmaps_rank_file_set_in}
  [D] 'function void orte_rmaps_rank_file_set_lineno(int)'    {orte_rmaps_rank_file_set_lineno}
  [D] 'function void orte_rmaps_rank_file_set_out(FILE*)'    {orte_rmaps_rank_file_set_out}
  [D] 'function int orte_rmaps_rank_file_wrap()'    {orte_rmaps_rank_file_wrap}
  [D] 'function void orte_rmcast_base_cancel_recv(orte_rmcast_channel_t, orte_rmcast_tag_t)'    {orte_rmcast_base_cancel_recv}
  [D] 'function int orte_rmcast_base_close()'    {orte_rmcast_base_close}
  [D] 'function int orte_rmcast_base_close_channel(orte_rmcast_channel_t)'    {orte_rmcast_base_close_channel}
  [D] 'function rmcast_base_channel_t* orte_rmcast_base_get_channel(orte_rmcast_channel_t)'    {orte_rmcast_base_get_channel}
  [D] 'function int orte_rmcast_base_open()'    {orte_rmcast_base_open}
  [D] 'function void orte_rmcast_base_process_msg(orte_rmcast_msg_t*)'    {orte_rmcast_base_process_msg}
  [D] 'function int orte_rmcast_base_query(orte_rmcast_channel_t*, orte_rmcast_channel_t*)'    {orte_rmcast_base_query}
  [D] 'function int orte_rmcast_base_queue_recv(rmcast_base_recv_t**, orte_rmcast_channel_t, orte_rmcast_tag_t, orte_rmcast_flag_t, orte_rmcast_callback_fn_t, orte_rmcast_callback_buffer_fn_t, void*, bool)'    {orte_rmcast_base_queue_recv}
  [D] 'function int orte_rmcast_base_queue_xmit(rmcast_base_send_t*, orte_rmcast_channel_t, opal_buffer_t**, rmcast_base_channel_t**)'    {orte_rmcast_base_queue_xmit}
  [D] 'function int orte_rmcast_base_select()'    {orte_rmcast_base_select}
  [D] 'function int orte_rmcast_base_start_threads()'    {orte_rmcast_base_start_threads}
  [D] 'function void orte_rmcast_base_stop_threads()'    {orte_rmcast_base_stop_threads}
  [D] 'function int orte_rml_base_close()'    {orte_rml_base_close}
  [D] 'function int orte_rml_base_comm_start()'    {orte_rml_base_comm_start}
  [D] 'function int orte_rml_base_comm_stop()'    {orte_rml_base_comm_stop}
  [D] 'function int orte_rml_base_get_contact_info(orte_jobid_t, opal_buffer_t*)'    {orte_rml_base_get_contact_info}
  [D] 'function int orte_rml_base_null_recv(orte_process_name_t*, iovec*, int, orte_rml_tag_t, int)'    {orte_rml_base_null_recv}
  [D] 'function int orte_rml_base_null_recv_buffer_nb(orte_process_name_t*, orte_rml_tag_t, int, orte_rml_buffer_callback_fn_t, void*)'    {orte_rml_base_null_recv_buffer_nb}
  [D] 'function int orte_rml_base_null_recv_cancel(orte_process_name_t*, orte_rml_tag_t)'    {orte_rml_base_null_recv_cancel}
  [D] 'function int orte_rml_base_null_send(orte_process_name_t*, iovec*, int, int, int)'    {orte_rml_base_null_send}
  [D] 'function int orte_rml_base_null_send_buffer(orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, int)'    {orte_rml_base_null_send_buffer}
  [D] 'function int orte_rml_base_null_send_buffer_nb(orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, int, orte_rml_buffer_callback_fn_t, void*)'    {orte_rml_base_null_send_buffer_nb}
  [D] 'function int orte_rml_base_null_send_nb(orte_process_name_t*, iovec*, int, orte_rml_tag_t, int, orte_rml_callback_fn_t, void*)'    {orte_rml_base_null_send_nb}
  [D] 'function int orte_rml_base_open()'    {orte_rml_base_open}
  [D] 'function int orte_rml_base_parse_uris(const char*, orte_process_name_t*, char***)'    {orte_rml_base_parse_uris}
  [D] 'function int orte_rml_base_select()'    {orte_rml_base_select}
  [D] 'function int orte_rml_base_update_contact_info(opal_buffer_t*)'    {orte_rml_base_update_contact_info}
  [D] 'function int orte_rml_oob_add_exception(orte_rml_exception_callback_t)'    {orte_rml_oob_add_exception}
  [D] 'function int orte_rml_oob_del_exception(orte_rml_exception_callback_t)'    {orte_rml_oob_del_exception}
  [D] 'function void orte_rml_oob_exception_callback(const orte_process_name_t*, orte_rml_exception_t)'    {orte_rml_oob_exception_callback}
  [D] 'function int orte_rml_oob_fini()'    {orte_rml_oob_fini}
  [D] 'function int orte_rml_oob_ft_event(int)'    {orte_rml_oob_ft_event}
  [D] 'function int orte_rml_oob_get_new_name(orte_process_name_t*)'    {orte_rml_oob_get_new_name}
  [D] 'function char* orte_rml_oob_get_uri()'    {orte_rml_oob_get_uri}
  [D] 'function int orte_rml_oob_init()'    {orte_rml_oob_init}
  [D] 'function int orte_rml_oob_ping(const char*, const timeval*)'    {orte_rml_oob_ping}
  [D] 'function int orte_rml_oob_recv(orte_process_name_t*, iovec*, int, orte_rml_tag_t, int)'    {orte_rml_oob_recv}
  [D] 'function int orte_rml_oob_recv_buffer(orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, int)'    {orte_rml_oob_recv_buffer}
  [D] 'function int orte_rml_oob_recv_buffer_nb(orte_process_name_t*, orte_rml_tag_t, int, orte_rml_buffer_callback_fn_t, void*)'    {orte_rml_oob_recv_buffer_nb}
  [D] 'function int orte_rml_oob_recv_cancel(orte_process_name_t*, orte_rml_tag_t)'    {orte_rml_oob_recv_cancel}
  [D] 'function int orte_rml_oob_recv_nb(orte_process_name_t*, iovec*, int, orte_rml_tag_t, int, orte_rml_callback_fn_t, void*)'    {orte_rml_oob_recv_nb}
  [D] 'function int orte_rml_oob_send(orte_process_name_t*, iovec*, int, int, int)'    {orte_rml_oob_send}
  [D] 'function int orte_rml_oob_send_buffer(orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, int)'    {orte_rml_oob_send_buffer}
  [D] 'function int orte_rml_oob_send_buffer_nb(orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, int, orte_rml_buffer_callback_fn_t, void*)'    {orte_rml_oob_send_buffer_nb}
  [D] 'function int orte_rml_oob_send_nb(orte_process_name_t*, iovec*, int, orte_rml_tag_t, int, orte_rml_callback_fn_t, void*)'    {orte_rml_oob_send_nb}
  [D] 'function int orte_rml_oob_set_uri(const char*)'    {orte_rml_oob_set_uri}
  [D] 'function int orte_routed_base_close()'    {orte_routed_base_close}
  [D] 'function int orte_routed_base_comm_start()'    {orte_routed_base_comm_start}
  [D] 'function int orte_routed_base_comm_stop()'    {orte_routed_base_comm_stop}
  [D] 'function int orte_routed_base_open()'    {orte_routed_base_open}
  [D] 'function int orte_routed_base_process_callback(orte_jobid_t, opal_buffer_t*)'    {orte_routed_base_process_callback}
  [D] 'function void orte_routed_base_process_msg(int, short int, void*)'    {orte_routed_base_process_msg}
  [D] 'function void orte_routed_base_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_routed_base_recv}
  [D] 'function int orte_routed_base_register_sync(bool)'    {orte_routed_base_register_sync}
  [D] 'function int orte_routed_base_select()'    {orte_routed_base_select}
  [D] 'function int orte_session_dir(bool, char*, char*, char*, orte_process_name_t*)'    {orte_session_dir}
  [D] 'function int orte_session_dir_cleanup(orte_jobid_t)'    {orte_session_dir_cleanup}
  [D] 'function int orte_session_dir_finalize(orte_process_name_t*)'    {orte_session_dir_finalize}
  [D] 'function int orte_session_dir_get_name(char**, char**, char**, char*, char*, orte_process_name_t*)'    {orte_session_dir_get_name}
  [D] 'function int orte_show_help(const char*, const char*, bool, ...)'    {orte_show_help}
  [D] 'function void orte_show_help_finalize()'    {orte_show_help_finalize}
  [D] 'function int orte_show_help_init()'    {orte_show_help_init}
  [D] 'function bool orte_show_help_is_available()'    {orte_show_help_is_available}
  [D] 'function void orte_show_help_recv(int, orte_process_name_t*, opal_buffer_t*, orte_rml_tag_t, void*)'    {orte_show_help_recv}
  [D] 'function int orte_snapc_base_add_timestamp(char*)'    {orte_snapc_base_add_timestamp}
  [D] 'function int orte_snapc_base_add_vpid_metadata(orte_process_name_t*, char*, char*, char*, char*)'    {orte_snapc_base_add_vpid_metadata}
  [D] 'function int orte_snapc_base_close()'    {orte_snapc_base_close}
  [D] 'function int orte_snapc_base_extract_metadata(orte_snapc_base_global_snapshot_t*)'    {orte_snapc_base_extract_metadata}
  [D] 'function int orte_snapc_base_finalize_metadata(char*)'    {orte_snapc_base_finalize_metadata}
  [D] 'function int orte_snapc_base_get_all_snapshot_ref_seqs(char*, char*, int*, int**)'    {orte_snapc_base_get_all_snapshot_ref_seqs}
  [D] 'function int orte_snapc_base_get_all_snapshot_refs(char*, int*, char***)'    {orte_snapc_base_get_all_snapshot_refs}
  [D] 'function int orte_snapc_base_get_global_snapshot_directory(char**, char*)'    {orte_snapc_base_get_global_snapshot_directory}
  [D] 'function int orte_snapc_base_get_global_snapshot_metadata_file(char**, char*)'    {orte_snapc_base_get_global_snapshot_metadata_file}
  [D] 'function int orte_snapc_base_global_coord_ckpt_init_cmd(orte_process_name_t*, opal_buffer_t*, opal_crs_base_ckpt_options_t*, orte_jobid_t*)'    {orte_snapc_base_global_coord_ckpt_init_cmd}
  [D] 'function int orte_snapc_base_global_coord_ckpt_update_cmd(orte_process_name_t*, char*, int, int)'    {orte_snapc_base_global_coord_ckpt_update_cmd}
  [D] 'function void orte_snapc_base_global_snapshot_construct(orte_snapc_base_global_snapshot_t*)'    {orte_snapc_base_global_snapshot_construct}
  [D] 'function void orte_snapc_base_global_snapshot_destruct(orte_snapc_base_global_snapshot_t*)'    {orte_snapc_base_global_snapshot_destruct}
  [D] 'function int orte_snapc_base_init_global_snapshot_directory(char*, bool)'    {orte_snapc_base_init_global_snapshot_directory}
  [D] 'function void orte_snapc_base_local_snapshot_construct(orte_snapc_base_local_snapshot_t*)'    {orte_snapc_base_local_snapshot_construct}
  [D] 'function void orte_snapc_base_local_snapshot_destruct(orte_snapc_base_local_snapshot_t*)'    {orte_snapc_base_local_snapshot_destruct}
  [D] 'function int orte_snapc_base_module_init(bool, bool)'    {orte_snapc_base_module_init}
  [D] 'function int orte_snapc_base_none_ft_event(int)'    {orte_snapc_base_none_ft_event}
  [D] 'function int orte_snapc_base_none_open()'    {orte_snapc_base_none_open}
  [D] 'function int orte_snapc_base_none_query(mca_base_module_t**, int*)'    {orte_snapc_base_none_query}
  [D] 'function int orte_snapc_base_none_release_job(orte_jobid_t)'    {orte_snapc_base_none_release_job}
  [D] 'function int orte_snapc_base_none_setup_job(orte_jobid_t)'    {orte_snapc_base_none_setup_job}
  [D] 'function int orte_snapc_base_none_start_ckpt(orte_snapc_base_quiesce_t*)'    {orte_snapc_base_none_start_ckpt}
  [D] 'function int orte_snapc_base_open()'    {orte_snapc_base_open}
  [D] 'function int orte_snapc_base_pack_options(opal_buffer_t*, opal_crs_base_ckpt_options_t*)'    {orte_snapc_base_pack_options}
  [D] 'function void orte_snapc_base_quiesce_construct(orte_snapc_base_quiesce_t*)'    {orte_snapc_base_quiesce_construct}
  [D] 'function void orte_snapc_base_quiesce_destruct(orte_snapc_base_quiesce_t*)'    {orte_snapc_base_quiesce_destruct}
  [D] 'function int orte_snapc_base_select(bool, bool)'    {orte_snapc_base_select}
  [D] 'function int orte_snapc_base_unique_global_snapshot_name(char**, pid_t)'    {orte_snapc_base_unique_global_snapshot_name}
  [D] 'function int orte_snapc_base_unpack_options(opal_buffer_t*, opal_crs_base_ckpt_options_t*)'    {orte_snapc_base_unpack_options}
  [D] 'function void orte_snapc_ckpt_state_notify(int)'    {orte_snapc_ckpt_state_notify}
  [D] 'function int orte_snapc_ckpt_state_str(char**, int)'    {orte_snapc_ckpt_state_str}
  [D] 'function void orte_trigger_event(orte_trigger_event_t*)'    {orte_trigger_event}
  [D] 'function int orte_util_add_dash_host_nodes(opal_list_t*, bool*, char**)'    {orte_util_add_dash_host_nodes}
  [D] 'function int orte_util_add_hostfile_nodes(opal_list_t*, bool*, char*)'    {orte_util_add_hostfile_nodes}
  [D] 'function int orte_util_build_daemon_nidmap(char**)'    {orte_util_build_daemon_nidmap}
  [D] 'function int orte_util_check_context_app(orte_app_context_t*, char**)'    {orte_util_check_context_app}
  [D] 'function int orte_util_check_context_cwd(orte_app_context_t*, bool)'    {orte_util_check_context_cwd}
  [D] 'function int orte_util_comm_connect_tool(char*)'    {orte_util_comm_connect_tool}
  [D] 'function int orte_util_comm_halt_vm(const orte_process_name_t*)'    {orte_util_comm_halt_vm}
  [D] 'function int orte_util_comm_query_job_info(const orte_process_name_t*, orte_jobid_t, int*, orte_job_t***)'    {orte_util_comm_query_job_info}
  [D] 'function int orte_util_comm_query_node_info(const orte_process_name_t*, char*, int*, orte_node_t***)'    {orte_util_comm_query_node_info}
  [D] 'function int orte_util_comm_query_proc_info(const orte_process_name_t*, orte_jobid_t, orte_vpid_t, int*, orte_proc_t***)'    {orte_util_comm_query_proc_info}
  [D] 'function int orte_util_comm_report_event(orte_comm_event_t)'    {orte_util_comm_report_event}
  [D] 'function int orte_util_comm_spawn_job(const orte_process_name_t*, orte_job_t*)'    {orte_util_comm_spawn_job}
  [D] 'function int orte_util_comm_terminate_job(const orte_process_name_t*, orte_jobid_t)'    {orte_util_comm_terminate_job}
  [D] 'function int orte_util_compare_name_fields(orte_ns_cmp_bitmask_t, const orte_process_name_t*, const orte_process_name_t*)'    {orte_util_compare_name_fields}
  [D] 'function int orte_util_convert_jobid_to_string(char**, const orte_jobid_t)'    {orte_util_convert_jobid_to_string}
  [D] 'function int orte_util_convert_process_name_to_string(char**, const orte_process_name_t*)'    {orte_util_convert_process_name_to_string}
  [D] 'function int orte_util_convert_string_to_jobid(orte_jobid_t*, const char*)'    {orte_util_convert_string_to_jobid}
  [D] 'function int orte_util_convert_string_to_process_name(orte_process_name_t*, const char*)'    {orte_util_convert_string_to_process_name}
  [D] 'function int orte_util_convert_string_to_sysinfo(char**, char**, const char*)'    {orte_util_convert_string_to_sysinfo}
  [D] 'function int orte_util_convert_string_to_vpid(orte_vpid_t*, const char*)'    {orte_util_convert_string_to_vpid}
  [D] 'function int orte_util_convert_sysinfo_to_string(char**, const char*, const char*)'    {orte_util_convert_sysinfo_to_string}
  [D] 'function int orte_util_convert_vpid_to_string(char**, const orte_vpid_t)'    {orte_util_convert_vpid_to_string}
  [D] 'function int orte_util_create_process_name(orte_process_name_t**, orte_jobid_t, orte_vpid_t)'    {orte_util_create_process_name}
  [D] 'function int orte_util_decode_nodemap(opal_byte_object_t*)'    {orte_util_decode_nodemap}
  [D] 'function int orte_util_decode_pidmap(opal_byte_object_t*)'    {orte_util_decode_pidmap}
  [D] 'function int orte_util_encode_nodemap(opal_byte_object_t*)'    {orte_util_encode_nodemap}
  [D] 'function int orte_util_encode_pidmap(opal_byte_object_t*)'    {orte_util_encode_pidmap}
  [D] 'function int orte_util_filter_dash_host_nodes(opal_list_t*, char**)'    {orte_util_filter_dash_host_nodes}
  [D] 'function int orte_util_filter_hostfile_nodes(opal_list_t*, char*)'    {orte_util_filter_hostfile_nodes}
  [D] 'function int orte_util_get_ordered_host_list(opal_list_t*, char*)'    {orte_util_get_ordered_host_list}
  [D] 'function uint64_t orte_util_hash_name(const orte_process_name_t*)'    {orte_util_hash_name}
  [D] 'function YY_BUFFER_STATE orte_util_hostfile__create_buffer(FILE*, int)'    {orte_util_hostfile__create_buffer}
  [D] 'function void orte_util_hostfile__delete_buffer(YY_BUFFER_STATE)'    {orte_util_hostfile__delete_buffer}
  [D] 'function void orte_util_hostfile__flush_buffer(YY_BUFFER_STATE)'    {orte_util_hostfile__flush_buffer}
  [D] 'function YY_BUFFER_STATE orte_util_hostfile__scan_buffer(char*, yy_size_t)'    {orte_util_hostfile__scan_buffer}
  [D] 'function YY_BUFFER_STATE orte_util_hostfile__scan_bytes(const char*, int)'    {orte_util_hostfile__scan_bytes}
  [D] 'function YY_BUFFER_STATE orte_util_hostfile__scan_string(const char*)'    {orte_util_hostfile__scan_string}
  [D] 'function void orte_util_hostfile__switch_to_buffer(YY_BUFFER_STATE)'    {orte_util_hostfile__switch_to_buffer}
  [D] 'function void* orte_util_hostfile_alloc(yy_size_t)'    {orte_util_hostfile_alloc}
  [D] 'function void orte_util_hostfile_free(void*)'    {orte_util_hostfile_free}
  [D] 'function int orte_util_hostfile_get_debug()'    {orte_util_hostfile_get_debug}
  [D] 'function FILE* orte_util_hostfile_get_in()'    {orte_util_hostfile_get_in}
  [D] 'function int orte_util_hostfile_get_leng()'    {orte_util_hostfile_get_leng}
  [D] 'function int orte_util_hostfile_get_lineno()'    {orte_util_hostfile_get_lineno}
  [D] 'function FILE* orte_util_hostfile_get_out()'    {orte_util_hostfile_get_out}
  [D] 'function char* orte_util_hostfile_get_text()'    {orte_util_hostfile_get_text}
  [D] 'function int orte_util_hostfile_lex()'    {orte_util_hostfile_lex}
  [D] 'function int orte_util_hostfile_lex_destroy()'    {orte_util_hostfile_lex_destroy}
  [D] 'function void orte_util_hostfile_pop_buffer_state()'    {orte_util_hostfile_pop_buffer_state}
  [D] 'function void orte_util_hostfile_push_buffer_state(YY_BUFFER_STATE)'    {orte_util_hostfile_push_buffer_state}
  [D] 'function void* orte_util_hostfile_realloc(void*, yy_size_t)'    {orte_util_hostfile_realloc}
  [D] 'function void orte_util_hostfile_restart(FILE*)'    {orte_util_hostfile_restart}
  [D] 'function void orte_util_hostfile_set_debug(int)'    {orte_util_hostfile_set_debug}
  [D] 'function void orte_util_hostfile_set_in(FILE*)'    {orte_util_hostfile_set_in}
  [D] 'function void orte_util_hostfile_set_lineno(int)'    {orte_util_hostfile_set_lineno}
  [D] 'function void orte_util_hostfile_set_out(FILE*)'    {orte_util_hostfile_set_out}
  [D] 'function int orte_util_hostfile_wrap()'    {orte_util_hostfile_wrap}
  [D] 'function orte_jmap_t* orte_util_lookup_jmap(orte_jobid_t)'    {orte_util_lookup_jmap}
  [D] 'function orte_nid_t* orte_util_lookup_nid(orte_process_name_t*)'    {orte_util_lookup_nid}
  [D] 'function orte_pmap_t* orte_util_lookup_pmap(orte_process_name_t*)'    {orte_util_lookup_pmap}
  [D] 'function void orte_util_nidmap_finalize()'    {orte_util_nidmap_finalize}
  [D] 'function int orte_util_nidmap_init(opal_buffer_t*)'    {orte_util_nidmap_init}
  [D] 'function void orte_util_parse_range_options(char*, char***)'    {orte_util_parse_range_options}
  [D] 'function char* orte_util_print_job_family(const orte_jobid_t)'    {orte_util_print_job_family}
  [D] 'function char* orte_util_print_jobids(const orte_jobid_t)'    {orte_util_print_jobids}
  [D] 'function char* orte_util_print_local_jobid(const orte_jobid_t)'    {orte_util_print_local_jobid}
  [D] 'function char* orte_util_print_name_args(const orte_process_name_t*)'    {orte_util_print_name_args}
  [D] 'function char* orte_util_print_vpids(const orte_vpid_t)'    {orte_util_print_vpids}
  [D] 'function int orte_util_setup_local_nidmap_entries()'    {orte_util_setup_local_nidmap_entries}
  [D] 'function int orte_wait_cb(pid_t, orte_wait_fn_t, void*)'    {orte_wait_cb}
  [D] 'function int orte_wait_cb_cancel(pid_t)'    {orte_wait_cb_cancel}
  [D] 'function int orte_wait_cb_disable()'    {orte_wait_cb_disable}
  [D] 'function int orte_wait_cb_enable()'    {orte_wait_cb_enable}
  [D] 'function void orte_wait_disable()'    {orte_wait_disable}
  [D] 'function void orte_wait_enable()'    {orte_wait_enable}
  [D] 'function int orte_wait_event(opal_event_t**, orte_trigger_event_t*, char*, void (int, short int, void*)*)'    {orte_wait_event}
  [D] 'function int orte_wait_finalize()'    {orte_wait_finalize}
  [D] 'function int orte_wait_init()'    {orte_wait_init}
  [D] 'function int orte_wait_kill(int)'    {orte_wait_kill}
  [D] 'function void orte_wait_signal_callback(int, short int, void*)'    {orte_wait_signal_callback}
  [D] 'function pid_t orte_waitpid(pid_t, int*, int)'    {orte_waitpid}
  [D] 'function int orte_write_hnp_contact_file(char*)'    {orte_write_hnp_contact_file}
  [D] 'function void pml_v_output_close()'    {pml_v_output_close}
  [D] 'function int pml_v_output_open(char*, int)'    {pml_v_output_open}
  [D] 'function int shmem_posix_shm_open(char*, size_t)'    {shmem_posix_shm_open}

1 Added function:

  [A] 'function void ompi_debugger_setup_dlls()'    {ompi_debugger_setup_dlls}

879 Removed variables:

  [D] 'volatile int MPIR_being_debugged'    {MPIR_being_debugged}
  [D] 'char* MPIR_debug_abort_string'    {MPIR_debug_abort_string}
  [D] 'volatile int MPIR_debug_state'    {MPIR_debug_state}
  [D] 'double MPI_FORTRAN_ARGVS_NULL'    {MPI_FORTRAN_ARGVS_NULL}
  [D] 'char* MPI_FORTRAN_ARGV_NULL'    {MPI_FORTRAN_ARGV_NULL}
  [D] 'int MPI_FORTRAN_BOTTOM'    {MPI_FORTRAN_BOTTOM}
  [D] 'int* MPI_FORTRAN_ERRCODES_IGNORE'    {MPI_FORTRAN_ERRCODES_IGNORE}
  [D] 'int MPI_FORTRAN_IN_PLACE'    {MPI_FORTRAN_IN_PLACE}
  [D] 'double MPI_FORTRAN_STATUSES_IGNORE'    {MPI_FORTRAN_STATUSES_IGNORE}
  [D] 'int* MPI_FORTRAN_STATUS_IGNORE'    {MPI_FORTRAN_STATUS_IGNORE}
  [D] 'int carto_file__flex_debug'    {carto_file__flex_debug}
  [D] 'bool carto_file_done'    {carto_file_done}
  [D] 'FILE* carto_file_in'    {carto_file_in}
  [D] 'int carto_file_leng'    {carto_file_leng}
  [D] 'int carto_file_line'    {carto_file_line}
  [D] 'int carto_file_lineno'    {carto_file_lineno}
  [D] 'FILE* carto_file_out'    {carto_file_out}
  [D] 'char* carto_file_path'    {carto_file_path}
  [D] 'char* carto_file_text'    {carto_file_text}
  [D] 'orte_rds_value_t carto_file_value'    {carto_file_value}
  [D] 'opal_class_t cmd_line_option_t_class'    {cmd_line_option_t_class}
  [D] 'opal_class_t cmd_line_param_t_class'    {cmd_line_param_t_class}
  [D] 'converter_info_t converters[5]'    {converters}
  [D] 'int cur_num_incomming'    {cur_num_incomming}
  [D] 'int cur_num_outgoing'    {cur_num_outgoing}
  [D] 'opal_dss_buffer_type_t default_buf_type'    {default_buf_type}
  [D] 'const opal_eventop epollops'    {epollops}
  [D] 'opal_event_base* evsignal_base'    {evsignal_base}
  [D] 'char* log_path'    {log_path}
  [D] 'opal_list_t mca_allocator_base_components'    {mca_allocator_base_components}
  [D] 'int mca_allocator_base_output'    {mca_allocator_base_output}
  [D] 'const mca_base_component_t* mca_allocator_base_static_components[3]'    {mca_allocator_base_static_components}
  [D] 'mca_allocator_base_component_t mca_allocator_basic_component'    {mca_allocator_basic_component}
  [D] 'opal_class_t mca_allocator_basic_segment_t_class'    {mca_allocator_basic_segment_t_class}
  [D] 'mca_allocator_base_component_t mca_allocator_bucket_component'    {mca_allocator_bucket_component}
  [D] 'const mca_base_component_t* mca_backtrace_base_static_components[2]'    {mca_backtrace_base_static_components}
  [D] 'const opal_backtrace_base_component_2_0_0_t mca_backtrace_execinfo_component'    {mca_backtrace_execinfo_component}
  [D] 'opal_class_t mca_base_component_list_item_t_class'    {mca_base_component_list_item_t_class}
  [D] 'opal_class_t mca_base_component_priority_list_item_t_class'    {mca_base_component_priority_list_item_t_class}
  [D] 'bool mca_base_opened'    {mca_base_opened}
  [D] 'int mca_base_param_component_path'    {mca_base_param_component_path}
  [D] 'opal_class_t mca_base_param_file_value_t_class'    {mca_base_param_file_value_t_class}
  [D] 'opal_list_t mca_base_param_file_values'    {mca_base_param_file_values}
  [D] 'opal_class_t mca_base_param_info_t_class'    {mca_base_param_info_t_class}
  [D] 'opal_class_t mca_base_param_t_class'    {mca_base_param_t_class}
  [D] 'char* mca_base_system_default_path'    {mca_base_system_default_path}
  [D] 'char* mca_base_user_default_path'    {mca_base_user_default_path}
  [D] 'int mca_bml_base_already_opened'    {mca_bml_base_already_opened}
  [D] 'opal_list_t mca_bml_base_components_available'    {mca_bml_base_components_available}
  [D] 'int mca_bml_base_output'    {mca_bml_base_output}
  [D] 'mca_btl_active_message_callback_t mca_btl_base_active_message_trigger[255]'    {mca_btl_base_active_message_trigger}
  [D] 'int mca_btl_base_already_opened'    {mca_btl_base_already_opened}
  [D] 'opal_list_t mca_btl_base_components_opened'    {mca_btl_base_components_opened}
  [D] 'opal_class_t mca_btl_base_descriptor_t_class'    {mca_btl_base_descriptor_t_class}
  [D] 'char* mca_btl_base_exclude'    {mca_btl_base_exclude}
  [D] 'char* mca_btl_base_include'    {mca_btl_base_include}
  [D] 'opal_list_t mca_btl_base_modules_initialized'    {mca_btl_base_modules_initialized}
  [D] 'int mca_btl_base_output'    {mca_btl_base_output}
  [D] 'opal_class_t mca_btl_base_selected_module_t_class'    {mca_btl_base_selected_module_t_class}
  [D] 'const mca_base_component_t* mca_btl_base_static_components[4]'    {mca_btl_base_static_components}
  [D] 'bool mca_btl_base_thread_multiple_override'    {mca_btl_base_thread_multiple_override}
  [D] 'int mca_btl_base_verbose'    {mca_btl_base_verbose}
  [D] 'int mca_btl_base_warn_component_unused'    {mca_btl_base_warn_component_unused}
  [D] 'mca_btl_base_module_t mca_btl_self'    {mca_btl_self}
  [D] 'mca_btl_self_component_t mca_btl_self_component'    {mca_btl_self_component}
  [D] 'opal_class_t mca_btl_self_frag_eager_t_class'    {mca_btl_self_frag_eager_t_class}
  [D] 'opal_class_t mca_btl_self_frag_rdma_t_class'    {mca_btl_self_frag_rdma_t_class}
  [D] 'opal_class_t mca_btl_self_frag_send_t_class'    {mca_btl_self_frag_send_t_class}
  [D] 'mca_btl_sm_t mca_btl_sm'    {mca_btl_sm}
  [D] 'mca_btl_sm_component_t mca_btl_sm_component'    {mca_btl_sm_component}
  [D] 'opal_class_t mca_btl_sm_frag1_t_class'    {mca_btl_sm_frag1_t_class}
  [D] 'opal_class_t mca_btl_sm_frag2_t_class'    {mca_btl_sm_frag2_t_class}
  [D] 'opal_class_t mca_btl_sm_user_t_class'    {mca_btl_sm_user_t_class}
  [D] 'mca_btl_tcp_component_t mca_btl_tcp_component'    {mca_btl_tcp_component}
  [D] 'opal_class_t mca_btl_tcp_endpoint_t_class'    {mca_btl_tcp_endpoint_t_class}
  [D] 'opal_class_t mca_btl_tcp_event_t_class'    {mca_btl_tcp_event_t_class}
  [D] 'opal_class_t mca_btl_tcp_frag_eager_t_class'    {mca_btl_tcp_frag_eager_t_class}
  [D] 'opal_class_t mca_btl_tcp_frag_max_t_class'    {mca_btl_tcp_frag_max_t_class}
  [D] 'opal_class_t mca_btl_tcp_frag_t_class'    {mca_btl_tcp_frag_t_class}
  [D] 'opal_class_t mca_btl_tcp_frag_user_t_class'    {mca_btl_tcp_frag_user_t_class}
  [D] 'mca_btl_tcp_module_t mca_btl_tcp_module'    {mca_btl_tcp_module}
  [D] 'opal_class_t mca_btl_tcp_proc_t_class'    {mca_btl_tcp_proc_t_class}
  [D] 'const opal_carto_base_component_2_0_0_t mca_carto_auto_detect_component'    {mca_carto_auto_detect_component}
  [D] 'const mca_base_component_t* mca_carto_base_static_components[3]'    {mca_carto_base_static_components}
  [D] 'const opal_carto_base_component_2_0_0_t mca_carto_file_component'    {mca_carto_file_component}
  [D] 'int mca_coll_base_associative'    {mca_coll_base_associative}
  [D] 'opal_list_t mca_coll_base_components_available'    {mca_coll_base_components_available}
  [D] 'bool mca_coll_base_components_available_valid'    {mca_coll_base_components_available_valid}
  [D] 'opal_list_t mca_coll_base_components_opened'    {mca_coll_base_components_opened}
  [D] 'bool mca_coll_base_components_opened_valid'    {mca_coll_base_components_opened_valid}
  [D] 'int mca_coll_base_crossover'    {mca_coll_base_crossover}
  [D] 'int mca_coll_base_output'    {mca_coll_base_output}
  [D] 'int mca_coll_hierarch_bcast_alg_param'    {mca_coll_hierarch_bcast_alg_param}
  [D] 'const mca_coll_base_component_2_0_0_t mca_coll_hierarch_component'    {mca_coll_hierarch_component}
  [D] 'const char* mca_coll_hierarch_component_version_string'    {mca_coll_hierarch_component_version_string}
  [D] 'int mca_coll_hierarch_detection_alg_param'    {mca_coll_hierarch_detection_alg_param}
  [D] 'int mca_coll_hierarch_ignore_sm_param'    {mca_coll_hierarch_ignore_sm_param}
  [D] 'opal_class_t mca_coll_hierarch_module_t_class'    {mca_coll_hierarch_module_t_class}
  [D] 'int mca_coll_hierarch_priority_param'    {mca_coll_hierarch_priority_param}
  [D] 'int mca_coll_hierarch_segsize_param'    {mca_coll_hierarch_segsize_param}
  [D] 'int mca_coll_hierarch_use_rdma_param'    {mca_coll_hierarch_use_rdma_param}
  [D] 'int mca_coll_hierarch_verbose_param'    {mca_coll_hierarch_verbose_param}
  [D] 'int mca_coll_self_priority_param'    {mca_coll_self_priority_param}
  [D] 'opal_class_t mca_common_sm_module_t_class'    {mca_common_sm_module_t_class}
  [D] 'const mca_base_component_t* mca_crs_base_static_components[2]'    {mca_crs_base_static_components}
  [D] 'opal_crs_none_component_t mca_crs_none_component'    {mca_crs_none_component}
  [D] 'const mca_base_component_t* mca_dpm_base_static_components[2]'    {mca_dpm_base_static_components}
  [D] 'ompi_dpm_base_component_t mca_dpm_orte_component'    {mca_dpm_orte_component}
  [D] 'const mca_base_component_t* mca_errmgr_base_static_components[2]'    {mca_errmgr_base_static_components}
  [D] 'mca_errmgr_base_component_t mca_errmgr_default_component'    {mca_errmgr_default_component}
  [D] 'const mca_base_component_t* mca_ess_base_static_components[6]'    {mca_ess_base_static_components}
  [D] 'orte_ess_base_component_t mca_ess_env_component'    {mca_ess_env_component}
  [D] 'orte_ess_base_component_t mca_ess_hnp_component'    {mca_ess_hnp_component}
  [D] 'orte_ess_base_component_t mca_ess_singleton_component'    {mca_ess_singleton_component}
  [D] 'orte_ess_base_component_t mca_ess_slave_component'    {mca_ess_slave_component}
  [D] 'orte_ess_base_component_t mca_ess_tool_component'    {mca_ess_tool_component}
  [D] 'const mca_base_component_t* mca_filem_base_static_components[2]'    {mca_filem_base_static_components}
  [D] 'orte_filem_rsh_component_t mca_filem_rsh_component'    {mca_filem_rsh_component}
  [D] 'orte_grpcomm_base_component_t mca_grpcomm_bad_component'    {mca_grpcomm_bad_component}
  [D] 'opal_list_t mca_grpcomm_base_components_available'    {mca_grpcomm_base_components_available}
  [D] 'bool mca_grpcomm_base_selected'    {mca_grpcomm_base_selected}
  [D] 'orte_grpcomm_base_component_t mca_grpcomm_base_selected_component'    {mca_grpcomm_base_selected_component}
  [D] 'const mca_base_component_t* mca_grpcomm_base_static_components[4]'    {mca_grpcomm_base_static_components}
  [D] 'orte_grpcomm_base_component_t mca_grpcomm_basic_component'    {mca_grpcomm_basic_component}
  [D] 'orte_grpcomm_base_component_t mca_grpcomm_hier_component'    {mca_grpcomm_hier_component}
  [D] 'const mca_base_component_t* mca_hwloc_base_static_components[2]'    {mca_hwloc_base_static_components}
  [D] 'const opal_hwloc_component_t mca_hwloc_external_component'    {mca_hwloc_external_component}
  [D] 'const mca_base_component_t* mca_installdirs_base_static_components[3]'    {mca_installdirs_base_static_components}
  [D] 'const opal_installdirs_base_component_t mca_installdirs_config_component'    {mca_installdirs_config_component}
  [D] 'opal_installdirs_base_component_t mca_installdirs_env_component'    {mca_installdirs_env_component}
  [D] 'opal_list_t mca_io_base_components_available'    {mca_io_base_components_available}
  [D] 'bool mca_io_base_components_available_valid'    {mca_io_base_components_available_valid}
  [D] 'opal_list_t mca_io_base_components_opened'    {mca_io_base_components_opened}
  [D] 'bool mca_io_base_components_opened_valid'    {mca_io_base_components_opened_valid}
  [D] 'int mca_io_base_output'    {mca_io_base_output}
  [D] 'int mca_io_base_param'    {mca_io_base_param}
  [D] 'mca_io_base_component_2_0_0_t mca_io_romio_component'    {mca_io_romio_component}
  [D] 'const char* mca_io_romio_component_version_string'    {mca_io_romio_component_version_string}
  [D] 'mca_io_base_module_2_0_0_t mca_io_romio_module'    {mca_io_romio_module}
  [D] 'opal_mutex_t mca_io_romio_mutex'    {mca_io_romio_mutex}
  [D] 'const mca_base_component_t* mca_iof_base_static_components[4]'    {mca_iof_base_static_components}
  [D] 'orte_iof_hnp_component_t mca_iof_hnp_component'    {mca_iof_hnp_component}
  [D] 'const char* mca_iof_hnp_component_version_string'    {mca_iof_hnp_component_version_string}
  [D] 'orte_iof_orted_component_t mca_iof_orted_component'    {mca_iof_orted_component}
  [D] 'const char* mca_iof_orted_component_version_string'    {mca_iof_orted_component_version_string}
  [D] 'orte_iof_tool_component_t mca_iof_tool_component'    {mca_iof_tool_component}
  [D] 'const char* mca_iof_tool_component_version_string'    {mca_iof_tool_component_version_string}
  [D] 'const mca_base_component_t* mca_maffinity_base_static_components[3]'    {mca_maffinity_base_static_components}
  [D] 'const opal_maffinity_base_component_2_0_0_t mca_maffinity_first_use_component'    {mca_maffinity_first_use_component}
  [D] 'opal_maffinity_hwloc_component_2_0_0_t mca_maffinity_hwloc_component'    {mca_maffinity_hwloc_component}
  [D] 'const mca_base_component_t* mca_memchecker_base_static_components[1]'    {mca_memchecker_base_static_components}
  [D] 'const mca_base_component_t* mca_memcpy_base_static_components[1]'    {mca_memcpy_base_static_components}
  [D] 'const mca_base_component_t* mca_memory_base_static_components[1]'    {mca_memory_base_static_components}
  [D] 'opal_list_t mca_mpool_base_components'    {mca_mpool_base_components}
  [D] 'opal_list_t mca_mpool_base_modules'    {mca_mpool_base_modules}
  [D] 'int mca_mpool_base_output'    {mca_mpool_base_output}
  [D] 'uint32_t mca_mpool_base_page_size'    {mca_mpool_base_page_size}
  [D] 'uint32_t mca_mpool_base_page_size_log'    {mca_mpool_base_page_size_log}
  [D] 'opal_class_t mca_mpool_base_registration_t_class'    {mca_mpool_base_registration_t_class}
  [D] 'opal_class_t mca_mpool_base_selected_module_t_class'    {mca_mpool_base_selected_module_t_class}
  [D] 'const mca_base_component_t* mca_mpool_base_static_components[4]'    {mca_mpool_base_static_components}
  [D] 'ompi_rb_tree_t mca_mpool_base_tree'    {mca_mpool_base_tree}
  [D] 'ompi_free_list_t mca_mpool_base_tree_item_free_list'    {mca_mpool_base_tree_item_free_list}
  [D] 'opal_class_t mca_mpool_base_tree_item_t_class'    {mca_mpool_base_tree_item_t_class}
  [D] 'int mca_mpool_base_used_mem_hooks'    {mca_mpool_base_used_mem_hooks}
  [D] 'mca_mpool_fake_component_t mca_mpool_fake_component'    {mca_mpool_fake_component}
  [D] 'mca_mpool_rdma_component_t mca_mpool_rdma_component'    {mca_mpool_rdma_component}
  [D] 'mca_mpool_sm_component_t mca_mpool_sm_component'    {mca_mpool_sm_component}
  [D] 'opal_list_t mca_notifier_base_components_available'    {mca_notifier_base_components_available}
  [D] 'orte_notifier_base_component_t mca_notifier_base_selected_component'    {mca_notifier_base_selected_component}
  [D] 'const mca_base_component_t* mca_notifier_base_static_components[3]'    {mca_notifier_base_static_components}
  [D] 'orte_notifier_command_component_t mca_notifier_command_component'    {mca_notifier_command_component}
  [D] 'orte_notifier_base_component_t mca_notifier_syslog_component'    {mca_notifier_syslog_component}
  [D] 'const mca_base_component_t* mca_odls_base_static_components[2]'    {mca_odls_base_static_components}
  [D] 'orte_odls_base_component_t mca_odls_default_component'    {mca_odls_default_component}
  [D] 'mca_oob_t mca_oob'    {mca_oob}
  [D] 'opal_list_t mca_oob_base_components'    {mca_oob_base_components}
  [D] 'opal_class_t mca_oob_base_info_t_class'    {mca_oob_base_info_t_class}
  [D] 'opal_list_t mca_oob_base_modules'    {mca_oob_base_modules}
  [D] 'int mca_oob_base_output'    {mca_oob_base_output}
  [D] 'const mca_base_component_t* mca_oob_base_static_components[2]'    {mca_oob_base_static_components}
  [D] 'opal_class_t mca_oob_t_class'    {mca_oob_t_class}
  [D] 'mca_oob_t mca_oob_tcp'    {mca_oob_tcp}
  [D] 'opal_class_t mca_oob_tcp_addr_t_class'    {mca_oob_tcp_addr_t_class}
  [D] 'mca_oob_tcp_component_t mca_oob_tcp_component'    {mca_oob_tcp_component}
  [D] 'opal_class_t mca_oob_tcp_device_t_class'    {mca_oob_tcp_device_t_class}
  [D] 'opal_class_t mca_oob_tcp_event_t_class'    {mca_oob_tcp_event_t_class}
  [D] 'opal_class_t mca_oob_tcp_msg_t_class'    {mca_oob_tcp_msg_t_class}
  [D] 'int mca_oob_tcp_output_handle'    {mca_oob_tcp_output_handle}
  [D] 'opal_class_t mca_oob_tcp_peer_t_class'    {mca_oob_tcp_peer_t_class}
  [D] 'opal_class_t mca_oob_tcp_pending_connection_t_class'    {mca_oob_tcp_pending_connection_t_class}
  [D] 'const mca_base_component_t* mca_paffinity_base_static_components[2]'    {mca_paffinity_base_static_components}
  [D] 'opal_paffinity_base_component_t mca_paffinity_hwloc_component'    {mca_paffinity_hwloc_component}
  [D] 'const mca_base_component_t* mca_plm_base_static_components[2]'    {mca_plm_base_static_components}
  [D] 'orte_plm_rsh_component_t mca_plm_rsh_component'    {mca_plm_rsh_component}
  [D] 'const char* mca_plm_rsh_component_version_string'    {mca_plm_rsh_component_version_string}
  [D] 'opal_list_t mca_pml_base_components_available'    {mca_pml_base_components_available}
  [D] 'int mca_pml_base_output'    {mca_pml_base_output}
  [D] 'mca_pml_bfo_t mca_pml_bfo'    {mca_pml_bfo}
  [D] 'opal_class_t mca_pml_bfo_buffer_t_class'    {mca_pml_bfo_buffer_t_class}
  [D] 'opal_class_t mca_pml_bfo_comm_t_class'    {mca_pml_bfo_comm_t_class}
  [D] 'mca_pml_base_component_2_0_0_t mca_pml_bfo_component'    {mca_pml_bfo_component}
  [D] 'int mca_pml_bfo_output'    {mca_pml_bfo_output}
  [D] 'opal_class_t mca_pml_bfo_pckt_pending_t_class'    {mca_pml_bfo_pckt_pending_t_class}
  [D] 'opal_class_t mca_pml_bfo_rdma_frag_t_class'    {mca_pml_bfo_rdma_frag_t_class}
  [D] 'opal_class_t mca_pml_bfo_recv_frag_t_class'    {mca_pml_bfo_recv_frag_t_class}
  [D] 'opal_class_t mca_pml_bfo_recv_request_t_class'    {mca_pml_bfo_recv_request_t_class}
  [D] 'opal_class_t mca_pml_bfo_send_range_t_class'    {mca_pml_bfo_send_range_t_class}
  [D] 'opal_class_t mca_pml_bfo_send_request_t_class'    {mca_pml_bfo_send_request_t_class}
  [D] 'mca_pml_csum_t mca_pml_csum'    {mca_pml_csum}
  [D] 'opal_class_t mca_pml_csum_buffer_t_class'    {mca_pml_csum_buffer_t_class}
  [D] 'opal_class_t mca_pml_csum_comm_t_class'    {mca_pml_csum_comm_t_class}
  [D] 'mca_pml_base_component_2_0_0_t mca_pml_csum_component'    {mca_pml_csum_component}
  [D] 'opal_class_t mca_pml_csum_pckt_pending_t_class'    {mca_pml_csum_pckt_pending_t_class}
  [D] 'opal_class_t mca_pml_csum_rdma_frag_t_class'    {mca_pml_csum_rdma_frag_t_class}
  [D] 'opal_class_t mca_pml_csum_recv_frag_t_class'    {mca_pml_csum_recv_frag_t_class}
  [D] 'opal_class_t mca_pml_csum_recv_request_t_class'    {mca_pml_csum_recv_request_t_class}
  [D] 'opal_class_t mca_pml_csum_send_range_t_class'    {mca_pml_csum_send_range_t_class}
  [D] 'opal_class_t mca_pml_csum_send_request_t_class'    {mca_pml_csum_send_request_t_class}
  [D] 'const mca_base_component_t* mca_pstat_base_static_components[2]'    {mca_pstat_base_static_components}
  [D] 'const opal_pstat_base_component_t mca_pstat_linux_component'    {mca_pstat_linux_component}
  [D] 'const mca_base_component_t* mca_pubsub_base_static_components[2]'    {mca_pubsub_base_static_components}
  [D] 'ompi_pubsub_orte_component_t mca_pubsub_orte_component'    {mca_pubsub_orte_component}
  [D] 'const mca_base_component_t* mca_ras_base_static_components[2]'    {mca_ras_base_static_components}
  [D] 'orte_ras_base_component_t mca_ras_cm_component'    {mca_ras_cm_component}
  [D] 'opal_list_t mca_rcache_base_components'    {mca_rcache_base_components}
  [D] 'opal_list_t mca_rcache_base_modules'    {mca_rcache_base_modules}
  [D] 'int mca_rcache_base_output'    {mca_rcache_base_output}
  [D] 'opal_class_t mca_rcache_base_selected_module_t_class'    {mca_rcache_base_selected_module_t_class}
  [D] 'const mca_base_component_t* mca_rcache_base_static_components[2]'    {mca_rcache_base_static_components}
  [D] 'mca_rcache_vma_component_t mca_rcache_vma_component'    {mca_rcache_vma_component}
  [D] 'opal_class_t mca_rcache_vma_reg_list_item_t_class'    {mca_rcache_vma_reg_list_item_t_class}
  [D] 'opal_class_t mca_rcache_vma_t_class'    {mca_rcache_vma_t_class}
  [D] 'const mca_base_component_t* mca_rmaps_base_static_components[7]'    {mca_rmaps_base_static_components}
  [D] 'orte_rmaps_base_component_t mca_rmaps_load_balance_component'    {mca_rmaps_load_balance_component}
  [D] 'orte_rmaps_rank_file_component_t mca_rmaps_rank_file_component'    {mca_rmaps_rank_file_component}
  [D] 'orte_rmaps_res_component_t mca_rmaps_resilient_component'    {mca_rmaps_resilient_component}
  [D] 'orte_rmaps_base_component_t mca_rmaps_round_robin_component'    {mca_rmaps_round_robin_component}
  [D] 'orte_rmaps_base_component_t mca_rmaps_seq_component'    {mca_rmaps_seq_component}
  [D] 'orte_rmaps_base_component_t mca_rmaps_topo_component'    {mca_rmaps_topo_component}
  [D] 'const mca_base_component_t* mca_rmcast_base_static_components[3]'    {mca_rmcast_base_static_components}
  [D] 'orte_rmcast_base_component_t mca_rmcast_tcp_component'    {mca_rmcast_tcp_component}
  [D] 'const char* mca_rmcast_tcp_component_version_string'    {mca_rmcast_tcp_component_version_string}
  [D] 'orte_rmcast_base_component_t mca_rmcast_udp_component'    {mca_rmcast_udp_component}
  [D] 'const char* mca_rmcast_udp_component_version_string'    {mca_rmcast_udp_component_version_string}
  [D] 'const mca_base_component_t* mca_rml_base_static_components[2]'    {mca_rml_base_static_components}
  [D] 'orte_rml_component_t mca_rml_oob_component'    {mca_rml_oob_component}
  [D] 'const mca_base_component_t* mca_routed_base_static_components[7]'    {mca_routed_base_static_components}
  [D] 'orte_routed_component_t mca_routed_binomial_component'    {mca_routed_binomial_component}
  [D] 'orte_routed_component_t mca_routed_cm_component'    {mca_routed_cm_component}
  [D] 'orte_routed_component_t mca_routed_direct_component'    {mca_routed_direct_component}
  [D] 'orte_routed_component_t mca_routed_linear_component'    {mca_routed_linear_component}
  [D] 'orte_routed_radix_component_t mca_routed_radix_component'    {mca_routed_radix_component}
  [D] 'orte_routed_component_t mca_routed_slave_component'    {mca_routed_slave_component}
  [D] 'const mca_base_component_t* mca_shmem_base_static_components[4]'    {mca_shmem_base_static_components}
  [D] 'opal_shmem_mmap_component_t mca_shmem_mmap_component'    {mca_shmem_mmap_component}
  [D] 'opal_shmem_posix_component_t mca_shmem_posix_component'    {mca_shmem_posix_component}
  [D] 'opal_shmem_sysv_component_t mca_shmem_sysv_component'    {mca_shmem_sysv_component}
  [D] 'const mca_base_component_t* mca_snapc_base_static_components[1]'    {mca_snapc_base_static_components}
  [D] 'const mca_base_component_t* mca_sysinfo_base_static_components[2]'    {mca_sysinfo_base_static_components}
  [D] 'const opal_sysinfo_base_component_t mca_sysinfo_linux_component'    {mca_sysinfo_linux_component}
  [D] 'const mca_base_component_t* mca_timer_base_static_components[2]'    {mca_timer_base_static_components}
  [D] 'const opal_timer_base_component_2_0_0_t mca_timer_linux_component'    {mca_timer_linux_component}
  [D] 'mca_topo_base_module_t mca_topo'    {mca_topo}
  [D] 'opal_list_t mca_topo_base_components_available'    {mca_topo_base_components_available}
  [D] 'bool mca_topo_base_components_available_valid'    {mca_topo_base_components_available_valid}
  [D] 'opal_list_t mca_topo_base_components_opened'    {mca_topo_base_components_opened}
  [D] 'bool mca_topo_base_components_opened_valid'    {mca_topo_base_components_opened_valid}
  [D] 'opal_list_t mca_topo_base_modules_available'    {mca_topo_base_modules_available}
  [D] 'bool mca_topo_base_modules_available_valid'    {mca_topo_base_modules_available_valid}
  [D] 'int mca_topo_base_output'    {mca_topo_base_output}
  [D] 'int mca_topo_base_param'    {mca_topo_base_param}
  [D] 'mca_topo_base_component_t mca_topo_base_selected_component'    {mca_topo_base_selected_component}
  [D] 'mca_topo_base_component_2_0_0_t mca_topo_unity_component'    {mca_topo_unity_component}
  [D] 'const char* mca_topo_unity_component_version_string'    {mca_topo_unity_component_version_string}
  [D] 'opal_list_t mca_vprotocol_base_components_available'    {mca_vprotocol_base_components_available}
  [D] 'opal_class_t modex_attr_data_t_class'    {modex_attr_data_t_class}
  [D] 'opal_class_t modex_proc_data_t_class'    {modex_proc_data_t_class}
  [D] 'char* mpi_fortran_argv_null'    {mpi_fortran_argv_null}
  [D] 'char* mpi_fortran_argv_null__'    {mpi_fortran_argv_null__}
  [D] 'double mpi_fortran_argvs_null'    {mpi_fortran_argvs_null}
  [D] 'double mpi_fortran_argvs_null__'    {mpi_fortran_argvs_null__}
  [D] 'int mpi_fortran_bottom'    {mpi_fortran_bottom}
  [D] 'int mpi_fortran_bottom__'    {mpi_fortran_bottom__}
  [D] 'int* mpi_fortran_errcodes_ignore'    {mpi_fortran_errcodes_ignore}
  [D] 'int* mpi_fortran_errcodes_ignore__'    {mpi_fortran_errcodes_ignore__}
  [D] 'int mpi_fortran_in_place'    {mpi_fortran_in_place}
  [D] 'int mpi_fortran_in_place__'    {mpi_fortran_in_place__}
  [D] 'int* mpi_fortran_status_ignore'    {mpi_fortran_status_ignore}
  [D] 'int* mpi_fortran_status_ignore__'    {mpi_fortran_status_ignore__}
  [D] 'double mpi_fortran_statuses_ignore'    {mpi_fortran_statuses_ignore}
  [D] 'double mpi_fortran_statuses_ignore__'    {mpi_fortran_statuses_ignore__}
  [D] 'int ompi_coll_tuned_preallocate_memory_comm_size_limit'    {ompi_coll_tuned_preallocate_memory_comm_size_limit}
  [D] 'opal_class_t ompi_comm_reg_t_class'    {ompi_comm_reg_t_class}
  [D] 'bool ompi_cr_continue_like_restart'    {ompi_cr_continue_like_restart}
  [D] 'opal_list_t ompi_crcp_base_components_available'    {ompi_crcp_base_components_available}
  [D] 'int ompi_crcp_base_output'    {ompi_crcp_base_output}
  [D] 'int ompi_datatype_dfd'    {ompi_datatype_dfd}
  [D] 'dt_elem_desc ompi_datatype_predefined_elem_desc[94]'    {ompi_datatype_predefined_elem_desc}
  [D] 'ompi_dpm_base_module_t ompi_dpm'    {ompi_dpm}
  [D] 'opal_list_t ompi_dpm_base_components_available'    {ompi_dpm_base_components_available}
  [D] 'int ompi_dpm_base_output'    {ompi_dpm_base_output}
  [D] 'ompi_dpm_base_component_t ompi_dpm_base_selected_component'    {ompi_dpm_base_selected_component}
  [D] 'ompi_dpm_base_module_t ompi_dpm_orte_module'    {ompi_dpm_orte_module}
  [D] 'ompi_mpi_errcode_t ompi_err_access'    {ompi_err_access}
  [D] 'ompi_mpi_errcode_t ompi_err_amode'    {ompi_err_amode}
  [D] 'ompi_mpi_errcode_t ompi_err_arg'    {ompi_err_arg}
  [D] 'ompi_mpi_errcode_t ompi_err_assert'    {ompi_err_assert}
  [D] 'ompi_mpi_errcode_t ompi_err_bad_file'    {ompi_err_bad_file}
  [D] 'ompi_mpi_errcode_t ompi_err_base'    {ompi_err_base}
  [D] 'ompi_mpi_errcode_t ompi_err_buffer'    {ompi_err_buffer}
  [D] 'ompi_mpi_errcode_t ompi_err_comm'    {ompi_err_comm}
  [D] 'ompi_mpi_errcode_t ompi_err_conversion'    {ompi_err_conversion}
  [D] 'ompi_mpi_errcode_t ompi_err_count'    {ompi_err_count}
  [D] 'ompi_mpi_errcode_t ompi_err_dims'    {ompi_err_dims}
  [D] 'ompi_mpi_errcode_t ompi_err_disp'    {ompi_err_disp}
  [D] 'ompi_mpi_errcode_t ompi_err_dup_datarep'    {ompi_err_dup_datarep}
  [D] 'ompi_mpi_errcode_t ompi_err_file'    {ompi_err_file}
  [D] 'ompi_mpi_errcode_t ompi_err_file_exists'    {ompi_err_file_exists}
  [D] 'ompi_mpi_errcode_t ompi_err_file_in_use'    {ompi_err_file_in_use}
  [D] 'ompi_mpi_errcode_t ompi_err_group'    {ompi_err_group}
  [D] 'ompi_mpi_errcode_t ompi_err_in_status'    {ompi_err_in_status}
  [D] 'ompi_mpi_errcode_t ompi_err_info'    {ompi_err_info}
  [D] 'ompi_mpi_errcode_t ompi_err_info_key'    {ompi_err_info_key}
  [D] 'ompi_mpi_errcode_t ompi_err_info_nokey'    {ompi_err_info_nokey}
  [D] 'ompi_mpi_errcode_t ompi_err_info_value'    {ompi_err_info_value}
  [D] 'ompi_mpi_errcode_t ompi_err_intern'    {ompi_err_intern}
  [D] 'ompi_mpi_errcode_t ompi_err_io'    {ompi_err_io}
  [D] 'ompi_mpi_errcode_t ompi_err_keyval'    {ompi_err_keyval}
  [D] 'ompi_mpi_errcode_t ompi_err_locktype'    {ompi_err_locktype}
  [D] 'ompi_mpi_errcode_t ompi_err_name'    {ompi_err_name}
  [D] 'ompi_mpi_errcode_t ompi_err_no_mem'    {ompi_err_no_mem}
  [D] 'ompi_mpi_errcode_t ompi_err_no_space'    {ompi_err_no_space}
  [D] 'ompi_mpi_errcode_t ompi_err_no_such_file'    {ompi_err_no_such_file}
  [D] 'ompi_mpi_errcode_t ompi_err_not_same'    {ompi_err_not_same}
  [D] 'ompi_mpi_errcode_t ompi_err_op'    {ompi_err_op}
  [D] 'ompi_mpi_errcode_t ompi_err_other'    {ompi_err_other}
  [D] 'ompi_mpi_errcode_t ompi_err_pending'    {ompi_err_pending}
  [D] 'ompi_mpi_errcode_t ompi_err_port'    {ompi_err_port}
  [D] 'ompi_mpi_errcode_t ompi_err_quota'    {ompi_err_quota}
  [D] 'ompi_mpi_errcode_t ompi_err_rank'    {ompi_err_rank}
  [D] 'ompi_mpi_errcode_t ompi_err_read_only'    {ompi_err_read_only}
  [D] 'ompi_mpi_errcode_t ompi_err_request'    {ompi_err_request}
  [D] 'ompi_mpi_errcode_t ompi_err_rma_conflict'    {ompi_err_rma_conflict}
  [D] 'ompi_mpi_errcode_t ompi_err_rma_sync'    {ompi_err_rma_sync}
  [D] 'ompi_mpi_errcode_t ompi_err_root'    {ompi_err_root}
  [D] 'ompi_mpi_errcode_t ompi_err_service'    {ompi_err_service}
  [D] 'ompi_mpi_errcode_t ompi_err_size'    {ompi_err_size}
  [D] 'ompi_mpi_errcode_t ompi_err_spawn'    {ompi_err_spawn}
  [D] 'ompi_mpi_errcode_t ompi_err_tag'    {ompi_err_tag}
  [D] 'ompi_mpi_errcode_t ompi_err_topology'    {ompi_err_topology}
  [D] 'ompi_mpi_errcode_t ompi_err_truncate'    {ompi_err_truncate}
  [D] 'ompi_mpi_errcode_t ompi_err_type'    {ompi_err_type}
  [D] 'ompi_mpi_errcode_t ompi_err_unsupported_datarep'    {ompi_err_unsupported_datarep}
  [D] 'ompi_mpi_errcode_t ompi_err_unsupported_operation'    {ompi_err_unsupported_operation}
  [D] 'ompi_mpi_errcode_t ompi_err_win'    {ompi_err_win}
  [D] 'opal_class_t ompi_free_list_item_t_class'    {ompi_free_list_item_t_class}
  [D] 'ompi_free_list_item_t* ompi_free_list_item_t_type_force_inclusion'    {ompi_free_list_item_t_type_force_inclusion}
  [D] 'opal_class_t ompi_free_list_t_class'    {ompi_free_list_t_class}
  [D] 'ompi_free_list_t* ompi_free_list_t_type_force_inclusion'    {ompi_free_list_t_type_force_inclusion}
  [D] 'opal_class_t ompi_info_entry_t_class'    {ompi_info_entry_t_class}
  [D] 'int ompi_mpi_abort_delay'    {ompi_mpi_abort_delay}
  [D] 'bool ompi_mpi_abort_print_stack'    {ompi_mpi_abort_print_stack}
  [D] 'bool ompi_mpi_finalized'    {ompi_mpi_finalized}
  [D] 'bool ompi_mpi_init_started'    {ompi_mpi_init_started}
  [D] 'bool ompi_mpi_initialized'    {ompi_mpi_initialized}
  [D] 'bool ompi_mpi_keep_peer_hostnames'    {ompi_mpi_keep_peer_hostnames}
  [D] 'int ompi_mpi_leave_pinned'    {ompi_mpi_leave_pinned}
  [D] 'bool ompi_mpi_leave_pinned_pipeline'    {ompi_mpi_leave_pinned_pipeline}
  [D] 'bool ompi_mpi_maffinity_setup'    {ompi_mpi_maffinity_setup}
  [D] 'opal_list_t ompi_mtl_base_components_opened'    {ompi_mtl_base_components_opened}
  [D] 'int ompi_mtl_base_output'    {ompi_mtl_base_output}
  [D] 'bool ompi_notify_init_finalize'    {ompi_notify_init_finalize}
  [D] 'opal_list_t ompi_op_base_components_available'    {ompi_op_base_components_available}
  [D] 'bool ompi_op_base_components_available_valid'    {ompi_op_base_components_available_valid}
  [D] 'opal_list_t ompi_op_base_components_opened'    {ompi_op_base_components_opened}
  [D] 'bool ompi_op_base_components_opened_valid'    {ompi_op_base_components_opened_valid}
  [D] 'int ompi_op_base_output'    {ompi_op_base_output}
  [D] 'opal_list_t ompi_osc_base_avail_components'    {ompi_osc_base_avail_components}
  [D] 'opal_list_t ompi_osc_base_open_components'    {ompi_osc_base_open_components}
  [D] 'int ompi_osc_base_output'    {ompi_osc_base_output}
  [D] 'opal_class_t ompi_osc_pt2pt_buffer_t_class'    {ompi_osc_pt2pt_buffer_t_class}
  [D] 'opal_class_t ompi_osc_pt2pt_longreq_t_class'    {ompi_osc_pt2pt_longreq_t_class}
  [D] 'opal_class_t ompi_osc_pt2pt_mpireq_t_class'    {ompi_osc_pt2pt_mpireq_t_class}
  [D] 'opal_class_t ompi_osc_pt2pt_replyreq_t_class'    {ompi_osc_pt2pt_replyreq_t_class}
  [D] 'opal_class_t ompi_osc_pt2pt_sendreq_t_class'    {ompi_osc_pt2pt_sendreq_t_class}
  [D] 'opal_class_t ompi_osc_rdma_longreq_t_class'    {ompi_osc_rdma_longreq_t_class}
  [D] 'ompi_osc_rdma_module_t ompi_osc_rdma_module_template'    {ompi_osc_rdma_module_template}
  [D] 'opal_class_t ompi_osc_rdma_pending_lock_t_class'    {ompi_osc_rdma_pending_lock_t_class}
  [D] 'opal_class_t ompi_osc_rdma_replyreq_t_class'    {ompi_osc_rdma_replyreq_t_class}
  [D] 'opal_class_t ompi_osc_rdma_sendreq_t_class'    {ompi_osc_rdma_sendreq_t_class}
  [D] 'ompi_pubsub_base_module_t ompi_pubsub'    {ompi_pubsub}
  [D] 'opal_list_t ompi_pubsub_base_components_available'    {ompi_pubsub_base_components_available}
  [D] 'int ompi_pubsub_base_output'    {ompi_pubsub_base_output}
  [D] 'ompi_pubsub_base_component_t ompi_pubsub_base_selected_component'    {ompi_pubsub_base_selected_component}
  [D] 'ompi_pubsub_base_module_t ompi_pubsub_orte_module'    {ompi_pubsub_orte_module}
  [D] 'opal_class_t ompi_rb_tree_node_t_class'    {ompi_rb_tree_node_t_class}
  [D] 'opal_class_t ompi_rb_tree_t_class'    {ompi_rb_tree_t_class}
  [D] 'size_t ompi_request_completed'    {ompi_request_completed}
  [D] 'opal_condition_t ompi_request_cond'    {ompi_request_cond}
  [D] 'opal_mutex_t ompi_request_lock'    {ompi_request_lock}
  [D] 'size_t ompi_request_waiting'    {ompi_request_waiting}
  [D] 'ompi_mpi_errcode_t ompi_success'    {ompi_success}
  [D] 'bool ompi_warn_on_fork'    {ompi_warn_on_fork}
  [D] 'opal_class_t opal_adjacency_list_t_class'    {opal_adjacency_list_t_class}
  [D] 'opal_class_t opal_atomic_lifo_t_class'    {opal_atomic_lifo_t_class}
  [D] 'opal_list_t opal_backtrace_base_components_opened'    {opal_backtrace_base_components_opened}
  [D] 'opal_class_t opal_bitmap_t_class'    {opal_bitmap_t_class}
  [D] 'opal_class_t opal_buffer_t_class'    {opal_buffer_t_class}
  [D] 'int opal_cache_line_size'    {opal_cache_line_size}
  [D] 'const char* opal_carto_auto_detect_component_version_string'    {opal_carto_auto_detect_component_version_string}
  [D] 'opal_carto_graph_t* opal_carto_base_common_host_graph'    {opal_carto_base_common_host_graph}
  [D] 'const opal_carto_base_component_2_0_0_t* opal_carto_base_component'    {opal_carto_base_component}
  [D] 'opal_list_t opal_carto_base_components_opened'    {opal_carto_base_components_opened}
  [D] 'bool opal_carto_base_components_opened_valid'    {opal_carto_base_components_opened_valid}
  [D] 'const opal_carto_base_module_1_0_0_t* opal_carto_base_module'    {opal_carto_base_module}
  [D] 'int opal_carto_base_output'    {opal_carto_base_output}
  [D] 'bool opal_carto_base_selected'    {opal_carto_base_selected}
  [D] 'opal_carto_base_module_1_0_0_t opal_carto_default_module'    {opal_carto_default_module}
  [D] 'const char* opal_carto_file_component_version_string'    {opal_carto_file_component_version_string}
  [D] 'opal_class_t opal_cmd_line_t_class'    {opal_cmd_line_t_class}
  [D] 'opal_class_t opal_condition_t_class'    {opal_condition_t_class}
  [D] 'opal_class_t opal_convertor_t_class'    {opal_convertor_t_class}
  [D] 'int opal_copy_debug'    {opal_copy_debug}
  [D] 'int opal_cr_checkpoint_request'    {opal_cr_checkpoint_request}
  [D] 'int opal_cr_checkpointing_state'    {opal_cr_checkpointing_state}
  [D] 'bool opal_cr_currently_stalled'    {opal_cr_currently_stalled}
  [D] 'int opal_cr_entry_point_signal'    {opal_cr_entry_point_signal}
  [D] 'int opal_cr_initalized'    {opal_cr_initalized}
  [D] 'bool opal_cr_is_enabled'    {opal_cr_is_enabled}
  [D] 'bool opal_cr_is_tool'    {opal_cr_is_tool}
  [D] 'int opal_cr_output'    {opal_cr_output}
  [D] 'char* opal_cr_pipe_dir'    {opal_cr_pipe_dir}
  [D] 'bool opal_cr_stall_check'    {opal_cr_stall_check}
  [D] 'bool opal_cr_timing_barrier_enabled'    {opal_cr_timing_barrier_enabled}
  [D] 'bool opal_cr_timing_enabled'    {opal_cr_timing_enabled}
  [D] 'int opal_cr_timing_my_rank'    {opal_cr_timing_my_rank}
  [D] 'int opal_cr_timing_target_rank'    {opal_cr_timing_target_rank}
  [D] 'opal_crs_base_module_t opal_crs'    {opal_crs}
  [D] 'opal_class_t opal_crs_base_ckpt_options_t_class'    {opal_crs_base_ckpt_options_t_class}
  [D] 'opal_list_t opal_crs_base_components_available'    {opal_crs_base_components_available}
  [D] 'int opal_crs_base_output'    {opal_crs_base_output}
  [D] 'opal_crs_base_component_t opal_crs_base_selected_component'    {opal_crs_base_selected_component}
  [D] 'char* opal_crs_base_snapshot_dir'    {opal_crs_base_snapshot_dir}
  [D] 'opal_class_t opal_crs_base_snapshot_t_class'    {opal_crs_base_snapshot_t_class}
  [D] 'const char* opal_crs_none_component_version_string'    {opal_crs_none_component_version_string}
  [D] 'bool opal_crs_none_select_warning'    {opal_crs_none_select_warning}
  [D] 'opal_event_base* opal_current_base'    {opal_current_base}
  [D] 'const opal_datatype_t* opal_datatype_basicDatatypes[25]'    {opal_datatype_basicDatatypes}
  [D] 'const opal_datatype_t opal_datatype_bool'    {opal_datatype_bool}
  [D] 'const opal_datatype_t opal_datatype_complex16'    {opal_datatype_complex16}
  [D] 'const opal_datatype_t opal_datatype_complex32'    {opal_datatype_complex32}
  [D] 'const opal_datatype_t opal_datatype_complex8'    {opal_datatype_complex8}
  [D] 'conversion_fct_t opal_datatype_copy_functions[25]'    {opal_datatype_copy_functions}
  [D] 'int opal_datatype_dfd'    {opal_datatype_dfd}
  [D] 'const opal_datatype_t opal_datatype_empty'    {opal_datatype_empty}
  [D] 'const opal_datatype_t opal_datatype_end_loop'    {opal_datatype_end_loop}
  [D] 'const opal_datatype_t opal_datatype_float12'    {opal_datatype_float12}
  [D] 'const opal_datatype_t opal_datatype_float16'    {opal_datatype_float16}
  [D] 'const opal_datatype_t opal_datatype_float2'    {opal_datatype_float2}
  [D] 'const opal_datatype_t opal_datatype_float4'    {opal_datatype_float4}
  [D] 'const opal_datatype_t opal_datatype_float8'    {opal_datatype_float8}
  [D] 'conversion_fct_t opal_datatype_heterogeneous_copy_functions[25]'    {opal_datatype_heterogeneous_copy_functions}
  [D] 'const opal_datatype_t opal_datatype_int1'    {opal_datatype_int1}
  [D] 'const opal_datatype_t opal_datatype_int16'    {opal_datatype_int16}
  [D] 'const opal_datatype_t opal_datatype_int2'    {opal_datatype_int2}
  [D] 'const opal_datatype_t opal_datatype_int4'    {opal_datatype_int4}
  [D] 'const opal_datatype_t opal_datatype_int8'    {opal_datatype_int8}
  [D] 'const opal_datatype_t opal_datatype_lb'    {opal_datatype_lb}
  [D] 'const size_t opal_datatype_local_sizes[25]'    {opal_datatype_local_sizes}
  [D] 'const opal_datatype_t opal_datatype_loop'    {opal_datatype_loop}
  [D] 'dt_elem_desc opal_datatype_predefined_elem_desc[50]'    {opal_datatype_predefined_elem_desc}
  [D] 'opal_class_t opal_datatype_t_class'    {opal_datatype_t_class}
  [D] 'const opal_datatype_t opal_datatype_ub'    {opal_datatype_ub}
  [D] 'const opal_datatype_t opal_datatype_uint1'    {opal_datatype_uint1}
  [D] 'const opal_datatype_t opal_datatype_uint16'    {opal_datatype_uint16}
  [D] 'const opal_datatype_t opal_datatype_uint2'    {opal_datatype_uint2}
  [D] 'const opal_datatype_t opal_datatype_uint4'    {opal_datatype_uint4}
  [D] 'const opal_datatype_t opal_datatype_uint8'    {opal_datatype_uint8}
  [D] 'const opal_datatype_t opal_datatype_unavailable'    {opal_datatype_unavailable}
  [D] 'const opal_datatype_t opal_datatype_wchar'    {opal_datatype_wchar}
  [D] 'opal_dss_t opal_dss'    {opal_dss}
  [D] 'int opal_dss_initial_size'    {opal_dss_initial_size}
  [D] 'bool opal_dss_initialized'    {opal_dss_initialized}
  [D] 'opal_data_type_t opal_dss_num_reg_types'    {opal_dss_num_reg_types}
  [D] 'int opal_dss_threshold_size'    {opal_dss_threshold_size}
  [D] 'opal_class_t opal_dss_type_info_t_class'    {opal_dss_type_info_t_class}
  [D] 'opal_pointer_array_t opal_dss_types'    {opal_dss_types}
  [D] 'opal_class_t opal_dss_value_t_class'    {opal_dss_value_t_class}
  [D] 'int opal_dss_verbose'    {opal_dss_verbose}
  [D] 'opal_mutex_t opal_event_lock'    {opal_event_lock}
  [D] 'opal_class_t opal_free_list_item_t_class'    {opal_free_list_item_t_class}
  [D] 'opal_class_t opal_free_list_t_class'    {opal_free_list_t_class}
  [D] 'opal_class_t opal_graph_edge_t_class'    {opal_graph_edge_t_class}
  [D] 'opal_class_t opal_graph_t_class'    {opal_graph_t_class}
  [D] 'opal_class_t opal_graph_vertex_t_class'    {opal_graph_vertex_t_class}
  [D] 'opal_class_t opal_hash_table_t_class'    {opal_hash_table_t_class}
  [D] 'opal_list_t opal_hwloc_base_components'    {opal_hwloc_base_components}
  [D] 'bool opal_hwloc_base_inited'    {opal_hwloc_base_inited}
  [D] 'opal_hwloc_base_map_t opal_hwloc_base_map'    {opal_hwloc_base_map}
  [D] 'opal_hwloc_base_mbfa_t opal_hwloc_base_mbfa'    {opal_hwloc_base_mbfa}
  [D] 'int opal_hwloc_base_output'    {opal_hwloc_base_output}
  [D] 'const char* opal_hwloc_external_component_version_string'    {opal_hwloc_external_component_version_string}
  [D] 'hwloc_topology_t opal_hwloc_topology'    {opal_hwloc_topology}
  [D] 'int opal_initialized'    {opal_initialized}
  [D] 'opal_install_dirs_t opal_install_dirs'    {opal_install_dirs}
  [D] 'int opal_installdirs_base_output'    {opal_installdirs_base_output}
  [D] 'opal_list_t opal_installdirs_components'    {opal_installdirs_components}
  [D] 'opal_class_t opal_list_item_t_class'    {opal_list_item_t_class}
  [D] 'opal_class_t opal_list_t_class'    {opal_list_t_class}
  [D] 'uint32_t opal_local_arch'    {opal_local_arch}
  [D] 'const opal_maffinity_base_component_2_0_0_t* opal_maffinity_base_component'    {opal_maffinity_base_component}
  [D] 'opal_list_t opal_maffinity_base_components_opened'    {opal_maffinity_base_components_opened}
  [D] 'bool opal_maffinity_base_components_opened_valid'    {opal_maffinity_base_components_opened_valid}
  [D] 'const opal_maffinity_base_module_1_0_0_t* opal_maffinity_base_module'    {opal_maffinity_base_module}
  [D] 'int opal_maffinity_base_output'    {opal_maffinity_base_output}
  [D] 'bool opal_maffinity_base_selected'    {opal_maffinity_base_selected}
  [D] 'const char* opal_maffinity_first_use_component_version_string'    {opal_maffinity_first_use_component_version_string}
  [D] 'const char* opal_maffinity_hwloc_component_version_string'    {opal_maffinity_hwloc_component_version_string}
  [D] 'bool opal_maffinity_setup'    {opal_maffinity_setup}
  [D] 'int opal_malloc_debug_level'    {opal_malloc_debug_level}
  [D] 'int opal_malloc_output'    {opal_malloc_output}
  [D] 'const opal_memchecker_base_component_2_0_0_t* opal_memchecker_base_component'    {opal_memchecker_base_component}
  [D] 'opal_list_t opal_memchecker_base_components_opened'    {opal_memchecker_base_components_opened}
  [D] 'bool opal_memchecker_base_components_opened_valid'    {opal_memchecker_base_components_opened_valid}
  [D] 'const opal_memchecker_base_module_1_0_0_t* opal_memchecker_base_module'    {opal_memchecker_base_module}
  [D] 'int opal_memchecker_base_output'    {opal_memchecker_base_output}
  [D] 'bool opal_memchecker_base_selected'    {opal_memchecker_base_selected}
  [D] 'opal_list_t opal_memcpy_base_components_opened'    {opal_memcpy_base_components_opened}
  [D] 'opal_memory_base_component_2_0_0_t* opal_memory'    {opal_memory}
  [D] 'opal_list_t opal_memory_base_components_opened'    {opal_memory_base_components_opened}
  [D] 'bool opal_mutex_check_locks'    {opal_mutex_check_locks}
  [D] 'opal_class_t opal_mutex_t_class'    {opal_mutex_t_class}
  [D] 'opal_class_t opal_object_t_class'    {opal_object_t_class}
  [D] 'opal_class_t opal_output_stream_t_class'    {opal_output_stream_t_class}
  [D] 'int opal_pack_debug'    {opal_pack_debug}
  [D] 'bool opal_paffinity_alone'    {opal_paffinity_alone}
  [D] 'char* opal_paffinity_base_applied_binding'    {opal_paffinity_base_applied_binding}
  [D] 'bool opal_paffinity_base_bound'    {opal_paffinity_base_bound}
  [D] 'const opal_paffinity_base_component_2_0_0_t* opal_paffinity_base_component'    {opal_paffinity_base_component}
  [D] 'opal_list_t opal_paffinity_base_components_opened'    {opal_paffinity_base_components_opened}
  [D] 'bool opal_paffinity_base_components_opened_valid'    {opal_paffinity_base_components_opened_valid}
  [D] 'const opal_paffinity_base_module_1_1_0_t* opal_paffinity_base_module'    {opal_paffinity_base_module}
  [D] 'int opal_paffinity_base_output'    {opal_paffinity_base_output}
  [D] 'bool opal_paffinity_base_selected'    {opal_paffinity_base_selected}
  [D] 'char* opal_paffinity_base_slot_list'    {opal_paffinity_base_slot_list}
  [D] 'const char* opal_paffinity_hwloc_component_version_string'    {opal_paffinity_hwloc_component_version_string}
  [D] 'opal_class_t opal_pointer_array_t_class'    {opal_pointer_array_t_class}
  [D] 'int opal_position_debug'    {opal_position_debug}
  [D] 'bool opal_profile'    {opal_profile}
  [D] 'char* opal_profile_file'    {opal_profile_file}
  [D] 'uint32_t opal_progress_recursion_depth_counter'    {opal_progress_recursion_depth_counter}
  [D] 'int opal_progress_spin_count'    {opal_progress_spin_count}
  [D] 'volatile int32_t opal_progress_thread_count'    {opal_progress_thread_count}
  [D] 'opal_pstat_base_module_t opal_pstat'    {opal_pstat}
  [D] 'opal_pstat_base_component_t* opal_pstat_base_component'    {opal_pstat_base_component}
  [D] 'opal_list_t opal_pstat_base_components_opened'    {opal_pstat_base_components_opened}
  [D] 'int opal_pstat_base_output'    {opal_pstat_base_output}
  [D] 'const char* opal_pstat_linux_component_version_string'    {opal_pstat_linux_component_version_string}
  [D] 'const opal_pstat_base_module_t opal_pstat_linux_module'    {opal_pstat_linux_module}
  [D] 'opal_class_t opal_pstats_t_class'    {opal_pstats_t_class}
  [D] 'opal_class_t opal_ring_buffer_t_class'    {opal_ring_buffer_t_class}
  [D] 'const opal_shmem_base_component_2_0_0_t* opal_shmem_base_component'    {opal_shmem_base_component}
  [D] 'opal_list_t opal_shmem_base_components_opened'    {opal_shmem_base_components_opened}
  [D] 'bool opal_shmem_base_components_opened_valid'    {opal_shmem_base_components_opened_valid}
  [D] 'const opal_shmem_base_module_2_0_0_t* opal_shmem_base_module'    {opal_shmem_base_module}
  [D] 'int opal_shmem_base_output'    {opal_shmem_base_output}
  [D] 'bool opal_shmem_base_selected'    {opal_shmem_base_selected}
  [D] 'char* opal_shmem_mmap_backing_file_base_dir'    {opal_shmem_mmap_backing_file_base_dir}
  [D] 'const char* opal_shmem_mmap_component_version_string'    {opal_shmem_mmap_component_version_string}
  [D] 'opal_shmem_mmap_module_t opal_shmem_mmap_module'    {opal_shmem_mmap_module}
  [D] 'bool opal_shmem_mmap_nfs_warning'    {opal_shmem_mmap_nfs_warning}
  [D] 'int opal_shmem_mmap_relocate_backing_file'    {opal_shmem_mmap_relocate_backing_file}
  [D] 'const char* opal_shmem_posix_component_version_string'    {opal_shmem_posix_component_version_string}
  [D] 'opal_shmem_posix_module_t opal_shmem_posix_module'    {opal_shmem_posix_module}
  [D] 'const char* opal_shmem_sysv_component_version_string'    {opal_shmem_sysv_component_version_string}
  [D] 'opal_shmem_sysv_module_t opal_shmem_sysv_module'    {opal_shmem_sysv_module}
  [D] 'opal_show_help_fn_t opal_show_help'    {opal_show_help}
  [D] 'bool opal_show_help_parse_done'    {opal_show_help_parse_done}
  [D] 'int opal_show_help_yy_flex_debug'    {opal_show_help_yy_flex_debug}
  [D] 'FILE* opal_show_help_yyin'    {opal_show_help_yyin}
  [D] 'int opal_show_help_yyleng'    {opal_show_help_yyleng}
  [D] 'int opal_show_help_yylineno'    {opal_show_help_yylineno}
  [D] 'int opal_show_help_yynewlines'    {opal_show_help_yynewlines}
  [D] 'FILE* opal_show_help_yyout'    {opal_show_help_yyout}
  [D] 'char* opal_show_help_yytext'    {opal_show_help_yytext}
  [D] 'opal_show_vhelp_fn_t opal_show_vhelp'    {opal_show_vhelp}
  [D] 'opal_sys_limits_t opal_sys_limits'    {opal_sys_limits}
  [D] 'opal_sysinfo_API_module_t opal_sysinfo'    {opal_sysinfo}
  [D] 'opal_list_t opal_sysinfo_avail_modules'    {opal_sysinfo_avail_modules}
  [D] 'opal_list_t opal_sysinfo_base_components_opened'    {opal_sysinfo_base_components_opened}
  [D] 'int opal_sysinfo_base_output'    {opal_sysinfo_base_output}
  [D] 'bool opal_sysinfo_initialized'    {opal_sysinfo_initialized}
  [D] 'const char* opal_sysinfo_linux_component_version_string'    {opal_sysinfo_linux_component_version_string}
  [D] 'const opal_sysinfo_base_module_t opal_sysinfo_linux_module'    {opal_sysinfo_linux_module}
  [D] 'opal_class_t opal_sysinfo_module_t_class'    {opal_sysinfo_module_t_class}
  [D] 'bool opal_sysinfo_selected'    {opal_sysinfo_selected}
  [D] 'opal_class_t opal_sysinfo_value_t_class'    {opal_sysinfo_value_t_class}
  [D] 'opal_class_t opal_thread_t_class'    {opal_thread_t_class}
  [D] 'opal_list_t opal_timer_base_components_opened'    {opal_timer_base_components_opened}
  [D] 'opal_timer_t opal_timer_linux_freq'    {opal_timer_linux_freq}
  [D] 'int opal_trace_handle'    {opal_trace_handle}
  [D] 'int opal_unpack_debug'    {opal_unpack_debug}
  [D] 'bool opal_uses_threads'    {opal_uses_threads}
  [D] 'int opal_util_initialized'    {opal_util_initialized}
  [D] 'bool opal_util_keyval_parse_done'    {opal_util_keyval_parse_done}
  [D] 'char* opal_util_keyval_string'    {opal_util_keyval_string}
  [D] 'int opal_util_keyval_yy_flex_debug'    {opal_util_keyval_yy_flex_debug}
  [D] 'FILE* opal_util_keyval_yyin'    {opal_util_keyval_yyin}
  [D] 'int opal_util_keyval_yyleng'    {opal_util_keyval_yyleng}
  [D] 'int opal_util_keyval_yylineno'    {opal_util_keyval_yylineno}
  [D] 'int opal_util_keyval_yynewlines'    {opal_util_keyval_yynewlines}
  [D] 'FILE* opal_util_keyval_yyout'    {opal_util_keyval_yyout}
  [D] 'char* opal_util_keyval_yytext'    {opal_util_keyval_yytext}
  [D] 'opal_class_t opal_value_array_t_class'    {opal_value_array_t_class}
  [D] 'const char opal_version_string[]'    {opal_version_string}
  [D] 'bool orte_abnormal_term_ordered'    {orte_abnormal_term_ordered}
  [D] 'opal_atomic_lock_t orte_abort_inprogress_lock'    {orte_abort_inprogress_lock}
  [D] 'bool orte_allocation_required'    {orte_allocation_required}
  [D] 'opal_class_t orte_app_context_t_class'    {orte_app_context_t_class}
  [D] 'bool orte_assume_same_shell'    {orte_assume_same_shell}
  [D] 'opal_class_t orte_attr_t_class'    {orte_attr_t_class}
  [D] 'int orte_clean_output'    {orte_clean_output}
  [D] 'opal_cmd_line_init_t orte_cmd_line_opts[22]'    {orte_cmd_line_opts}
  [D] 'bool orte_daemon_bootstrap'    {orte_daemon_bootstrap}
  [D] 'timeval orte_daemon_msg_recvd'    {orte_daemon_msg_recvd}
  [D] 'opal_class_t orte_data_object_t_class'    {orte_data_object_t_class}
  [D] 'bool orte_debug_daemons_file_flag'    {orte_debug_daemons_file_flag}
  [D] 'bool orte_debug_daemons_flag'    {orte_debug_daemons_flag}
  [D] 'bool orte_debug_flag'    {orte_debug_flag}
  [D] 'int orte_debug_output'    {orte_debug_output}
  [D] 'int orte_debug_verbosity'    {orte_debug_verbosity}
  [D] 'int orte_debugger_check_rate'    {orte_debugger_check_rate}
  [D] 'orte_job_t* orte_debugger_daemon'    {orte_debugger_daemon}
  [D] 'bool orte_debugger_dump_proctable'    {orte_debugger_dump_proctable}
  [D] 'bool orte_debugger_enable_fifo_attach'    {orte_debugger_enable_fifo_attach}
  [D] 'bool orte_debugger_test_attach'    {orte_debugger_test_attach}
  [D] 'char* orte_debugger_test_daemon'    {orte_debugger_test_daemon}
  [D] 'char* orte_default_cpu_set'    {orte_default_cpu_set}
  [D] 'char* orte_default_hostfile'    {orte_default_hostfile}
  [D] 'orte_mapping_policy_t orte_default_mapping_policy'    {orte_default_mapping_policy}
  [D] 'uint8_t orte_default_num_boards'    {orte_default_num_boards}
  [D] 'uint8_t orte_default_num_cores_per_socket'    {orte_default_num_cores_per_socket}
  [D] 'uint8_t orte_default_num_sockets_per_board'    {orte_default_num_sockets_per_board}
  [D] 'bool orte_devel_level_output'    {orte_devel_level_output}
  [D] 'bool orte_do_not_barrier'    {orte_do_not_barrier}
  [D] 'bool orte_do_not_launch'    {orte_do_not_launch}
  [D] 'orte_errmgr_base_module_t orte_errmgr'    {orte_errmgr}
  [D] 'opal_list_t orte_errmgr_base_components_available'    {orte_errmgr_base_components_available}
  [D] 'int orte_errmgr_base_output'    {orte_errmgr_base_output}
  [D] 'bool orte_errmgr_base_selected'    {orte_errmgr_base_selected}
  [D] 'mca_errmgr_base_component_t orte_errmgr_base_selected_component'    {orte_errmgr_base_selected_component}
  [D] 'orte_errmgr_base_module_t orte_errmgr_default'    {orte_errmgr_default}
  [D] 'bool orte_errmgr_initialized'    {orte_errmgr_initialized}
  [D] 'orte_ess_base_module_t orte_ess'    {orte_ess}
  [D] 'opal_list_t orte_ess_base_components_available'    {orte_ess_base_components_available}
  [D] 'int orte_ess_base_output'    {orte_ess_base_output}
  [D] 'orte_ess_base_module_t orte_ess_env_module'    {orte_ess_env_module}
  [D] 'orte_ess_base_module_t orte_ess_hnp_module'    {orte_ess_hnp_module}
  [D] 'orte_ess_base_module_t orte_ess_singleton_module'    {orte_ess_singleton_module}
  [D] 'orte_ess_base_module_t orte_ess_slave_module'    {orte_ess_slave_module}
  [D] 'orte_ess_base_module_t orte_ess_tool_module'    {orte_ess_tool_module}
  [D] 'orte_trigger_event_t orte_exit'    {orte_exit}
  [D] 'int orte_exit_status'    {orte_exit_status}
  [D] 'orte_filem_base_module_t orte_filem'    {orte_filem}
  [D] 'opal_list_t orte_filem_base_components_available'    {orte_filem_base_components_available}
  [D] 'opal_class_t orte_filem_base_file_set_t_class'    {orte_filem_base_file_set_t_class}
  [D] 'bool orte_filem_base_is_active'    {orte_filem_base_is_active}
  [D] 'int orte_filem_base_output'    {orte_filem_base_output}
  [D] 'opal_class_t orte_filem_base_process_set_t_class'    {orte_filem_base_process_set_t_class}
  [D] 'opal_class_t orte_filem_base_request_t_class'    {orte_filem_base_request_t_class}
  [D] 'orte_filem_base_component_t orte_filem_base_selected_component'    {orte_filem_base_selected_component}
  [D] 'const char* orte_filem_rsh_component_version_string'    {orte_filem_rsh_component_version_string}
  [D] 'int orte_filem_rsh_max_incomming'    {orte_filem_rsh_max_incomming}
  [D] 'int orte_filem_rsh_max_outgoing'    {orte_filem_rsh_max_outgoing}
  [D] 'opal_class_t orte_filem_rsh_work_pool_item_t_class'    {orte_filem_rsh_work_pool_item_t_class}
  [D] 'opal_atomic_lock_t orte_finalize_lock'    {orte_finalize_lock}
  [D] 'bool orte_finalizing'    {orte_finalizing}
  [D] 'bool orte_forward_job_control'    {orte_forward_job_control}
  [D] 'orte_grpcomm_base_module_t orte_grpcomm'    {orte_grpcomm}
  [D] 'orte_grpcomm_base_module_t orte_grpcomm_bad_module'    {orte_grpcomm_bad_module}
  [D] 'int orte_grpcomm_base_output'    {orte_grpcomm_base_output}
  [D] 'orte_grpcomm_base_module_t orte_grpcomm_basic_module'    {orte_grpcomm_basic_module}
  [D] 'orte_grpcomm_base_module_t orte_grpcomm_hier_module'    {orte_grpcomm_hier_module}
  [D] 'int orte_grpcomm_profile_fd'    {orte_grpcomm_profile_fd}
  [D] 'int orte_heartbeat_rate'    {orte_heartbeat_rate}
  [D] 'bool orte_help_want_aggregate'    {orte_help_want_aggregate}
  [D] 'bool orte_hetero_apps'    {orte_hetero_apps}
  [D] 'opal_class_t orte_hnp_contact_t_class'    {orte_hnp_contact_t_class}
  [D] 'bool orte_hnp_is_allocated'    {orte_hnp_is_allocated}
  [D] 'bool orte_homogeneous_nodes'    {orte_homogeneous_nodes}
  [D] 'bool orte_in_parallel_debugger'    {orte_in_parallel_debugger}
  [D] 'bool orte_initialized'    {orte_initialized}
  [D] 'orte_iof_base_module_t orte_iof'    {orte_iof}
  [D] 'orte_iof_base_t orte_iof_base'    {orte_iof_base}
  [D] 'orte_iof_base_module_t orte_iof_hnp_module'    {orte_iof_hnp_module}
  [D] 'orte_iof_base_module_t orte_iof_orted_module'    {orte_iof_orted_module}
  [D] 'opal_class_t orte_iof_proc_t_class'    {orte_iof_proc_t_class}
  [D] 'opal_class_t orte_iof_read_event_t_class'    {orte_iof_read_event_t_class}
  [D] 'opal_class_t orte_iof_sink_t_class'    {orte_iof_sink_t_class}
  [D] 'orte_iof_base_module_t orte_iof_tool_module'    {orte_iof_tool_module}
  [D] 'opal_class_t orte_iof_write_event_t_class'    {orte_iof_write_event_t_class}
  [D] 'opal_class_t orte_iof_write_output_t_class'    {orte_iof_write_output_t_class}
  [D] 'opal_class_t orte_jmap_t_class'    {orte_jmap_t_class}
  [D] 'opal_pointer_array_t* orte_job_data'    {orte_job_data}
  [D] 'char* orte_job_ident'    {orte_job_ident}
  [D] 'opal_class_t orte_job_map_t_class'    {orte_job_map_t_class}
  [D] 'opal_class_t orte_job_t_class'    {orte_job_t_class}
  [D] 'bool orte_job_term_ordered'    {orte_job_term_ordered}
  [D] 'opal_pointer_array_t orte_jobmap'    {orte_jobmap}
  [D] 'bool orte_keep_fqdn_hostnames'    {orte_keep_fqdn_hostnames}
  [D] 'char* orte_launch_agent'    {orte_launch_agent}
  [D] 'char** orte_launch_environ'    {orte_launch_environ}
  [D] 'bool orte_leave_session_attached'    {orte_leave_session_attached}
  [D] 'opal_list_t orte_local_children'    {orte_local_children}
  [D] 'char* orte_local_cpu_model'    {orte_local_cpu_model}
  [D] 'char* orte_local_cpu_type'    {orte_local_cpu_type}
  [D] 'opal_list_t orte_local_jobdata'    {orte_local_jobdata}
  [D] 'float orte_max_timeout'    {orte_max_timeout}
  [D] 'opal_class_t orte_message_event_t_class'    {orte_message_event_t_class}
  [D] 'opal_class_t orte_msg_packet_t_class'    {orte_msg_packet_t_class}
  [D] 'orte_process_name_t orte_name_invalid'    {orte_name_invalid}
  [D] 'orte_process_name_t orte_name_wildcard'    {orte_name_wildcard}
  [D] 'opal_class_t orte_namelist_t_class'    {orte_namelist_t_class}
  [D] 'bool orte_never_launched'    {orte_never_launched}
  [D] 'opal_class_t orte_nid_t_class'    {orte_nid_t_class}
  [D] 'opal_pointer_array_t orte_nidmap'    {orte_nidmap}
  [D] 'opal_pointer_array_t* orte_node_pool'    {orte_node_pool}
  [D] 'opal_class_t orte_node_t_class'    {orte_node_t_class}
  [D] 'orte_notifier_base_module_t orte_notifier'    {orte_notifier}
  [D] 'int orte_notifier_base_output'    {orte_notifier_base_output}
  [D] 'orte_notifier_base_module_t orte_notifier_command_module'    {orte_notifier_command_module}
  [D] 'orte_notifier_base_module_t orte_notifier_syslog_module'    {orte_notifier_syslog_module}
  [D] 'int orte_notifier_threshold_severity'    {orte_notifier_threshold_severity}
  [D] 'opal_class_t orte_notify_event_t_class'    {orte_notify_event_t_class}
  [D] 'orte_odls_base_module_t orte_odls'    {orte_odls}
  [D] 'orte_odls_base_t orte_odls_base'    {orte_odls_base}
  [D] 'opal_class_t orte_odls_child_t_class'    {orte_odls_child_t_class}
  [D] 'orte_odls_base_module_t orte_odls_default_module'    {orte_odls_default_module}
  [D] 'bool orte_odls_default_report_bindings'    {orte_odls_default_report_bindings}
  [D] 'orte_odls_globals_t orte_odls_globals'    {orte_odls_globals}
  [D] 'opal_class_t orte_odls_job_t_class'    {orte_odls_job_t_class}
  [D] 'bool orte_oob_base_already_opened'    {orte_oob_base_already_opened}
  [D] 'char* orte_oob_static_ports'    {orte_oob_static_ports}
  [D] 'bool orte_orted_exit_with_barrier'    {orte_orted_exit_with_barrier}
  [D] 'char* orte_output_filename'    {orte_output_filename}
  [D] 'orte_plm_base_module_t orte_plm'    {orte_plm}
  [D] 'orte_plm_base_t orte_plm_base'    {orte_plm_base}
  [D] 'orte_plm_globals_t orte_plm_globals'    {orte_plm_globals}
  [D] 'orte_plm_base_module_t orte_plm_rsh_module'    {orte_plm_rsh_module}
  [D] 'opal_class_t orte_pmap_t_class'    {orte_pmap_t_class}
  [D] 'char* orte_print_args_null'    {orte_print_args_null}
  [D] 'opal_class_t orte_proc_t_class'    {orte_proc_t_class}
  [D] 'orte_proc_info_t orte_process_info'    {orte_process_info}
  [D] 'char* orte_prohibited_session_dirs'    {orte_prohibited_session_dirs}
  [D] 'char* orte_rankfile'    {orte_rankfile}
  [D] 'orte_ras_t orte_ras'    {orte_ras}
  [D] 'orte_ras_base_t orte_ras_base'    {orte_ras_base}
  [D] 'orte_ras_base_module_t orte_ras_cm_module'    {orte_ras_cm_module}
  [D] 'opal_class_t orte_ras_proc_t_class'    {orte_ras_proc_t_class}
  [D] 'opal_class_t orte_regex_node_t_class'    {orte_regex_node_t_class}
  [D] 'bool orte_report_bindings'    {orte_report_bindings}
  [D] 'bool orte_report_events'    {orte_report_events}
  [D] 'char* orte_report_events_uri'    {orte_report_events_uri}
  [D] 'bool orte_report_launch_progress'    {orte_report_launch_progress}
  [D] 'orte_rmaps_t orte_rmaps'    {orte_rmaps}
  [D] 'orte_rmaps_base_t orte_rmaps_base'    {orte_rmaps_base}
  [D] 'orte_rmaps_base_module_t orte_rmaps_load_balance_module'    {orte_rmaps_load_balance_module}
  [D] 'int orte_rmaps_rank_file__flex_debug'    {orte_rmaps_rank_file__flex_debug}
  [D] 'bool orte_rmaps_rank_file_done'    {orte_rmaps_rank_file_done}
  [D] 'FILE* orte_rmaps_rank_file_in'    {orte_rmaps_rank_file_in}
  [D] 'int orte_rmaps_rank_file_leng'    {orte_rmaps_rank_file_leng}
  [D] 'int orte_rmaps_rank_file_line'    {orte_rmaps_rank_file_line}
  [D] 'int orte_rmaps_rank_file_lineno'    {orte_rmaps_rank_file_lineno}
  [D] 'opal_class_t orte_rmaps_rank_file_map_t_class'    {orte_rmaps_rank_file_map_t_class}
  [D] 'orte_rmaps_base_module_t orte_rmaps_rank_file_module'    {orte_rmaps_rank_file_module}
  [D] 'FILE* orte_rmaps_rank_file_out'    {orte_rmaps_rank_file_out}
  [D] 'char* orte_rmaps_rank_file_slot_list'    {orte_rmaps_rank_file_slot_list}
  [D] 'char* orte_rmaps_rank_file_text'    {orte_rmaps_rank_file_text}
  [D] 'orte_rmaps_rank_file_value_t orte_rmaps_rank_file_value'    {orte_rmaps_rank_file_value}
  [D] 'opal_class_t orte_rmaps_res_ftgrp_t_class'    {orte_rmaps_res_ftgrp_t_class}
  [D] 'orte_rmaps_base_module_t orte_rmaps_resilient_module'    {orte_rmaps_resilient_module}
  [D] 'orte_rmaps_base_module_t orte_rmaps_round_robin_module'    {orte_rmaps_round_robin_module}
  [D] 'orte_rmaps_base_module_t orte_rmaps_seq_module'    {orte_rmaps_seq_module}
  [D] 'orte_rmaps_base_module_t orte_rmaps_topo_module'    {orte_rmaps_topo_module}
  [D] 'orte_rmcast_module_t orte_rmcast'    {orte_rmcast}
  [D] 'orte_rmcast_base_t orte_rmcast_base'    {orte_rmcast_base}
  [D] 'opal_class_t orte_rmcast_msg_t_class'    {orte_rmcast_msg_t_class}
  [D] 'orte_rmcast_module_t orte_rmcast_tcp_module'    {orte_rmcast_tcp_module}
  [D] 'orte_rmcast_module_t orte_rmcast_udp_module'    {orte_rmcast_udp_module}
  [D] 'int orte_rmcast_udp_rcvbuf_size'    {orte_rmcast_udp_rcvbuf_size}
  [D] 'int orte_rmcast_udp_sndbuf_size'    {orte_rmcast_udp_sndbuf_size}
  [D] 'orte_rml_module_t orte_rml'    {orte_rml}
  [D] 'opal_list_t orte_rml_base_components'    {orte_rml_base_components}
  [D] 'int orte_rml_base_output'    {orte_rml_base_output}
  [D] 'opal_list_t orte_rml_base_subscriptions'    {orte_rml_base_subscriptions}
  [D] 'orte_rml_component_t* orte_rml_component'    {orte_rml_component}
  [D] 'orte_rml_oob_module_t orte_rml_oob_module'    {orte_rml_oob_module}
  [D] 'opal_class_t orte_rml_oob_msg_t_class'    {orte_rml_oob_msg_t_class}
  [D] 'opal_class_t orte_rml_oob_queued_msg_t_class'    {orte_rml_oob_queued_msg_t_class}
  [D] 'orte_routed_module_t orte_routed'    {orte_routed}
  [D] 'opal_list_t orte_routed_base_components'    {orte_routed_base_components}
  [D] 'int orte_routed_base_output'    {orte_routed_base_output}
  [D] 'orte_routed_module_t orte_routed_binomial_module'    {orte_routed_binomial_module}
  [D] 'orte_routed_module_t orte_routed_cm_module'    {orte_routed_cm_module}
  [D] 'orte_routed_module_t orte_routed_direct_module'    {orte_routed_direct_module}
  [D] 'orte_routed_module_t orte_routed_linear_module'    {orte_routed_linear_module}
  [D] 'orte_routed_module_t orte_routed_radix_module'    {orte_routed_radix_module}
  [D] 'orte_routed_module_t orte_routed_slave_module'    {orte_routed_slave_module}
  [D] 'opal_class_t orte_routed_tree_t_class'    {orte_routed_tree_t_class}
  [D] 'bool orte_routing_is_enabled'    {orte_routing_is_enabled}
  [D] 'char* orte_rsh_agent'    {orte_rsh_agent}
  [D] 'bool orte_send_profile'    {orte_send_profile}
  [D] 'bool orte_show_resolved_nodenames'    {orte_show_resolved_nodenames}
  [D] 'opal_class_t orte_slave_files_t_class'    {orte_slave_files_t_class}
  [D] 'orte_snapc_base_module_t orte_snapc'    {orte_snapc}
  [D] 'opal_list_t orte_snapc_base_components_available'    {orte_snapc_base_components_available}
  [D] 'bool orte_snapc_base_establish_global_snapshot_dir'    {orte_snapc_base_establish_global_snapshot_dir}
  [D] 'char* orte_snapc_base_global_snapshot_dir'    {orte_snapc_base_global_snapshot_dir}
  [D] 'char* orte_snapc_base_global_snapshot_loc'    {orte_snapc_base_global_snapshot_loc}
  [D] 'char* orte_snapc_base_global_snapshot_ref'    {orte_snapc_base_global_snapshot_ref}
  [D] 'opal_class_t orte_snapc_base_global_snapshot_t_class'    {orte_snapc_base_global_snapshot_t_class}
  [D] 'bool orte_snapc_base_is_global_dir_shared'    {orte_snapc_base_is_global_dir_shared}
  [D] 'bool orte_snapc_base_is_tool'    {orte_snapc_base_is_tool}
  [D] 'opal_class_t orte_snapc_base_local_snapshot_t_class'    {orte_snapc_base_local_snapshot_t_class}
  [D] 'int orte_snapc_base_output'    {orte_snapc_base_output}
  [D] 'opal_class_t orte_snapc_base_quiesce_t_class'    {orte_snapc_base_quiesce_t_class}
  [D] 'orte_snapc_base_component_t orte_snapc_base_selected_component'    {orte_snapc_base_selected_component}
  [D] 'size_t orte_snapc_base_snapshot_seq_number'    {orte_snapc_base_snapshot_seq_number}
  [D] 'bool orte_snapc_base_store_in_place'    {orte_snapc_base_store_in_place}
  [D] 'bool orte_snapc_base_store_only_one_seq'    {orte_snapc_base_store_only_one_seq}
  [D] 'orte_snapc_coord_type_t orte_snapc_coord_type'    {orte_snapc_coord_type}
  [D] 'bool orte_standalone_operation'    {orte_standalone_operation}
  [D] 'int orte_startup_timeout'    {orte_startup_timeout}
  [D] 'bool orte_static_ports'    {orte_static_ports}
  [D] 'bool orte_tag_output'    {orte_tag_output}
  [D] 'opal_class_t orte_thread_ctl_t_class'    {orte_thread_ctl_t_class}
  [D] 'int orte_timeout_usec_per_proc'    {orte_timeout_usec_per_proc}
  [D] 'bool orte_timestamp_output'    {orte_timestamp_output}
  [D] 'bool orte_timing'    {orte_timing}
  [D] 'bool orte_timing_details'    {orte_timing_details}
  [D] 'FILE* orte_timing_output'    {orte_timing_output}
  [D] 'opal_buffer_t* orte_tree_launch_cmd'    {orte_tree_launch_cmd}
  [D] 'opal_class_t orte_trigger_event_t_class'    {orte_trigger_event_t_class}
  [D] 'bool orte_use_regexp'    {orte_use_regexp}
  [D] 'int orte_util_hostfile__flex_debug'    {orte_util_hostfile__flex_debug}
  [D] 'bool orte_util_hostfile_done'    {orte_util_hostfile_done}
  [D] 'FILE* orte_util_hostfile_in'    {orte_util_hostfile_in}
  [D] 'int orte_util_hostfile_leng'    {orte_util_hostfile_leng}
  [D] 'int orte_util_hostfile_line'    {orte_util_hostfile_line}
  [D] 'int orte_util_hostfile_lineno'    {orte_util_hostfile_lineno}
  [D] 'FILE* orte_util_hostfile_out'    {orte_util_hostfile_out}
  [D] 'char* orte_util_hostfile_text'    {orte_util_hostfile_text}
  [D] 'orte_hostfile_value_t orte_util_hostfile_value'    {orte_util_hostfile_value}
  [D] 'const char orte_version_string[]'    {orte_version_string}
  [D] 'FILE* orte_xml_fp'    {orte_xml_fp}
  [D] 'bool orte_xml_output'    {orte_xml_output}
  [D] 'char* orte_xterm'    {orte_xterm}
  [D] 'char** orted_cmd_line'    {orted_cmd_line}
  [D] 'int orted_debug_failure'    {orted_debug_failure}
  [D] 'int orted_debug_failure_delay'    {orted_debug_failure_delay}
  [D] 'char* orted_launch_cmd'    {orted_launch_cmd}
  [D] 'bool orted_spin_flag'    {orted_spin_flag}
  [D] 'orte_trigger_event_t orteds_exit'    {orteds_exit}
  [D] 'opal_class_t peer_rdma_send_info_t_class'    {peer_rdma_send_info_t_class}
  [D] 'const opal_eventop pollops'    {pollops}
  [D] 'opal_class_t rmcast_base_channel_t_class'    {rmcast_base_channel_t_class}
  [D] 'opal_class_t rmcast_base_recv_t_class'    {rmcast_base_recv_t_class}
  [D] 'opal_class_t rmcast_base_send_t_class'    {rmcast_base_send_t_class}
  [D] 'opal_class_t rmcast_recv_log_t_class'    {rmcast_recv_log_t_class}
  [D] 'opal_class_t rmcast_send_log_t_class'    {rmcast_send_log_t_class}
  [D] 'opal_class_t rmcast_seq_tracker_t_class'    {rmcast_seq_tracker_t_class}
  [D] 'const opal_eventop selectops'    {selectops}
  [D] 'opal_class_t syn_info_t_class'    {syn_info_t_class}
  [D] 'opal_class_t tuple_list_item_t_class'    {tuple_list_item_t_class}
  [D] 'opal_list_t work_pool_active'    {work_pool_active}
  [D] 'opal_list_t work_pool_held'    {work_pool_held}
  [D] 'opal_list_t work_pool_pending'    {work_pool_pending}
  [D] 'opal_list_t work_pool_waiting'    {work_pool_waiting}

2 Added variables:

  [A] 'opal_free_list_item_t* opal_free_list_item_t_type_force_inclusion'    {opal_free_list_item_t_type_force_inclusion}
  [A] 'opal_free_list_t* opal_free_list_t_type_force_inclusion'    {opal_free_list_t_type_force_inclusion}

1 Changed variable:

  [C] 'char MPIR_dll_name[133]' was changed to 'char MPIR_dll_name[135]' at ompi_debuggers.c:81:1:
    size of symbol changed from 133 to 135
    type of variable changed:
      type name changed from 'char[133]' to 'char[135]'
      array type size changed from 1064 to 1080
      array type subrange 1 changed length from 133 to 135

157 Removed function symbols not referenced by debug info:

  [D] mca_allocator_basic_component_close
  [D] mca_topo_unity_module_finalize
  [D] mca_topo_unity_module_init
  [D] mpi_comm_dup_fn_f
  [D] mpi_comm_null_copy_fn_f, aliases mpi_comm_null_copy_fn, mpi_comm_null_copy_fn_, MPI_COMM_NULL_COPY_FN
  [D] mpi_comm_null_delete_fn_f, aliases mpi_comm_null_delete_fn
  [D] mpi_null_copy_fn_f
  [D] mpi_null_delete_fn_f
  [D] mpi_win_dup_fn_f, aliases MPI_WIN_DUP_FN
  [D] mpi_win_null_copy_fn_f
  [D] mpi_win_null_delete_fn_f, aliases MPI_WIN_NULL_DELETE_FN, mpi_win_null_delete_fn_
  [D] ompi_dpm_base_null_dyn_finalize
  [D] ompi_dpm_base_null_mark_dyncomm
  [D] ompi_op_base_3buff_band_byte
  [D] ompi_op_base_3buff_band_fortran_integer
  [D] ompi_op_base_3buff_band_fortran_integer2
  [D] ompi_op_base_3buff_band_fortran_integer4
  [D] ompi_op_base_3buff_bor_byte
  [D] ompi_op_base_3buff_bor_fortran_integer
  [D] ompi_op_base_3buff_bor_fortran_integer2
  [D] ompi_op_base_3buff_bor_fortran_integer4
  [D] ompi_op_base_3buff_bxor_byte
  [D] ompi_op_base_3buff_bxor_fortran_integer
  [D] ompi_op_base_3buff_bxor_fortran_integer2
  [D] ompi_op_base_3buff_bxor_fortran_integer4
  [D] ompi_op_base_3buff_land_fortran_logical
  [D] ompi_op_base_3buff_lor_fortran_logical
  [D] ompi_op_base_3buff_lxor_fortran_logical
  [D] ompi_op_base_3buff_max_fortran_double_precision
  [D] ompi_op_base_3buff_max_fortran_integer
  [D] ompi_op_base_3buff_max_fortran_integer2
  [D] ompi_op_base_3buff_max_fortran_integer4
  [D] ompi_op_base_3buff_max_fortran_real
  [D] ompi_op_base_3buff_max_fortran_real16
  [D] ompi_op_base_3buff_max_fortran_real4
  [D] ompi_op_base_3buff_max_fortran_real8
  [D] ompi_op_base_3buff_min_fortran_double_precision
  [D] ompi_op_base_3buff_min_fortran_integer
  [D] ompi_op_base_3buff_min_fortran_integer2
  [D] ompi_op_base_3buff_min_fortran_integer4
  [D] ompi_op_base_3buff_min_fortran_real
  [D] ompi_op_base_3buff_min_fortran_real16
  [D] ompi_op_base_3buff_min_fortran_real4
  [D] ompi_op_base_3buff_min_fortran_real8
  [D] ompi_op_base_3buff_prod_fortran_double_precision
  [D] ompi_op_base_3buff_prod_fortran_integer4
  [D] ompi_op_base_3buff_prod_fortran_real
  [D] ompi_op_base_3buff_prod_fortran_real16
  [D] ompi_op_base_3buff_prod_fortran_real4
  [D] ompi_op_base_3buff_prod_fortran_real8
  [D] ompi_op_base_3buff_sum_fortran_double_precision
  [D] ompi_op_base_3buff_sum_fortran_integer4
  [D] ompi_op_base_3buff_sum_fortran_real
  [D] ompi_op_base_3buff_sum_fortran_real16
  [D] ompi_op_base_3buff_sum_fortran_real4
  [D] ompi_op_base_3buff_sum_fortran_real8
  [D] ompi_op_base_band_byte
  [D] ompi_op_base_band_fortran_integer
  [D] ompi_op_base_band_fortran_integer2
  [D] ompi_op_base_band_fortran_integer4
  [D] ompi_op_base_bor_byte
  [D] ompi_op_base_bor_fortran_integer
  [D] ompi_op_base_bor_fortran_integer2
  [D] ompi_op_base_bor_fortran_integer4
  [D] ompi_op_base_bxor_byte
  [D] ompi_op_base_bxor_fortran_integer
  [D] ompi_op_base_bxor_fortran_integer2
  [D] ompi_op_base_bxor_fortran_integer4
  [D] ompi_op_base_land_fortran_logical
  [D] ompi_op_base_lor_fortran_logical
  [D] ompi_op_base_lxor_fortran_logical
  [D] ompi_op_base_max_fortran_double_precision
  [D] ompi_op_base_max_fortran_integer
  [D] ompi_op_base_max_fortran_integer2
  [D] ompi_op_base_max_fortran_integer4
  [D] ompi_op_base_max_fortran_real
  [D] ompi_op_base_max_fortran_real16
  [D] ompi_op_base_max_fortran_real4
  [D] ompi_op_base_max_fortran_real8
  [D] ompi_op_base_min_fortran_double_precision
  [D] ompi_op_base_min_fortran_integer
  [D] ompi_op_base_min_fortran_integer2
  [D] ompi_op_base_min_fortran_integer4
  [D] ompi_op_base_min_fortran_real
  [D] ompi_op_base_min_fortran_real16
  [D] ompi_op_base_min_fortran_real4
  [D] ompi_op_base_min_fortran_real8
  [D] ompi_op_base_prod_fortran_double_precision
  [D] ompi_op_base_prod_fortran_integer
  [D] ompi_op_base_prod_fortran_integer2
  [D] ompi_op_base_prod_fortran_integer4
  [D] ompi_op_base_prod_fortran_real
  [D] ompi_op_base_prod_fortran_real16
  [D] ompi_op_base_prod_fortran_real4
  [D] ompi_op_base_prod_fortran_real8
  [D] ompi_op_base_sum_fortran_double_precision
  [D] ompi_op_base_sum_fortran_integer
  [D] ompi_op_base_sum_fortran_integer2
  [D] ompi_op_base_sum_fortran_integer4
  [D] ompi_op_base_sum_fortran_real
  [D] ompi_op_base_sum_fortran_real16
  [D] ompi_op_base_sum_fortran_real4
  [D] ompi_op_base_sum_fortran_real8
  [D] opal_atomic_cmpset_32
  [D] opal_atomic_cmpset_64
  [D] opal_atomic_mb
  [D] opal_atomic_rmb
  [D] opal_atomic_wmb
  [D] opal_crs_none_disable_checkpoint
  [D] opal_crs_none_enable_checkpoint
  [D] opal_crs_none_reg_thread
  [D] opal_dss_compare_char
  [D] opal_dss_compare_dt
  [D] opal_dss_compare_int32
  [D] opal_dss_compare_pid
  [D] opal_dss_compare_pstat
  [D] opal_dss_compare_uint32
  [D] opal_dss_compare_uint64
  [D] opal_dss_unpack_byte
  [D] opal_memory_base_component_deregister_empty
  [D] opal_sys_timer_get_cycles
  [D] opal_trace_finalize
  [D] orte_cr_entry_point_finalize
  [D] orte_dt_compare_exit_code
  [D] orte_dt_compare_grpcomm_mode
  [D] orte_dt_compare_iof_tag
  [D] orte_dt_compare_job_state
  [D] orte_dt_compare_vpid
  [D] orte_dt_unpack_grpcomm_mode
  [D] orte_dt_unpack_iof_tag
  [D] orte_errmgr_default_component_close
  [D] orte_ess_env_component_close
  [D] orte_ess_hnp_component_close
  [D] orte_ess_singleton_component_close
  [D] orte_ess_slave_component_close
  [D] orte_ess_tool_component_close
  [D] orte_filem_base_module_finalize
  [D] orte_filem_base_none_close
  [D] orte_filem_base_none_get
  [D] orte_filem_base_none_get_nb
  [D] orte_filem_base_none_put_nb
  [D] orte_filem_base_none_rm
  [D] orte_filem_base_none_rm_nb
  [D] orte_filem_base_none_wait
  [D] orte_filem_base_none_wait_all
  [D] orte_filem_base_process_set_destruct
  [D] orte_grpcomm_bad_close
  [D] orte_grpcomm_basic_close
  [D] orte_grpcomm_hier_close
  [D] orte_notifier_syslog_close
  [D] orte_odls_default_component_close
  [D] orte_plm_proxy_finalize
  [D] orte_rml_base_null_recv_buffer
  [D] orte_rml_base_null_recv_nb
  [D] orte_snapc_base_module_finalize
  [D] orte_snapc_base_none_close
  [D] orte_snapc_base_none_end_ckpt

1445 Added function symbols not referenced by debug info:

  [A] ADIOI_Err_create_code
  [A] ADIOI_Fill_send_buffer
  [A] ADIOI_Fill_user_buffer
  [A] ADIOI_Flatten_and_find
  [A] ADIOI_IO_Thread_Func
  [A] ADIOI_Icalc_others_req
  [A] ADIOI_Icalc_others_req_fini
  [A] ADIOI_Icalc_others_req_main
  [A] ADIOI_Info_check_and_install_enabled
  [A] ADIOI_Info_check_and_install_int
  [A] ADIOI_Info_check_and_install_str
  [A] ADIOI_Info_check_and_install_true
  [A] ADIOI_Info_print_keyvals
  [A] ADIOI_OneSidedCleanup
  [A] ADIOI_OneSidedReadAggregation
  [A] ADIOI_OneSidedWriteAggregation
  [A] ADIOI_P2PContigReadAggregation
  [A] ADIOI_P2PContigWriteAggregation
  [A] ADIOI_Type_create_hindexed_x
  [A] ADIOI_Type_get_contents
  [A] ADIOI_Type_get_envelope
  [A] MPIOI_File_iread_all
  [A] MPIOI_File_iwrite_all
  [A] MPIU_datatype_full_size
  [A] MPIU_external32_buffer_setup
  [A] MPIU_read_external32_conversion_fn
  [A] MPIU_write_external32_conversion_fn
  [A] MPIX_Allgather_init
  [A] MPIX_Allgatherv_init
  [A] MPIX_Allreduce_init
  [A] MPIX_Alltoall_init, aliases PMPIX_Alltoall_init
  [A] MPIX_Alltoallv_init
  [A] MPIX_Alltoallw_init
  [A] MPIX_Barrier_init, aliases PMPIX_Barrier_init
  [A] MPIX_Bcast_init
  [A] MPIX_Exscan_init
  [A] MPIX_Gather_init
  [A] MPIX_Gatherv_init
  [A] MPIX_Neighbor_allgather_init
  [A] MPIX_Neighbor_allgatherv_init
  [A] MPIX_Neighbor_alltoall_init
  [A] MPIX_Neighbor_alltoallv_init
  [A] MPIX_Neighbor_alltoallw_init
  [A] MPIX_Query_cuda_support
  [A] MPIX_Reduce_init
  [A] MPIX_Reduce_scatter_block_init
  [A] MPIX_Reduce_scatter_init
  [A] MPIX_Scan_init, aliases PMPIX_Scan_init
  [A] MPIX_Scatter_init
  [A] MPIX_Scatterv_init
  [A] MPI_AINT_ADD_F90
  [A] MPI_AINT_DIFF_F90
  [A] MPI_Comm_create_group
  [A] MPI_Comm_dup_with_info
  [A] MPI_Comm_get_info
  [A] MPI_Comm_idup, aliases PMPI_Comm_idup
  [A] MPI_Comm_set_info
  [A] MPI_Comm_split_type
  [A] MPI_Compare_and_swap
  [A] MPI_Dist_graph_create
  [A] MPI_Dist_graph_create_adjacent
  [A] MPI_Dist_graph_neighbors
  [A] MPI_Dist_graph_neighbors_count, aliases PMPI_Dist_graph_neighbors_count
  [A] MPI_Fetch_and_op, aliases PMPI_Fetch_and_op
  [A] MPI_File_iread_all
  [A] MPI_File_iread_at_all, aliases PMPI_File_iread_at_all
  [A] MPI_File_iwrite_all
  [A] MPI_File_iwrite_at_all, aliases PMPI_File_iwrite_at_all
  [A] MPI_Get_accumulate
  [A] MPI_Get_elements_x, aliases PMPI_Get_elements_x
  [A] MPI_Get_library_version, aliases PMPI_Get_library_version
  [A] MPI_Iallgather
  [A] MPI_Iallgatherv
  [A] MPI_Iallreduce
  [A] MPI_Ialltoall
  [A] MPI_Ialltoallv, aliases PMPI_Ialltoallv
  [A] MPI_Ialltoallw, aliases PMPI_Ialltoallw
  [A] MPI_Ibarrier
  [A] MPI_Ibcast
  [A] MPI_Iexscan, aliases PMPI_Iexscan
  [A] MPI_Igather
  [A] MPI_Igatherv, aliases PMPI_Igatherv
  [A] MPI_Improbe, aliases PMPI_Improbe
  [A] MPI_Imrecv, aliases PMPI_Imrecv
  [A] MPI_Ineighbor_allgather, aliases PMPI_Ineighbor_allgather
  [A] MPI_Ineighbor_allgatherv
  [A] MPI_Ineighbor_alltoall, aliases PMPI_Ineighbor_alltoall
  [A] MPI_Ineighbor_alltoallv, aliases PMPI_Ineighbor_alltoallv
  [A] MPI_Ineighbor_alltoallw, aliases PMPI_Ineighbor_alltoallw
  [A] MPI_Ireduce
  [A] MPI_Ireduce_scatter
  [A] MPI_Ireduce_scatter_block
  [A] MPI_Iscan
  [A] MPI_Iscatter, aliases PMPI_Iscatter
  [A] MPI_Iscatterv
  [A] MPI_Message_c2f, aliases PMPI_Message_c2f
  [A] MPI_Message_f2c
  [A] MPI_Mprobe
  [A] MPI_Mrecv, aliases PMPI_Mrecv
  [A] MPI_Neighbor_allgather
  [A] MPI_Neighbor_allgatherv, aliases PMPI_Neighbor_allgatherv
  [A] MPI_Neighbor_alltoall, aliases PMPI_Neighbor_alltoall
  [A] MPI_Neighbor_alltoallv, aliases PMPI_Neighbor_alltoallv
  [A] MPI_Neighbor_alltoallw, aliases PMPI_Neighbor_alltoallw
  [A] MPI_Raccumulate
  [A] MPI_Reduce_scatter_block, aliases PMPI_Reduce_scatter_block
  [A] MPI_Rget
  [A] MPI_Rget_accumulate
  [A] MPI_Rput
  [A] MPI_Status_set_elements_x
  [A] MPI_T_category_changed, aliases PMPI_T_category_changed
  [A] MPI_T_category_get_categories
  [A] MPI_T_category_get_cvars
  [A] MPI_T_category_get_index
  [A] MPI_T_category_get_info
  [A] MPI_T_category_get_num
  [A] MPI_T_category_get_pvars, aliases PMPI_T_category_get_pvars
  [A] MPI_T_cvar_get_index
  [A] MPI_T_cvar_get_info
  [A] MPI_T_cvar_get_num, aliases PMPI_T_cvar_get_num
  [A] MPI_T_cvar_handle_alloc
  [A] MPI_T_cvar_handle_free
  [A] MPI_T_cvar_read, aliases PMPI_T_cvar_read
  [A] MPI_T_cvar_write, aliases PMPI_T_cvar_write
  [A] MPI_T_enum_get_info
  [A] MPI_T_enum_get_item, aliases PMPI_T_enum_get_item
  [A] MPI_T_finalize, aliases PMPI_T_finalize
  [A] MPI_T_init_thread
  [A] MPI_T_pvar_get_index
  [A] MPI_T_pvar_get_info
  [A] MPI_T_pvar_get_num
  [A] MPI_T_pvar_handle_alloc
  [A] MPI_T_pvar_handle_free, aliases PMPI_T_pvar_handle_free
  [A] MPI_T_pvar_read, aliases PMPI_T_pvar_read
  [A] MPI_T_pvar_readreset
  [A] MPI_T_pvar_reset
  [A] MPI_T_pvar_session_create
  [A] MPI_T_pvar_session_free, aliases PMPI_T_pvar_session_free
  [A] MPI_T_pvar_start
  [A] MPI_T_pvar_stop
  [A] MPI_T_pvar_write, aliases PMPI_T_pvar_write
  [A] MPI_Type_create_hindexed_block, aliases PMPI_Type_create_hindexed_block
  [A] MPI_Type_get_extent_x
  [A] MPI_Type_get_true_extent_x
  [A] MPI_Type_size_x, aliases PMPI_Type_size_x
  [A] MPI_Win_allocate, aliases PMPI_Win_allocate
  [A] MPI_Win_allocate_shared
  [A] MPI_Win_attach, aliases PMPI_Win_attach
  [A] MPI_Win_create_dynamic, aliases PMPI_Win_create_dynamic
  [A] MPI_Win_detach
  [A] MPI_Win_flush, aliases PMPI_Win_flush
  [A] MPI_Win_flush_all
  [A] MPI_Win_flush_local
  [A] MPI_Win_flush_local_all, aliases PMPI_Win_flush_local_all
  [A] MPI_Win_get_info, aliases PMPI_Win_get_info
  [A] MPI_Win_lock_all
  [A] MPI_Win_set_info
  [A] MPI_Win_shared_query
  [A] MPI_Win_sync, aliases PMPI_Win_sync
  [A] MPI_Win_unlock_all
  [A] NBC_Comm_neighbors
  [A] NBC_Comm_neighbors_count
  [A] NBC_Init_comm
  [A] NBC_Progress
  [A] NBC_Return_handle
  [A] NBC_Sched_barrier
  [A] NBC_Sched_commit
  [A] NBC_Sched_copy
  [A] NBC_Sched_local_recv
  [A] NBC_Sched_local_send
  [A] NBC_Sched_op
  [A] NBC_Sched_recv
  [A] NBC_Sched_send
  [A] NBC_Sched_unpack
  [A] NBC_Schedule_request
  [A] NBC_Start
  [A] OMPI_Affinity_str
  [A] PMPIX_Allgather_init, aliases MPIX_Allgather_init
  [A] PMPIX_Allgatherv_init, aliases MPIX_Allgatherv_init
  [A] PMPIX_Allreduce_init, aliases MPIX_Allreduce_init
  [A] PMPIX_Alltoall_init
  [A] PMPIX_Alltoallv_init, aliases MPIX_Alltoallv_init
  [A] PMPIX_Alltoallw_init, aliases MPIX_Alltoallw_init
  [A] PMPIX_Barrier_init
  [A] PMPIX_Bcast_init, aliases MPIX_Bcast_init
  [A] PMPIX_Exscan_init, aliases MPIX_Exscan_init
  [A] PMPIX_Gather_init, aliases MPIX_Gather_init
  [A] PMPIX_Gatherv_init, aliases MPIX_Gatherv_init
  [A] PMPIX_Neighbor_allgather_init, aliases MPIX_Neighbor_allgather_init
  [A] PMPIX_Neighbor_allgatherv_init, aliases MPIX_Neighbor_allgatherv_init
  [A] PMPIX_Neighbor_alltoall_init, aliases MPIX_Neighbor_alltoall_init
  [A] PMPIX_Neighbor_alltoallv_init, aliases MPIX_Neighbor_alltoallv_init
  [A] PMPIX_Neighbor_alltoallw_init, aliases MPIX_Neighbor_alltoallw_init
  [A] PMPIX_Reduce_init, aliases MPIX_Reduce_init
  [A] PMPIX_Reduce_scatter_block_init, aliases MPIX_Reduce_scatter_block_init
  [A] PMPIX_Reduce_scatter_init, aliases MPIX_Reduce_scatter_init
  [A] PMPIX_Scan_init
  [A] PMPIX_Scatter_init, aliases MPIX_Scatter_init
  [A] PMPIX_Scatterv_init, aliases MPIX_Scatterv_init
  [A] PMPI_Comm_create_group, aliases MPI_Comm_create_group
  [A] PMPI_Comm_dup_with_info, aliases MPI_Comm_dup_with_info
  [A] PMPI_Comm_get_info, aliases MPI_Comm_get_info
  [A] PMPI_Comm_idup
  [A] PMPI_Comm_set_info, aliases MPI_Comm_set_info
  [A] PMPI_Comm_split_type, aliases MPI_Comm_split_type
  [A] PMPI_Compare_and_swap, aliases MPI_Compare_and_swap
  [A] PMPI_Dist_graph_create, aliases MPI_Dist_graph_create
  [A] PMPI_Dist_graph_create_adjacent, aliases MPI_Dist_graph_create_adjacent
  [A] PMPI_Dist_graph_neighbors, aliases MPI_Dist_graph_neighbors
  [A] PMPI_Dist_graph_neighbors_count
  [A] PMPI_Fetch_and_op
  [A] PMPI_File_iread_all, aliases MPI_File_iread_all
  [A] PMPI_File_iread_at_all
  [A] PMPI_File_iwrite_all, aliases MPI_File_iwrite_all
  [A] PMPI_File_iwrite_at_all
  [A] PMPI_Get_accumulate, aliases MPI_Get_accumulate
  [A] PMPI_Get_elements_x
  [A] PMPI_Get_library_version
  [A] PMPI_Iallgather, aliases MPI_Iallgather
  [A] PMPI_Iallgatherv, aliases MPI_Iallgatherv
  [A] PMPI_Iallreduce, aliases MPI_Iallreduce
  [A] PMPI_Ialltoall, aliases MPI_Ialltoall
  [A] PMPI_Ialltoallv
  [A] PMPI_Ialltoallw
  [A] PMPI_Ibarrier, aliases MPI_Ibarrier
  [A] PMPI_Ibcast, aliases MPI_Ibcast
  [A] PMPI_Iexscan
  [A] PMPI_Igather, aliases MPI_Igather
  [A] PMPI_Igatherv
  [A] PMPI_Improbe
  [A] PMPI_Imrecv
  [A] PMPI_Ineighbor_allgather
  [A] PMPI_Ineighbor_allgatherv, aliases MPI_Ineighbor_allgatherv
  [A] PMPI_Ineighbor_alltoall
  [A] PMPI_Ineighbor_alltoallv
  [A] PMPI_Ineighbor_alltoallw
  [A] PMPI_Ireduce, aliases MPI_Ireduce
  [A] PMPI_Ireduce_scatter, aliases MPI_Ireduce_scatter
  [A] PMPI_Ireduce_scatter_block, aliases MPI_Ireduce_scatter_block
  [A] PMPI_Iscan, aliases MPI_Iscan
  [A] PMPI_Iscatter
  [A] PMPI_Iscatterv, aliases MPI_Iscatterv
  [A] PMPI_Message_c2f
  [A] PMPI_Message_f2c, aliases MPI_Message_f2c
  [A] PMPI_Mprobe, aliases MPI_Mprobe
  [A] PMPI_Mrecv
  [A] PMPI_Neighbor_allgather, aliases MPI_Neighbor_allgather
  [A] PMPI_Neighbor_allgatherv
  [A] PMPI_Neighbor_alltoall
  [A] PMPI_Neighbor_alltoallv
  [A] PMPI_Neighbor_alltoallw
  [A] PMPI_Raccumulate, aliases MPI_Raccumulate
  [A] PMPI_Reduce_scatter_block
  [A] PMPI_Rget, aliases MPI_Rget
  [A] PMPI_Rget_accumulate, aliases MPI_Rget_accumulate
  [A] PMPI_Rput, aliases MPI_Rput
  [A] PMPI_Status_set_elements_x, aliases MPI_Status_set_elements_x
  [A] PMPI_T_category_changed
  [A] PMPI_T_category_get_categories, aliases MPI_T_category_get_categories
  [A] PMPI_T_category_get_cvars, aliases MPI_T_category_get_cvars
  [A] PMPI_T_category_get_index, aliases MPI_T_category_get_index
  [A] PMPI_T_category_get_info, aliases MPI_T_category_get_info
  [A] PMPI_T_category_get_num, aliases MPI_T_category_get_num
  [A] PMPI_T_category_get_pvars
  [A] PMPI_T_cvar_get_index, aliases MPI_T_cvar_get_index
  [A] PMPI_T_cvar_get_info, aliases MPI_T_cvar_get_info
  [A] PMPI_T_cvar_get_num
  [A] PMPI_T_cvar_handle_alloc, aliases MPI_T_cvar_handle_alloc
  [A] PMPI_T_cvar_handle_free, aliases MPI_T_cvar_handle_free
  [A] PMPI_T_cvar_read
  [A] PMPI_T_cvar_write
  [A] PMPI_T_enum_get_info, aliases MPI_T_enum_get_info
  [A] PMPI_T_enum_get_item
  [A] PMPI_T_finalize
  [A] PMPI_T_init_thread, aliases MPI_T_init_thread
  [A] PMPI_T_pvar_get_index, aliases MPI_T_pvar_get_index
  [A] PMPI_T_pvar_get_info, aliases MPI_T_pvar_get_info
  [A] PMPI_T_pvar_get_num, aliases MPI_T_pvar_get_num
  [A] PMPI_T_pvar_handle_alloc, aliases MPI_T_pvar_handle_alloc
  [A] PMPI_T_pvar_handle_free
  [A] PMPI_T_pvar_read
  [A] PMPI_T_pvar_readreset, aliases MPI_T_pvar_readreset
  [A] PMPI_T_pvar_reset, aliases MPI_T_pvar_reset
  [A] PMPI_T_pvar_session_create, aliases MPI_T_pvar_session_create
  [A] PMPI_T_pvar_session_free
  [A] PMPI_T_pvar_start, aliases MPI_T_pvar_start
  [A] PMPI_T_pvar_stop, aliases MPI_T_pvar_stop
  [A] PMPI_T_pvar_write
  [A] PMPI_Type_create_hindexed_block
  [A] PMPI_Type_get_extent_x, aliases MPI_Type_get_extent_x
  [A] PMPI_Type_get_true_extent_x, aliases MPI_Type_get_true_extent_x
  [A] PMPI_Type_size_x
  [A] PMPI_Win_allocate
  [A] PMPI_Win_allocate_shared, aliases MPI_Win_allocate_shared
  [A] PMPI_Win_attach
  [A] PMPI_Win_create_dynamic
  [A] PMPI_Win_detach, aliases MPI_Win_detach
  [A] PMPI_Win_flush
  [A] PMPI_Win_flush_all, aliases MPI_Win_flush_all
  [A] PMPI_Win_flush_local, aliases MPI_Win_flush_local
  [A] PMPI_Win_flush_local_all
  [A] PMPI_Win_get_info
  [A] PMPI_Win_lock_all, aliases MPI_Win_lock_all
  [A] PMPI_Win_set_info, aliases MPI_Win_set_info
  [A] PMPI_Win_shared_query, aliases MPI_Win_shared_query
  [A] PMPI_Win_sync
  [A] PMPI_Win_unlock_all, aliases MPI_Win_unlock_all
  [A] PQ_adjustElementKey
  [A] PQ_adjustKey
  [A] PQ_decreaseElementKey
  [A] PQ_decreaseKey
  [A] PQ_delete
  [A] PQ_deleteElement
  [A] PQ_deleteMax
  [A] PQ_deleteMaxElement
  [A] PQ_exit
  [A] PQ_findMaxElement
  [A] PQ_findMaxKey
  [A] PQ_free
  [A] PQ_increaseElementKey
  [A] PQ_increaseKey
  [A] PQ_init
  [A] PQ_insert
  [A] PQ_insertElement
  [A] PQ_isEmpty
  [A] adapt_module_cached_topology
  [A] add_edge_3
  [A] add_to_bucket
  [A] add_to_list
  [A] adjacency_asc
  [A] adjacency_dsc
  [A] aggregate_obj_weight
  [A] algo
  [A] allocate_vertex
  [A] allocate_vertex2
  [A] append_frag_to_ordered_list
  [A] balancing
  [A] bottom_up_build_tree_from_topology
  [A] bucket_grouping
  [A] bucket_id
  [A] build_cost_matrix
  [A] build_level_topology
  [A] build_p_vector
  [A] build_synthetic_proc_id
  [A] built_pivot_tree
  [A] check_bucket
  [A] check_cantmatch_for_match
  [A] check_constraints
  [A] choose
  [A] clone_tree
  [A] complete_aff_mat
  [A] complete_obj_weight
  [A] complete_tab_node
  [A] compute_gain
  [A] compute_nb_leaves_from_level
  [A] compute_weighted_degree
  [A] create_dumb_tree
  [A] create_work
  [A] delete_group_list
  [A] depth_first
  [A] destruction
  [A] dfs
  [A] dict_destroy
  [A] dict_int_cmp
  [A] dict_itor_destroy
  [A] dict_long_cmp
  [A] dict_ptr_cmp
  [A] dict_set_free
  [A] dict_set_malloc
  [A] dict_str_cmp
  [A] dict_uint_cmp
  [A] dict_ulong_cmp
  [A] display_bucket
  [A] display_bucket_list
  [A] display_grouping
  [A] display_node
  [A] display_pivots
  [A] display_selection
  [A] display_sol
  [A] display_sol_sum_com
  [A] display_tab
  [A] display_tab_group
  [A] distance
  [A] eval_cost
  [A] eval_cost2
  [A] eval_grouping
  [A] eval_sol
  [A] exchange
  [A] fast_group
  [A] fast_grouping
  [A] fiboTreeConsolidate
  [A] fiboTreeDel
  [A] fiboTreeExit
  [A] fiboTreeFree
  [A] fiboTreeInit
  [A] fiboTreeMin
  [A] fill_buckets
  [A] fill_tab
  [A] free_affinity_mat
  [A] free_bucket
  [A] free_bucket_list
  [A] free_const_tab
  [A] free_constraint_tree
  [A] free_list_child
  [A] free_non_constraint_tree
  [A] free_tab_bucket
  [A] free_tab_child
  [A] free_tab_com_mat
  [A] free_tab_double
  [A] free_tab_int
  [A] free_tab_local_vertices
  [A] gain_exchange
  [A] generate_random_sol
  [A] genrand_int31
  [A] genrand_int32
  [A] genrand_real1
  [A] genrand_real2
  [A] genrand_real3
  [A] genrand_res53
  [A] get_local_topo_with_hwloc
  [A] get_nb_threads
  [A] get_time
  [A] group_list_asc
  [A] group_list_dsc
  [A] group_list_id
  [A] group_nodes
  [A] han_request_free
  [A] hash_asc
  [A] hb_dict_itor_new
  [A] hb_dict_new
  [A] hb_itor_cdata
  [A] hb_itor_data
  [A] hb_itor_destroy
  [A] hb_itor_first
  [A] hb_itor_invalidate
  [A] hb_itor_key
  [A] hb_itor_last
  [A] hb_itor_new
  [A] hb_itor_next
  [A] hb_itor_nextn
  [A] hb_itor_prev
  [A] hb_itor_prevn
  [A] hb_itor_search
  [A] hb_itor_set_data
  [A] hb_itor_valid
  [A] hb_tree_count
  [A] hb_tree_destroy
  [A] hb_tree_empty
  [A] hb_tree_height
  [A] hb_tree_insert
  [A] hb_tree_max
  [A] hb_tree_mheight
  [A] hb_tree_min
  [A] hb_tree_new
  [A] hb_tree_pathlen
  [A] hb_tree_probe
  [A] hb_tree_remove
  [A] hb_tree_search
  [A] hb_tree_walk
  [A] hwloc_to_tm
  [A] in_tab
  [A] independent_groups
  [A] independent_tab
  [A] init_by_array
  [A] init_genrand
  [A] init_mat
  [A] initialization
  [A] intCIV_exit
  [A] intCIV_get
  [A] intCIV_init
  [A] intCIV_isInitialized
  [A] intCIV_set
  [A] int_cmp_inc
  [A] is_power_of_2
  [A] kPartitioning
  [A] kpartition
  [A] kpartition_build_level_topology
  [A] kpartition_build_tree_from_topology
  [A] kpartition_greedy
  [A] kpartition_greedy2
  [A] list_all_possible_groups
  [A] list_to_tab
  [A] map_MPIPP
  [A] map_Packed
  [A] map_RR
  [A] map_topology
  [A] mca_coll_base_alltoall_intra_basic_inplace
  [A] mca_coll_base_alltoallv_intra_basic_inplace
  [A] mca_coll_base_colltype_to_str
  [A] mca_coll_base_name_to_colltype
  [A] mca_coll_base_reduce_local
  [A] mca_coll_basic_neighbor_allgather
  [A] mca_coll_basic_neighbor_allgatherv
  [A] mca_coll_basic_neighbor_alltoall
  [A] mca_coll_basic_neighbor_alltoallv
  [A] mca_coll_basic_neighbor_alltoallw
  [A] mca_coll_basic_reduce_scatter_block_inter
  [A] mca_coll_basic_reduce_scatter_block_intra
  [A] mca_coll_han_allgather_intra
  [A] mca_coll_han_allgather_intra_dynamic
  [A] mca_coll_han_allgather_intra_simple
  [A] mca_coll_han_allgatherv_intra_dynamic
  [A] mca_coll_han_allreduce_intra
  [A] mca_coll_han_allreduce_intra_dynamic
  [A] mca_coll_han_allreduce_intra_simple
  [A] mca_coll_han_allreduce_reproducible
  [A] mca_coll_han_allreduce_reproducible_decision
  [A] mca_coll_han_bcast_intra
  [A] mca_coll_han_bcast_intra_dynamic
  [A] mca_coll_han_bcast_intra_simple
  [A] mca_coll_han_comm_create
  [A] mca_coll_han_comm_create_new
  [A] mca_coll_han_comm_query
  [A] mca_coll_han_component_name_to_id
  [A] mca_coll_han_dump_dynamic_rules
  [A] mca_coll_han_free_dynamic_rules
  [A] mca_coll_han_gather_intra
  [A] mca_coll_han_gather_intra_dynamic
  [A] mca_coll_han_gather_intra_simple
  [A] mca_coll_han_get_all_coll_modules
  [A] mca_coll_han_init_dynamic_rules
  [A] mca_coll_han_init_query
  [A] mca_coll_han_is_coll_dynamic_implemented
  [A] mca_coll_han_reduce_intra
  [A] mca_coll_han_reduce_intra_dynamic
  [A] mca_coll_han_reduce_intra_simple
  [A] mca_coll_han_reduce_reproducible
  [A] mca_coll_han_reduce_reproducible_decision
  [A] mca_coll_han_scatter_intra
  [A] mca_coll_han_scatter_intra_dynamic
  [A] mca_coll_han_topo_init
  [A] mca_coll_han_topo_lvl_to_str
  [A] mca_common_monitoring_add_procs
  [A] mca_common_monitoring_coll_a2a
  [A] mca_common_monitoring_coll_a2o
  [A] mca_common_monitoring_coll_cache_name
  [A] mca_common_monitoring_coll_finalize
  [A] mca_common_monitoring_coll_flush
  [A] mca_common_monitoring_coll_flush_all
  [A] mca_common_monitoring_coll_get_a2a_count
  [A] mca_common_monitoring_coll_get_a2a_size
  [A] mca_common_monitoring_coll_get_a2o_count
  [A] mca_common_monitoring_coll_get_a2o_size
  [A] mca_common_monitoring_coll_get_o2a_count
  [A] mca_common_monitoring_coll_get_o2a_size
  [A] mca_common_monitoring_coll_messages_notify
  [A] mca_common_monitoring_coll_new
  [A] mca_common_monitoring_coll_o2a
  [A] mca_common_monitoring_coll_release
  [A] mca_common_monitoring_coll_reset
  [A] mca_common_monitoring_finalize
  [A] mca_common_monitoring_init
  [A] mca_common_monitoring_record_coll
  [A] mca_common_monitoring_record_osc
  [A] mca_common_monitoring_record_pml
  [A] mca_common_monitoring_register
  [A] mca_common_ompio_alloc_buf
  [A] mca_common_ompio_buffer_alloc_fini
  [A] mca_common_ompio_buffer_alloc_init
  [A] mca_common_ompio_build_io_array
  [A] mca_common_ompio_cart_based_grouping
  [A] mca_common_ompio_create_groups
  [A] mca_common_ompio_create_incomplete_file_handle
  [A] mca_common_ompio_decode_datatype
  [A] mca_common_ompio_empty_print_queue
  [A] mca_common_ompio_file_close
  [A] mca_common_ompio_file_delete
  [A] mca_common_ompio_file_get_position
  [A] mca_common_ompio_file_get_size
  [A] mca_common_ompio_file_iread
  [A] mca_common_ompio_file_iread_all
  [A] mca_common_ompio_file_iread_at
  [A] mca_common_ompio_file_iread_at_all
  [A] mca_common_ompio_file_iwrite
  [A] mca_common_ompio_file_iwrite_all
  [A] mca_common_ompio_file_iwrite_at
  [A] mca_common_ompio_file_iwrite_at_all
  [A] mca_common_ompio_file_open
  [A] mca_common_ompio_file_read
  [A] mca_common_ompio_file_read_all
  [A] mca_common_ompio_file_read_at
  [A] mca_common_ompio_file_read_at_all
  [A] mca_common_ompio_file_write
  [A] mca_common_ompio_file_write_all
  [A] mca_common_ompio_file_write_at
  [A] mca_common_ompio_file_write_at_all
  [A] mca_common_ompio_finalize_initial_grouping
  [A] mca_common_ompio_finalize_split
  [A] mca_common_ompio_forced_grouping
  [A] mca_common_ompio_full_print_queue
  [A] mca_common_ompio_fview_based_grouping
  [A] mca_common_ompio_initialize_print_queue
  [A] mca_common_ompio_merge_groups
  [A] mca_common_ompio_merge_initial_groups
  [A] mca_common_ompio_prepare_to_group
  [A] mca_common_ompio_print_time_info
  [A] mca_common_ompio_progress
  [A] mca_common_ompio_register_print_entry
  [A] mca_common_ompio_register_progress
  [A] mca_common_ompio_release_buf
  [A] mca_common_ompio_request_alloc
  [A] mca_common_ompio_request_fini
  [A] mca_common_ompio_request_init
  [A] mca_common_ompio_retain_initial_groups
  [A] mca_common_ompio_set_aggregator_props
  [A] mca_common_ompio_set_callbacks
  [A] mca_common_ompio_set_explicit_offset
  [A] mca_common_ompio_set_file_defaults
  [A] mca_common_ompio_set_view
  [A] mca_common_ompio_simple_grouping
  [A] mca_common_ompio_split_a_group
  [A] mca_common_ompio_split_initial_groups
  [A] mca_common_ompio_unregister_print_entry
  [A] mca_fbtl_base_file_select
  [A] mca_fbtl_base_file_unselect
  [A] mca_fbtl_base_find_available
  [A] mca_fbtl_posix_component_file_query
  [A] mca_fbtl_posix_component_file_unquery
  [A] mca_fbtl_posix_component_init_query
  [A] mca_fbtl_posix_ipreadv
  [A] mca_fbtl_posix_ipwritev
  [A] mca_fbtl_posix_lock
  [A] mca_fbtl_posix_module_finalize
  [A] mca_fbtl_posix_module_init
  [A] mca_fbtl_posix_preadv
  [A] mca_fbtl_posix_progress
  [A] mca_fbtl_posix_pwritev
  [A] mca_fbtl_posix_request_free
  [A] mca_fbtl_posix_unlock
  [A] mca_fcoll_base_component_lookup
  [A] mca_fcoll_base_file_select
  [A] mca_fcoll_base_file_unselect
  [A] mca_fcoll_base_find_available
  [A] mca_fcoll_base_query_table
  [A] mca_fcoll_dynamic_component_file_query
  [A] mca_fcoll_dynamic_component_file_unquery
  [A] mca_fcoll_dynamic_component_init_query
  [A] mca_fcoll_dynamic_file_read_all
  [A] mca_fcoll_dynamic_file_write_all
  [A] mca_fcoll_dynamic_gen2_break_file_view
  [A] mca_fcoll_dynamic_gen2_component_file_query
  [A] mca_fcoll_dynamic_gen2_component_file_unquery
  [A] mca_fcoll_dynamic_gen2_component_init_query
  [A] mca_fcoll_dynamic_gen2_file_read_all
  [A] mca_fcoll_dynamic_gen2_file_write_all
  [A] mca_fcoll_dynamic_gen2_get_configuration
  [A] mca_fcoll_dynamic_gen2_module_finalize
  [A] mca_fcoll_dynamic_gen2_module_init
  [A] mca_fcoll_dynamic_gen2_split_iov_array
  [A] mca_fcoll_dynamic_module_finalize
  [A] mca_fcoll_dynamic_module_init
  [A] mca_fcoll_individual_component_file_query
  [A] mca_fcoll_individual_component_file_unquery
  [A] mca_fcoll_individual_component_init_query
  [A] mca_fcoll_individual_file_read_all
  [A] mca_fcoll_individual_file_write_all
  [A] mca_fcoll_individual_module_finalize
  [A] mca_fcoll_individual_module_init
  [A] mca_fcoll_two_phase_calc_aggregator
  [A] mca_fcoll_two_phase_calc_my_requests
  [A] mca_fcoll_two_phase_calc_others_requests
  [A] mca_fcoll_two_phase_component_file_query
  [A] mca_fcoll_two_phase_component_file_unquery
  [A] mca_fcoll_two_phase_component_init_query
  [A] mca_fcoll_two_phase_domain_partition
  [A] mca_fcoll_two_phase_file_read_all
  [A] mca_fcoll_two_phase_file_write_all
  [A] mca_fcoll_two_phase_module_finalize
  [A] mca_fcoll_two_phase_module_init
  [A] mca_fcoll_vulcan_break_file_view
  [A] mca_fcoll_vulcan_component_file_query
  [A] mca_fcoll_vulcan_component_file_unquery
  [A] mca_fcoll_vulcan_component_init_query
  [A] mca_fcoll_vulcan_file_read_all
  [A] mca_fcoll_vulcan_file_write_all
  [A] mca_fcoll_vulcan_get_configuration
  [A] mca_fcoll_vulcan_module_finalize
  [A] mca_fcoll_vulcan_module_init
  [A] mca_fcoll_vulcan_split_iov_array
  [A] mca_fs_base_file_close
  [A] mca_fs_base_file_delete
  [A] mca_fs_base_file_get_size
  [A] mca_fs_base_file_select
  [A] mca_fs_base_file_set_size
  [A] mca_fs_base_file_sync
  [A] mca_fs_base_file_unselect
  [A] mca_fs_base_find_available
  [A] mca_fs_base_get_file_amode
  [A] mca_fs_base_get_file_perm
  [A] mca_fs_base_get_fstype
  [A] mca_fs_base_get_mpi_err
  [A] mca_fs_base_get_parent_dir
  [A] mca_fs_ufs_component_file_query
  [A] mca_fs_ufs_component_file_unquery
  [A] mca_fs_ufs_component_init_query
  [A] mca_fs_ufs_file_open
  [A] mca_fs_ufs_module_finalize
  [A] mca_fs_ufs_module_init
  [A] mca_io_ompio_file_close
  [A] mca_io_ompio_file_get_amode
  [A] mca_io_ompio_file_get_atomicity
  [A] mca_io_ompio_file_get_byte_offset
  [A] mca_io_ompio_file_get_position
  [A] mca_io_ompio_file_get_position_shared
  [A] mca_io_ompio_file_get_size
  [A] mca_io_ompio_file_get_type_extent
  [A] mca_io_ompio_file_get_view
  [A] mca_io_ompio_file_iread
  [A] mca_io_ompio_file_iread_all
  [A] mca_io_ompio_file_iread_at
  [A] mca_io_ompio_file_iread_at_all
  [A] mca_io_ompio_file_iread_shared
  [A] mca_io_ompio_file_iwrite
  [A] mca_io_ompio_file_iwrite_all
  [A] mca_io_ompio_file_iwrite_at
  [A] mca_io_ompio_file_iwrite_at_all
  [A] mca_io_ompio_file_iwrite_shared
  [A] mca_io_ompio_file_open
  [A] mca_io_ompio_file_preallocate
  [A] mca_io_ompio_file_read
  [A] mca_io_ompio_file_read_all
  [A] mca_io_ompio_file_read_all_begin
  [A] mca_io_ompio_file_read_all_end
  [A] mca_io_ompio_file_read_at
  [A] mca_io_ompio_file_read_at_all
  [A] mca_io_ompio_file_read_at_all_begin
  [A] mca_io_ompio_file_read_at_all_end
  [A] mca_io_ompio_file_read_ordered
  [A] mca_io_ompio_file_read_ordered_begin
  [A] mca_io_ompio_file_read_ordered_end
  [A] mca_io_ompio_file_read_shared
  [A] mca_io_ompio_file_seek
  [A] mca_io_ompio_file_seek_shared
  [A] mca_io_ompio_file_set_atomicity
  [A] mca_io_ompio_file_set_size
  [A] mca_io_ompio_file_set_view
  [A] mca_io_ompio_file_sync
  [A] mca_io_ompio_file_write
  [A] mca_io_ompio_file_write_all
  [A] mca_io_ompio_file_write_all_begin
  [A] mca_io_ompio_file_write_all_end
  [A] mca_io_ompio_file_write_at
  [A] mca_io_ompio_file_write_at_all
  [A] mca_io_ompio_file_write_at_all_begin
  [A] mca_io_ompio_file_write_at_all_end
  [A] mca_io_ompio_file_write_ordered
  [A] mca_io_ompio_file_write_ordered_begin
  [A] mca_io_ompio_file_write_ordered_end
  [A] mca_io_ompio_file_write_shared
  [A] mca_io_ompio_get_mca_parameter_value
  [A] mca_io_romio321_file_close
  [A] mca_io_romio321_file_get_amode
  [A] mca_io_romio321_file_get_atomicity
  [A] mca_io_romio321_file_get_byte_offset
  [A] mca_io_romio321_file_get_info
  [A] mca_io_romio321_file_get_position
  [A] mca_io_romio321_file_get_position_shared
  [A] mca_io_romio321_file_get_size
  [A] mca_io_romio321_file_get_type_extent
  [A] mca_io_romio321_file_get_view
  [A] mca_io_romio321_file_iread
  [A] mca_io_romio321_file_iread_all
  [A] mca_io_romio321_file_iread_at
  [A] mca_io_romio321_file_iread_at_all
  [A] mca_io_romio321_file_iread_shared
  [A] mca_io_romio321_file_iwrite
  [A] mca_io_romio321_file_iwrite_all
  [A] mca_io_romio321_file_iwrite_at
  [A] mca_io_romio321_file_iwrite_at_all
  [A] mca_io_romio321_file_iwrite_shared
  [A] mca_io_romio321_file_open
  [A] mca_io_romio321_file_preallocate
  [A] mca_io_romio321_file_read
  [A] mca_io_romio321_file_read_all
  [A] mca_io_romio321_file_read_all_begin
  [A] mca_io_romio321_file_read_all_end
  [A] mca_io_romio321_file_read_at
  [A] mca_io_romio321_file_read_at_all
  [A] mca_io_romio321_file_read_at_all_begin
  [A] mca_io_romio321_file_read_at_all_end
  [A] mca_io_romio321_file_read_ordered
  [A] mca_io_romio321_file_read_ordered_begin
  [A] mca_io_romio321_file_read_ordered_end
  [A] mca_io_romio321_file_read_shared
  [A] mca_io_romio321_file_seek
  [A] mca_io_romio321_file_seek_shared
  [A] mca_io_romio321_file_set_atomicity
  [A] mca_io_romio321_file_set_info
  [A] mca_io_romio321_file_set_size
  [A] mca_io_romio321_file_set_view
  [A] mca_io_romio321_file_sync
  [A] mca_io_romio321_file_write
  [A] mca_io_romio321_file_write_all
  [A] mca_io_romio321_file_write_all_begin
  [A] mca_io_romio321_file_write_all_end
  [A] mca_io_romio321_file_write_at
  [A] mca_io_romio321_file_write_at_all
  [A] mca_io_romio321_file_write_at_all_begin
  [A] mca_io_romio321_file_write_at_all_end
  [A] mca_io_romio321_file_write_ordered
  [A] mca_io_romio321_file_write_ordered_begin
  [A] mca_io_romio321_file_write_ordered_end
  [A] mca_io_romio321_file_write_shared
  [A] mca_io_romio_dist_MPI_File_iread_all
  [A] mca_io_romio_dist_MPI_File_iread_at_all
  [A] mca_io_romio_dist_MPI_File_iwrite_all
  [A] mca_io_romio_dist_MPI_File_iwrite_at_all
  [A] mca_pml_ob1_dump_cant_match
  [A] mca_pml_ob1_enable_progress
  [A] mca_pml_ob1_improbe
  [A] mca_pml_ob1_imrecv
  [A] mca_pml_ob1_mprobe
  [A] mca_pml_ob1_mrecv
  [A] mca_pml_ob1_rdma_pipeline_btls_count
  [A] mca_sharedfp_base_file_select
  [A] mca_sharedfp_base_file_unselect
  [A] mca_sharedfp_base_find_available
  [A] mca_sharedfp_individual_assign_globaloffset
  [A] mca_sharedfp_individual_collaborate_data
  [A] mca_sharedfp_individual_component_file_query
  [A] mca_sharedfp_individual_component_file_unquery
  [A] mca_sharedfp_individual_component_init_query
  [A] mca_sharedfp_individual_create_buff
  [A] mca_sharedfp_individual_file_close
  [A] mca_sharedfp_individual_file_open
  [A] mca_sharedfp_individual_get_position
  [A] mca_sharedfp_individual_get_timestamps_and_reclengths
  [A] mca_sharedfp_individual_getoffset
  [A] mca_sharedfp_individual_gettime
  [A] mca_sharedfp_individual_insert_headnode
  [A] mca_sharedfp_individual_insert_metadata
  [A] mca_sharedfp_individual_iread
  [A] mca_sharedfp_individual_iwrite
  [A] mca_sharedfp_individual_module_finalize
  [A] mca_sharedfp_individual_module_init
  [A] mca_sharedfp_individual_read
  [A] mca_sharedfp_individual_read_ordered
  [A] mca_sharedfp_individual_read_ordered_begin
  [A] mca_sharedfp_individual_read_ordered_end
  [A] mca_sharedfp_individual_seek
  [A] mca_sharedfp_individual_sort_timestamps
  [A] mca_sharedfp_individual_write
  [A] mca_sharedfp_individual_write_metadata_file
  [A] mca_sharedfp_individual_write_ordered
  [A] mca_sharedfp_individual_write_ordered_begin
  [A] mca_sharedfp_individual_write_ordered_end
  [A] mca_sharedfp_lockedfile_component_file_query
  [A] mca_sharedfp_lockedfile_component_file_unquery
  [A] mca_sharedfp_lockedfile_component_init_query
  [A] mca_sharedfp_lockedfile_file_close
  [A] mca_sharedfp_lockedfile_file_open
  [A] mca_sharedfp_lockedfile_get_position
  [A] mca_sharedfp_lockedfile_iread
  [A] mca_sharedfp_lockedfile_iwrite
  [A] mca_sharedfp_lockedfile_module_finalize
  [A] mca_sharedfp_lockedfile_module_init
  [A] mca_sharedfp_lockedfile_read
  [A] mca_sharedfp_lockedfile_read_ordered
  [A] mca_sharedfp_lockedfile_read_ordered_begin
  [A] mca_sharedfp_lockedfile_read_ordered_end
  [A] mca_sharedfp_lockedfile_request_position
  [A] mca_sharedfp_lockedfile_seek
  [A] mca_sharedfp_lockedfile_write
  [A] mca_sharedfp_lockedfile_write_ordered
  [A] mca_sharedfp_lockedfile_write_ordered_begin
  [A] mca_sharedfp_lockedfile_write_ordered_end
  [A] mca_sharedfp_sm_component_file_query
  [A] mca_sharedfp_sm_component_file_unquery
  [A] mca_sharedfp_sm_component_init_query
  [A] mca_sharedfp_sm_file_close
  [A] mca_sharedfp_sm_file_open
  [A] mca_sharedfp_sm_get_position
  [A] mca_sharedfp_sm_iread
  [A] mca_sharedfp_sm_iwrite
  [A] mca_sharedfp_sm_module_finalize
  [A] mca_sharedfp_sm_module_init
  [A] mca_sharedfp_sm_read
  [A] mca_sharedfp_sm_read_ordered
  [A] mca_sharedfp_sm_read_ordered_begin
  [A] mca_sharedfp_sm_read_ordered_end
  [A] mca_sharedfp_sm_request_position
  [A] mca_sharedfp_sm_seek
  [A] mca_sharedfp_sm_write
  [A] mca_sharedfp_sm_write_ordered
  [A] mca_sharedfp_sm_write_ordered_begin
  [A] mca_sharedfp_sm_write_ordered_end
  [A] mca_topo_base_cart_map
  [A] mca_topo_base_dist_graph_create
  [A] mca_topo_base_dist_graph_create_adjacent
  [A] mca_topo_base_dist_graph_distribute
  [A] mca_topo_base_dist_graph_neighbors
  [A] mca_topo_base_dist_graph_neighbors_count
  [A] mca_topo_base_graph_map
  [A] mca_topo_base_lazy_init
  [A] mca_topo_base_neighbor_count
  [A] mca_topo_treematch_dist_graph_create
  [A] mca_vprotocol_base_set_include_list
  [A] memory_allocation
  [A] mpi_aint_add_f90
  [A] mpi_aint_add_f90_
  [A] mpi_aint_add_f90__
  [A] mpi_aint_diff_f90
  [A] mpi_aint_diff_f90_
  [A] mpi_aint_diff_f90__
  [A] mpiext_pcollreq_dummy
  [A] nb_leaves
  [A] nb_lines
  [A] nb_processing_units
  [A] new_affinity_mat
  [A] new_group_list
  [A] nextGain
  [A] next_bucket_elem
  [A] old_bucket_id
  [A] ompi_attr_get_aint
  [A] ompi_attr_get_fint
  [A] ompi_attr_set_aint
  [A] ompi_attr_set_fint
  [A] ompi_attr_set_int
  [A] ompi_coll_adapt_bcast
  [A] ompi_coll_adapt_comm_query
  [A] ompi_coll_adapt_ibcast
  [A] ompi_coll_adapt_ibcast_fini
  [A] ompi_coll_adapt_ibcast_register
  [A] ompi_coll_adapt_init_query
  [A] ompi_coll_adapt_ireduce
  [A] ompi_coll_adapt_ireduce_fini
  [A] ompi_coll_adapt_ireduce_register
  [A] ompi_coll_adapt_reduce
  [A] ompi_coll_adapt_request_free
  [A] ompi_coll_base_allgather_intra_basic_linear
  [A] ompi_coll_base_allgather_intra_bruck
  [A] ompi_coll_base_allgather_intra_neighborexchange
  [A] ompi_coll_base_allgather_intra_recursivedoubling
  [A] ompi_coll_base_allgather_intra_ring
  [A] ompi_coll_base_allgather_intra_two_procs
  [A] ompi_coll_base_allgatherv_intra_basic_default
  [A] ompi_coll_base_allgatherv_intra_bruck
  [A] ompi_coll_base_allgatherv_intra_neighborexchange
  [A] ompi_coll_base_allgatherv_intra_ring
  [A] ompi_coll_base_allgatherv_intra_two_procs
  [A] ompi_coll_base_allreduce_intra_basic_linear
  [A] ompi_coll_base_allreduce_intra_nonoverlapping
  [A] ompi_coll_base_allreduce_intra_recursivedoubling
  [A] ompi_coll_base_allreduce_intra_redscat_allgather
  [A] ompi_coll_base_allreduce_intra_ring
  [A] ompi_coll_base_allreduce_intra_ring_segmented
  [A] ompi_coll_base_alltoall_intra_basic_linear
  [A] ompi_coll_base_alltoall_intra_bruck
  [A] ompi_coll_base_alltoall_intra_linear_sync
  [A] ompi_coll_base_alltoall_intra_pairwise
  [A] ompi_coll_base_alltoall_intra_two_procs
  [A] ompi_coll_base_alltoallv_intra_basic_linear
  [A] ompi_coll_base_alltoallv_intra_pairwise
  [A] ompi_coll_base_barrier_intra_basic_linear
  [A] ompi_coll_base_barrier_intra_bruck
  [A] ompi_coll_base_barrier_intra_doublering
  [A] ompi_coll_base_barrier_intra_recursivedoubling
  [A] ompi_coll_base_barrier_intra_tree
  [A] ompi_coll_base_barrier_intra_two_procs
  [A] ompi_coll_base_bcast_intra_basic_linear
  [A] ompi_coll_base_bcast_intra_binomial
  [A] ompi_coll_base_bcast_intra_bintree
  [A] ompi_coll_base_bcast_intra_chain
  [A] ompi_coll_base_bcast_intra_generic
  [A] ompi_coll_base_bcast_intra_knomial
  [A] ompi_coll_base_bcast_intra_pipeline
  [A] ompi_coll_base_bcast_intra_scatter_allgather
  [A] ompi_coll_base_bcast_intra_scatter_allgather_ring
  [A] ompi_coll_base_bcast_intra_split_bintree
  [A] ompi_coll_base_comm_get_reqs
  [A] ompi_coll_base_exscan_intra_linear
  [A] ompi_coll_base_exscan_intra_recursivedoubling
  [A] ompi_coll_base_file_getnext_long
  [A] ompi_coll_base_file_getnext_size_t
  [A] ompi_coll_base_file_getnext_string
  [A] ompi_coll_base_file_peek_next_char_is
  [A] ompi_coll_base_gather_intra_basic_linear
  [A] ompi_coll_base_gather_intra_binomial
  [A] ompi_coll_base_gather_intra_linear_sync
  [A] ompi_coll_base_reduce_generic
  [A] ompi_coll_base_reduce_intra_basic_linear
  [A] ompi_coll_base_reduce_intra_binary
  [A] ompi_coll_base_reduce_intra_binomial
  [A] ompi_coll_base_reduce_intra_chain
  [A] ompi_coll_base_reduce_intra_in_order_binary
  [A] ompi_coll_base_reduce_intra_pipeline
  [A] ompi_coll_base_reduce_intra_redscat_gather
  [A] ompi_coll_base_reduce_scatter_block_basic_linear
  [A] ompi_coll_base_reduce_scatter_block_intra_butterfly
  [A] ompi_coll_base_reduce_scatter_block_intra_recursivedoubling
  [A] ompi_coll_base_reduce_scatter_block_intra_recursivehalving
  [A] ompi_coll_base_reduce_scatter_intra_basic_recursivehalving
  [A] ompi_coll_base_reduce_scatter_intra_butterfly
  [A] ompi_coll_base_reduce_scatter_intra_nonoverlapping
  [A] ompi_coll_base_reduce_scatter_intra_ring
  [A] ompi_coll_base_retain_datatypes
  [A] ompi_coll_base_retain_datatypes_w
  [A] ompi_coll_base_retain_op
  [A] ompi_coll_base_scan_intra_linear
  [A] ompi_coll_base_scan_intra_recursivedoubling
  [A] ompi_coll_base_scatter_intra_basic_linear
  [A] ompi_coll_base_scatter_intra_binomial
  [A] ompi_coll_base_scatter_intra_linear_nb
  [A] ompi_coll_base_sendrecv_actual
  [A] ompi_coll_base_topo_build_bmtree
  [A] ompi_coll_base_topo_build_chain
  [A] ompi_coll_base_topo_build_in_order_bintree
  [A] ompi_coll_base_topo_build_in_order_bmtree
  [A] ompi_coll_base_topo_build_kmtree
  [A] ompi_coll_base_topo_build_tree
  [A] ompi_coll_base_topo_destroy_tree
  [A] ompi_coll_base_topo_dump_tree
  [A] ompi_coll_han_reorder_gather
  [A] ompi_coll_libnbc_allgather_init
  [A] ompi_coll_libnbc_allgather_inter_init
  [A] ompi_coll_libnbc_allgatherv_init
  [A] ompi_coll_libnbc_allgatherv_inter_init
  [A] ompi_coll_libnbc_allreduce_init
  [A] ompi_coll_libnbc_allreduce_inter_init
  [A] ompi_coll_libnbc_alltoall_init
  [A] ompi_coll_libnbc_alltoall_inter_init
  [A] ompi_coll_libnbc_alltoallv_init
  [A] ompi_coll_libnbc_alltoallv_inter_init
  [A] ompi_coll_libnbc_alltoallw_init
  [A] ompi_coll_libnbc_alltoallw_inter_init
  [A] ompi_coll_libnbc_barrier_init
  [A] ompi_coll_libnbc_barrier_inter_init
  [A] ompi_coll_libnbc_bcast_init
  [A] ompi_coll_libnbc_bcast_inter_init
  [A] ompi_coll_libnbc_exscan_init
  [A] ompi_coll_libnbc_gather_init
  [A] ompi_coll_libnbc_gather_inter_init
  [A] ompi_coll_libnbc_gatherv_init
  [A] ompi_coll_libnbc_gatherv_inter_init
  [A] ompi_coll_libnbc_iallgather
  [A] ompi_coll_libnbc_iallgather_inter
  [A] ompi_coll_libnbc_iallgatherv
  [A] ompi_coll_libnbc_iallgatherv_inter
  [A] ompi_coll_libnbc_iallreduce
  [A] ompi_coll_libnbc_iallreduce_inter
  [A] ompi_coll_libnbc_ialltoall
  [A] ompi_coll_libnbc_ialltoall_inter
  [A] ompi_coll_libnbc_ialltoallv
  [A] ompi_coll_libnbc_ialltoallv_inter
  [A] ompi_coll_libnbc_ialltoallw
  [A] ompi_coll_libnbc_ialltoallw_inter
  [A] ompi_coll_libnbc_ibarrier
  [A] ompi_coll_libnbc_ibarrier_inter
  [A] ompi_coll_libnbc_ibcast
  [A] ompi_coll_libnbc_ibcast_inter
  [A] ompi_coll_libnbc_iexscan
  [A] ompi_coll_libnbc_igather
  [A] ompi_coll_libnbc_igather_inter
  [A] ompi_coll_libnbc_igatherv
  [A] ompi_coll_libnbc_igatherv_inter
  [A] ompi_coll_libnbc_ineighbor_allgather
  [A] ompi_coll_libnbc_ineighbor_allgatherv
  [A] ompi_coll_libnbc_ineighbor_alltoall
  [A] ompi_coll_libnbc_ineighbor_alltoallv
  [A] ompi_coll_libnbc_ineighbor_alltoallw
  [A] ompi_coll_libnbc_ireduce
  [A] ompi_coll_libnbc_ireduce_inter
  [A] ompi_coll_libnbc_ireduce_scatter
  [A] ompi_coll_libnbc_ireduce_scatter_block
  [A] ompi_coll_libnbc_ireduce_scatter_block_inter
  [A] ompi_coll_libnbc_ireduce_scatter_inter
  [A] ompi_coll_libnbc_iscan
  [A] ompi_coll_libnbc_iscatter
  [A] ompi_coll_libnbc_iscatter_inter
  [A] ompi_coll_libnbc_iscatterv
  [A] ompi_coll_libnbc_iscatterv_inter
  [A] ompi_coll_libnbc_neighbor_allgather_init
  [A] ompi_coll_libnbc_neighbor_allgatherv_init
  [A] ompi_coll_libnbc_neighbor_alltoall_init
  [A] ompi_coll_libnbc_neighbor_alltoallv_init
  [A] ompi_coll_libnbc_neighbor_alltoallw_init
  [A] ompi_coll_libnbc_progress
  [A] ompi_coll_libnbc_reduce_init
  [A] ompi_coll_libnbc_reduce_inter_init
  [A] ompi_coll_libnbc_reduce_scatter_block_init
  [A] ompi_coll_libnbc_reduce_scatter_block_inter_init
  [A] ompi_coll_libnbc_reduce_scatter_init
  [A] ompi_coll_libnbc_reduce_scatter_inter_init
  [A] ompi_coll_libnbc_scan_init
  [A] ompi_coll_libnbc_scatter_init
  [A] ompi_coll_libnbc_scatter_inter_init
  [A] ompi_coll_libnbc_scatterv_init
  [A] ompi_coll_libnbc_scatterv_inter_init
  [A] ompi_coll_tuned_exscan_intra_check_forced_init
  [A] ompi_coll_tuned_exscan_intra_dec_dynamic
  [A] ompi_coll_tuned_exscan_intra_do_this
  [A] ompi_coll_tuned_reduce_scatter_block_intra_check_forced_init
  [A] ompi_coll_tuned_reduce_scatter_block_intra_dec_dynamic
  [A] ompi_coll_tuned_reduce_scatter_block_intra_dec_fixed
  [A] ompi_coll_tuned_reduce_scatter_block_intra_do_this
  [A] ompi_coll_tuned_scan_intra_check_forced_init
  [A] ompi_coll_tuned_scan_intra_dec_dynamic
  [A] ompi_coll_tuned_scan_intra_do_this
  [A] ompi_comm_activate_nb
  [A] ompi_comm_allgather_pml
  [A] ompi_comm_allreduce_pml
  [A] ompi_comm_assert_subscribe
  [A] ompi_comm_bcast_pml
  [A] ompi_comm_create_group
  [A] ompi_comm_dup_fn_f, aliases mpi_comm_dup_fn, MPI_COMM_DUP_FN, mpi_comm_dup_fn_, mpi_comm_dup_fn__
  [A] ompi_comm_dup_with_info
  [A] ompi_comm_enable
  [A] ompi_comm_idup
  [A] ompi_comm_idup_with_info
  [A] ompi_comm_nextcid_nb
  [A] ompi_comm_null_copy_fn_f
  [A] ompi_comm_null_delete_fn_f, aliases mpi_comm_null_delete_fn__, MPI_COMM_NULL_DELETE_FN, mpi_comm_null_delete_fn
  [A] ompi_comm_request_fini
  [A] ompi_comm_request_get
  [A] ompi_comm_request_init
  [A] ompi_comm_request_return
  [A] ompi_comm_request_schedule_append
  [A] ompi_comm_request_start
  [A] ompi_comm_set_nb
  [A] ompi_comm_split_type
  [A] ompi_comm_split_with_info
  [A] ompi_crcp_base_none_quiesce_end
  [A] ompi_crcp_base_none_quiesce_start
  [A] ompi_crcp_base_quiesce_end
  [A] ompi_crcp_base_quiesce_start
  [A] ompi_datatype_create_darray
  [A] ompi_datatype_create_hindexed_block
  [A] ompi_datatype_create_subarray
  [A] ompi_datatype_destroy
  [A] ompi_datatype_duplicate
  [A] ompi_datatype_get_elements
  [A] ompi_datatype_pack_external
  [A] ompi_datatype_pack_external_size
  [A] ompi_datatype_unpack_external
  [A] ompi_dpm_close_port
  [A] ompi_dpm_connect_accept
  [A] ompi_dpm_disconnect
  [A] ompi_dpm_dyn_finalize
  [A] ompi_dpm_dyn_init
  [A] ompi_dpm_finalize
  [A] ompi_dpm_init
  [A] ompi_dpm_mark_dyncomm
  [A] ompi_dpm_open_port
  [A] ompi_dpm_spawn
  [A] ompi_dup_fn_f, aliases mpi_dup_fn_, mpi_dup_fn__
  [A] ompi_errhandler_callback
  [A] ompi_errhandler_registration_callback
  [A] ompi_fcoll_base_coll_allgather_array
  [A] ompi_fcoll_base_coll_allgatherv_array
  [A] ompi_fcoll_base_coll_bcast_array
  [A] ompi_fcoll_base_coll_gather_array
  [A] ompi_fcoll_base_coll_gatherv_array
  [A] ompi_fcoll_base_coll_scatterv_array
  [A] ompi_fcoll_base_sort_iovec
  [A] ompi_fortran_argv_blank_f2c
  [A] ompi_fortran_argv_count_f2c
  [A] ompi_group_allocate_plist_w_procs
  [A] ompi_group_compare
  [A] ompi_group_count_local_peers
  [A] ompi_group_get_proc_ptr_raw
  [A] ompi_group_have_remote_peers
  [A] ompi_hook_base_deregister_callbacks
  [A] ompi_hook_base_mpi_finalize_bottom
  [A] ompi_hook_base_mpi_finalize_top
  [A] ompi_hook_base_mpi_finalized_bottom
  [A] ompi_hook_base_mpi_finalized_top
  [A] ompi_hook_base_mpi_init_bottom
  [A] ompi_hook_base_mpi_init_error
  [A] ompi_hook_base_mpi_init_thread_bottom
  [A] ompi_hook_base_mpi_init_thread_top
  [A] ompi_hook_base_mpi_init_top
  [A] ompi_hook_base_mpi_init_top_post_opal
  [A] ompi_hook_base_mpi_initialized_bottom
  [A] ompi_hook_base_mpi_initialized_top
  [A] ompi_hook_base_register_callbacks
  [A] ompi_info_close_components
  [A] ompi_info_dup_mpistandard
  [A] ompi_info_get_nkeys
  [A] ompi_info_get_value_enum
  [A] ompi_info_register_framework_params
  [A] ompi_info_register_types
  [A] ompi_info_set_value_enum
  [A] ompi_info_show_ompi_version
  [A] ompi_interlib_declare
  [A] ompi_io_ompio_generate_current_file_view
  [A] ompi_io_ompio_sort_offlen
  [A] ompi_message_finalize
  [A] ompi_message_init
  [A] ompi_mirror_perm
  [A] ompi_mpi_dynamics_disable
  [A] ompi_mpi_dynamics_finalize
  [A] ompi_mpi_dynamics_is_enabled
  [A] ompi_mpi_thread_level
  [A] ompi_mpiext_fini
  [A] ompi_mpiext_init
  [A] ompi_mpiinfo_finalize
  [A] ompi_mpiinfo_init
  [A] ompi_mpit_lock
  [A] ompi_mpit_unlock
  [A] ompi_netpatterns_base_err
  [A] ompi_netpatterns_cleanup_narray_knomial_tree
  [A] ompi_netpatterns_cleanup_recursive_doubling_tree_node
  [A] ompi_netpatterns_cleanup_recursive_knomial_allgather_tree_node
  [A] ompi_netpatterns_cleanup_recursive_knomial_tree_node
  [A] ompi_netpatterns_init
  [A] ompi_netpatterns_register_mca_params
  [A] ompi_netpatterns_setup_multinomial_tree
  [A] ompi_netpatterns_setup_narray_knomial_tree
  [A] ompi_netpatterns_setup_narray_tree
  [A] ompi_netpatterns_setup_narray_tree_contigous_ranks
  [A] ompi_netpatterns_setup_recursive_doubling_n_tree_node
  [A] ompi_netpatterns_setup_recursive_doubling_tree_node
  [A] ompi_netpatterns_setup_recursive_knomial_allgather_tree_node
  [A] ompi_netpatterns_setup_recursive_knomial_tree_node
  [A] ompi_null_copy_fn_f, aliases mpi_null_copy_fn_, MPI_NULL_COPY_FN
  [A] ompi_null_delete_fn_f, aliases mpi_null_delete_fn__
  [A] ompi_op_set_java_callback
  [A] ompi_osc_base_sndrcv_op
  [A] ompi_osc_get_data_blocking
  [A] ompi_osc_module_add_peer
  [A] ompi_osc_pt2pt_accumulate
  [A] ompi_osc_pt2pt_attach
  [A] ompi_osc_pt2pt_compare_and_swap
  [A] ompi_osc_pt2pt_complete
  [A] ompi_osc_pt2pt_component_irecv
  [A] ompi_osc_pt2pt_control_send_unbuffered
  [A] ompi_osc_pt2pt_detach
  [A] ompi_osc_pt2pt_fence
  [A] ompi_osc_pt2pt_fetch_and_op
  [A] ompi_osc_pt2pt_flush
  [A] ompi_osc_pt2pt_flush_all
  [A] ompi_osc_pt2pt_flush_local
  [A] ompi_osc_pt2pt_flush_local_all
  [A] ompi_osc_pt2pt_frag_flush_all
  [A] ompi_osc_pt2pt_frag_flush_pending
  [A] ompi_osc_pt2pt_frag_flush_pending_all
  [A] ompi_osc_pt2pt_frag_flush_target
  [A] ompi_osc_pt2pt_frag_start
  [A] ompi_osc_pt2pt_frag_start_receive
  [A] ompi_osc_pt2pt_free
  [A] ompi_osc_pt2pt_get
  [A] ompi_osc_pt2pt_get_accumulate
  [A] ompi_osc_pt2pt_get_info
  [A] ompi_osc_pt2pt_irecv_w_cb
  [A] ompi_osc_pt2pt_isend_w_cb
  [A] ompi_osc_pt2pt_lock
  [A] ompi_osc_pt2pt_lock_all
  [A] ompi_osc_pt2pt_lock_remote
  [A] ompi_osc_pt2pt_post
  [A] ompi_osc_pt2pt_process_flush
  [A] ompi_osc_pt2pt_process_flush_ack
  [A] ompi_osc_pt2pt_process_lock
  [A] ompi_osc_pt2pt_process_lock_ack
  [A] ompi_osc_pt2pt_process_receive
  [A] ompi_osc_pt2pt_process_unlock
  [A] ompi_osc_pt2pt_process_unlock_ack
  [A] ompi_osc_pt2pt_progress_pending_acc
  [A] ompi_osc_pt2pt_put
  [A] ompi_osc_pt2pt_raccumulate
  [A] ompi_osc_pt2pt_rget
  [A] ompi_osc_pt2pt_rget_accumulate
  [A] ompi_osc_pt2pt_rput
  [A] ompi_osc_pt2pt_set_info
  [A] ompi_osc_pt2pt_start
  [A] ompi_osc_pt2pt_sync
  [A] ompi_osc_pt2pt_sync_allocate
  [A] ompi_osc_pt2pt_sync_pscw_peer
  [A] ompi_osc_pt2pt_sync_return
  [A] ompi_osc_pt2pt_test
  [A] ompi_osc_pt2pt_unlock
  [A] ompi_osc_pt2pt_unlock_all
  [A] ompi_osc_pt2pt_wait
  [A] ompi_osc_rdma_accumulate
  [A] ompi_osc_rdma_atomic_complete
  [A] ompi_osc_rdma_attach
  [A] ompi_osc_rdma_compare_and_swap
  [A] ompi_osc_rdma_complete_atomic
  [A] ompi_osc_rdma_demand_lock_peer
  [A] ompi_osc_rdma_detach
  [A] ompi_osc_rdma_fence_atomic
  [A] ompi_osc_rdma_fetch_and_op
  [A] ompi_osc_rdma_find_dynamic_region
  [A] ompi_osc_rdma_flush_all
  [A] ompi_osc_rdma_flush_local
  [A] ompi_osc_rdma_flush_local_all
  [A] ompi_osc_rdma_free
  [A] ompi_osc_rdma_get
  [A] ompi_osc_rdma_get_accumulate
  [A] ompi_osc_rdma_lock_all_atomic
  [A] ompi_osc_rdma_lock_atomic
  [A] ompi_osc_rdma_new_peer
  [A] ompi_osc_rdma_peer_btl_endpoint
  [A] ompi_osc_rdma_peer_lookup
  [A] ompi_osc_rdma_post_atomic
  [A] ompi_osc_rdma_put
  [A] ompi_osc_rdma_put_contig
  [A] ompi_osc_rdma_raccumulate
  [A] ompi_osc_rdma_rget
  [A] ompi_osc_rdma_rget_accumulate
  [A] ompi_osc_rdma_rput
  [A] ompi_osc_rdma_start_atomic
  [A] ompi_osc_rdma_sync
  [A] ompi_osc_rdma_sync_allocate
  [A] ompi_osc_rdma_sync_pscw_peer
  [A] ompi_osc_rdma_sync_return
  [A] ompi_osc_rdma_test_atomic
  [A] ompi_osc_rdma_unlock_all_atomic
  [A] ompi_osc_rdma_unlock_atomic
  [A] ompi_osc_rdma_wait_atomic
  [A] ompi_osc_sm_accumulate
  [A] ompi_osc_sm_attach
  [A] ompi_osc_sm_compare_and_swap
  [A] ompi_osc_sm_complete
  [A] ompi_osc_sm_detach
  [A] ompi_osc_sm_fence
  [A] ompi_osc_sm_fetch_and_op
  [A] ompi_osc_sm_flush
  [A] ompi_osc_sm_flush_all
  [A] ompi_osc_sm_flush_local
  [A] ompi_osc_sm_flush_local_all
  [A] ompi_osc_sm_free
  [A] ompi_osc_sm_get
  [A] ompi_osc_sm_get_accumulate
  [A] ompi_osc_sm_get_info
  [A] ompi_osc_sm_lock
  [A] ompi_osc_sm_lock_all
  [A] ompi_osc_sm_post
  [A] ompi_osc_sm_put
  [A] ompi_osc_sm_raccumulate
  [A] ompi_osc_sm_rget
  [A] ompi_osc_sm_rget_accumulate
  [A] ompi_osc_sm_rput
  [A] ompi_osc_sm_set_info
  [A] ompi_osc_sm_shared_query
  [A] ompi_osc_sm_start
  [A] ompi_osc_sm_sync
  [A] ompi_osc_sm_test
  [A] ompi_osc_sm_unlock
  [A] ompi_osc_sm_unlock_all
  [A] ompi_osc_sm_wait
  [A] ompi_pml_v_output_close
  [A] ompi_pml_v_output_open
  [A] ompi_proc_complete_init
  [A] ompi_proc_complete_init_single
  [A] ompi_proc_find_and_add
  [A] ompi_proc_for_name
  [A] ompi_proc_get_allocated
  [A] ompi_proc_lookup
  [A] ompi_proc_world_size
  [A] ompi_request_persistent_noop_create
  [A] ompi_rounddown
  [A] ompi_roundup_to_power_radix
  [A] ompi_rte_abort
  [A] ompi_rte_connect_accept_support
  [A] ompi_rte_wait_for_debugger
  [A] ompi_spc_cycles_to_usecs
  [A] ompi_spc_events_init
  [A] ompi_spc_fini
  [A] ompi_spc_init
  [A] ompi_spc_record
  [A] ompi_spc_timer_start
  [A] ompi_spc_timer_stop
  [A] ompi_spc_update_watermark
  [A] ompi_spc_user_or_mpi
  [A] ompi_type_dup_fn_f, aliases mpi_type_dup_fn, MPI_TYPE_DUP_FN
  [A] ompi_type_null_copy_fn_f
  [A] ompi_type_null_delete_fn_f, aliases mpi_type_null_delete_fn__, mpi_type_null_delete_fn
  [A] ompi_win_allocate
  [A] ompi_win_allocate_shared
  [A] ompi_win_create_dynamic
  [A] ompi_win_dup_fn_f, aliases mpi_win_dup_fn, mpi_win_dup_fn__, mpi_win_dup_fn_, MPI_WIN_DUP_FN
  [A] ompi_win_null_copy_fn_f
  [A] ompi_win_null_delete_fn_f, aliases MPI_WIN_NULL_DELETE_FN, mpi_win_null_delete_fn__
  [A] ompit_opal_to_mpit_error
  [A] ompit_var_type_to_datatype
  [A] optimize_arity
  [A] osc_pt2pt_incoming_complete
  [A] osc_pt2pt_incoming_post
  [A] partial_aggregate_aff_mat
  [A] partial_sort
  [A] partial_update_val
  [A] print_1D_tab
  [A] recurs_select_independent_groups
  [A] select_independent_groups
  [A] select_independent_groups_by_largest_index
  [A] select_max
  [A] set_deb_tab_child
  [A] set_node
  [A] split_com_mat
  [A] split_constraints
  [A] split_vertices
  [A] submit_work
  [A] super_fast_grouping
  [A] symetric
  [A] tab_cmp
  [A] terminate_thread_pool
  [A] test_independent_groups
  [A] test_main
  [A] tgt_to_tm
  [A] time_diff
  [A] tm_build_affinity_mat
  [A] tm_build_synthetic_topology
  [A] tm_build_tree_from_topology
  [A] tm_calloc
  [A] tm_close_verbose_file
  [A] tm_compute_mapping
  [A] tm_display_arity
  [A] tm_display_other_heuristics
  [A] tm_display_solution
  [A] tm_display_topology
  [A] tm_enable_oversubscribing
  [A] tm_finalize
  [A] tm_free
  [A] tm_free_affinity_mat
  [A] tm_free_solution
  [A] tm_free_topology
  [A] tm_free_tree
  [A] tm_get_exhaustive_search_flag
  [A] tm_get_verbose_level
  [A] tm_get_verbose_output
  [A] tm_load_aff_mat
  [A] tm_load_topology
  [A] tm_malloc
  [A] tm_mem_check
  [A] tm_open_verbose_file
  [A] tm_optimize_topology
  [A] tm_realloc
  [A] tm_set_exhaustive_search_flag
  [A] tm_set_max_nb_threads
  [A] tm_set_verbose_level
  [A] tm_topology_add_binding_constraints
  [A] tm_topology_set_binding_constraints
  [A] topo_nb_proc
  [A] topology_arity_cpy
  [A] topology_constraints_cpy
  [A] topology_cost_cpy
  [A] topology_numbering_cpy
  [A] topology_to_arch
  [A] try_add_edge
  [A] two_phase_heap_merge
  [A] update_comm_speed
  [A] update_val
  [A] wait_work_completion
  [A] weighted_degree_asc
  [A] weighted_degree_dsc

295 Added variable symbols not referenced by debug info:

  [A] NBC_Schedule_class
  [A] _dict_free
  [A] _dict_malloc
  [A] adapt_topology_cache_item_t_class
  [A] available_components
  [A] common_monitoring_translation_ht
  [A] fbtl_posix_max_aio_active_reqs
  [A] gpfsmpio_onesided_always_rmw
  [A] gpfsmpio_onesided_no_rmw
  [A] gpfsmpio_read_aggmethod
  [A] gpfsmpio_write_aggmethod
  [A] libnbc_iallgather_algorithm
  [A] libnbc_iallreduce_algorithm
  [A] libnbc_ibcast_algorithm
  [A] libnbc_ibcast_knomial_radix
  [A] libnbc_ibcast_skip_dt_decision
  [A] libnbc_iexscan_algorithm
  [A] libnbc_ireduce_algorithm
  [A] libnbc_iscan_algorithm
  [A] mca_bml_lock
  [A] mca_coll_adapt_component
  [A] mca_coll_adapt_component_version_string
  [A] mca_coll_adapt_module_t_class
  [A] mca_coll_base_avail_coll_t_class
  [A] mca_coll_base_comm_t_class
  [A] mca_coll_han_component
  [A] mca_coll_han_component_version_string
  [A] mca_coll_han_module_t_class
  [A] mca_coll_libnbc_component
  [A] mca_coll_libnbc_component_version_string
  [A] mca_coll_task_t_class
  [A] mca_common_monitoring_current_state
  [A] mca_common_monitoring_enabled
  [A] mca_common_monitoring_output_stream_id
  [A] mca_common_ompio_pending_requests
  [A] mca_common_ompio_progress_is_registered
  [A] mca_fbtl
  [A] mca_fbtl_base_selected_component
  [A] mca_fbtl_base_static_components
  [A] mca_fbtl_posix_component
  [A] mca_fbtl_posix_component_version_string
  [A] mca_fbtl_posix_max_block_size
  [A] mca_fbtl_posix_max_gap_size
  [A] mca_fbtl_posix_max_tmpbuf_size
  [A] mca_fbtl_posix_priority
  [A] mca_fbtl_posix_read_datasieving
  [A] mca_fbtl_posix_write_datasieving
  [A] mca_fcoll_base_static_components
  [A] mca_fcoll_dynamic_component
  [A] mca_fcoll_dynamic_component_version_string
  [A] mca_fcoll_dynamic_gen2_component
  [A] mca_fcoll_dynamic_gen2_component_version_string
  [A] mca_fcoll_dynamic_gen2_num_groups
  [A] mca_fcoll_dynamic_gen2_priority
  [A] mca_fcoll_dynamic_priority
  [A] mca_fcoll_individual_component
  [A] mca_fcoll_individual_component_version_string
  [A] mca_fcoll_individual_priority
  [A] mca_fcoll_two_phase_component
  [A] mca_fcoll_two_phase_component_version_string
  [A] mca_fcoll_two_phase_priority
  [A] mca_fcoll_vulcan_async_io
  [A] mca_fcoll_vulcan_component
  [A] mca_fcoll_vulcan_component_version_string
  [A] mca_fcoll_vulcan_num_groups
  [A] mca_fcoll_vulcan_priority
  [A] mca_fcoll_vulcan_write_chunksize
  [A] mca_fs_base_static_components
  [A] mca_fs_ufs_component
  [A] mca_fs_ufs_component_version_string
  [A] mca_fs_ufs_lock_algorithm
  [A] mca_fs_ufs_priority
  [A] mca_hook_base_static_components
  [A] mca_io_ompio_aggregators_cutoff_threshold
  [A] mca_io_ompio_bytes_per_agg
  [A] mca_io_ompio_coll_timing_info
  [A] mca_io_ompio_component
  [A] mca_io_ompio_component_version_string
  [A] mca_io_ompio_cycle_buffer_size
  [A] mca_io_ompio_grouping_option
  [A] mca_io_ompio_max_aggregators_ratio
  [A] mca_io_ompio_module
  [A] mca_io_ompio_mutex
  [A] mca_io_ompio_num_aggregators
  [A] mca_io_ompio_overwrite_amode
  [A] mca_io_ompio_record_offset_info
  [A] mca_io_ompio_verbose_info_parsing
  [A] mca_io_romio321_component
  [A] mca_io_romio321_component_version_string
  [A] mca_io_romio321_module
  [A] mca_io_romio321_mutex
  [A] mca_monitoring_coll_data_t_class
  [A] mca_ompio_request_t_class
  [A] mca_op_avx_component
  [A] mca_osc_sm_component
  [A] mca_pml_bsend_addr
  [A] mca_pml_bsend_base
  [A] mca_pml_bsend_userbase
  [A] mca_pml_ob1_comm_proc_t_class
  [A] mca_pml_ob1_matching_protection
  [A] mca_pml_ob1_output
  [A] mca_pml_ob1_recvreq
  [A] mca_pml_ob1_sendreq
  [A] mca_rte_base_static_components
  [A] mca_rte_orte_component
  [A] mca_sharedfp
  [A] mca_sharedfp_base_static_components
  [A] mca_sharedfp_individual_component
  [A] mca_sharedfp_individual_component_version_string
  [A] mca_sharedfp_individual_priority
  [A] mca_sharedfp_individual_usage_counter
  [A] mca_sharedfp_individual_verbose
  [A] mca_sharedfp_lockedfile_component
  [A] mca_sharedfp_lockedfile_component_version_string
  [A] mca_sharedfp_lockedfile_priority
  [A] mca_sharedfp_lockedfile_verbose
  [A] mca_sharedfp_sm_component
  [A] mca_sharedfp_sm_component_version_string
  [A] mca_sharedfp_sm_priority
  [A] mca_sharedfp_sm_verbose
  [A] mca_topo_base_comm_cart_2_2_0_t_class
  [A] mca_topo_base_comm_dist_graph_2_2_0_t_class
  [A] mca_topo_base_comm_graph_2_2_0_t_class
  [A] mca_topo_base_module_t_class
  [A] mca_topo_basic_component
  [A] mca_topo_basic_component_version_string
  [A] mca_topo_treematch_component
  [A] mca_topo_treematch_component_version_string
  [A] mca_topo_treematch_module_t_class
  [A] mpi_fortran_unweighted_
  [A] mpi_fortran_weights_empty_
  [A] ompi_add_procs_cutoff
  [A] ompi_async_mpi_finalize
  [A] ompi_async_mpi_init
  [A] ompi_bml_base_framework
  [A] ompi_coll_adapt_bcast_context_t_class
  [A] ompi_coll_adapt_constant_bcast_context_t_class
  [A] ompi_coll_adapt_constant_reduce_context_t_class
  [A] ompi_coll_adapt_inbuf_t_class
  [A] ompi_coll_adapt_item_t_class
  [A] ompi_coll_adapt_reduce_context_t_class
  [A] ompi_coll_base_framework
  [A] ompi_coll_base_nbc_request_t_class
  [A] ompi_coll_libnbc_module_t_class
  [A] ompi_coll_libnbc_request_t_class
  [A] ompi_coll_self_priority
  [A] ompi_coll_tuned_alltoall_intermediate_msg
  [A] ompi_coll_tuned_alltoall_large_msg
  [A] ompi_coll_tuned_alltoall_max_requests
  [A] ompi_coll_tuned_alltoall_min_procs
  [A] ompi_coll_tuned_alltoall_small_msg
  [A] ompi_coll_tuned_scatter_blocking_send_ratio
  [A] ompi_coll_tuned_scatter_intermediate_msg
  [A] ompi_coll_tuned_scatter_large_msg
  [A] ompi_coll_tuned_scatter_min_procs
  [A] ompi_comm_allreduce_context_t_class
  [A] ompi_comm_cid_context_t_class
  [A] ompi_comm_f_to_c_table
  [A] ompi_comm_idup_with_info_context_t_class
  [A] ompi_comm_request_initialized
  [A] ompi_comm_request_item_t_class
  [A] ompi_comm_request_progress_active
  [A] ompi_comm_request_t_class
  [A] ompi_cr_verbosity
  [A] ompi_crcp_base_framework
  [A] ompi_enable_timing
  [A] ompi_fbtl_base_framework
  [A] ompi_fcoll_base_framework
  [A] ompi_fs_base_framework
  [A] ompi_hook_base_framework
  [A] ompi_info_type_base
  [A] ompi_info_type_ompi
  [A] ompi_io_base_framework
  [A] ompi_message_f_to_c_table
  [A] ompi_message_free_list
  [A] ompi_message_no_proc
  [A] ompi_message_null
  [A] ompi_message_t_class
  [A] ompi_mpi_2dblprec_addr
  [A] ompi_mpi_2integer_addr
  [A] ompi_mpi_2real_addr
  [A] ompi_mpi_character_addr
  [A] ompi_mpi_comm_null_addr
  [A] ompi_mpi_comm_self_addr
  [A] ompi_mpi_comm_world_addr
  [A] ompi_mpi_complex16_addr
  [A] ompi_mpi_complex32_addr
  [A] ompi_mpi_complex8_addr
  [A] ompi_mpi_count
  [A] ompi_mpi_cplex_addr
  [A] ompi_mpi_dblcplex_addr
  [A] ompi_mpi_dblprec_addr
  [A] ompi_mpi_dynamics_enabled
  [A] ompi_mpi_errhandler_null_addr
  [A] ompi_mpi_errors_are_fatal_addr
  [A] ompi_mpi_errors_return_addr
  [A] ompi_mpi_errors_throw_exceptions_addr
  [A] ompi_mpi_event_tick_rate
  [A] ompi_mpi_file_bootstrap_mutex
  [A] ompi_mpi_file_null_addr
  [A] ompi_mpi_group_empty_addr
  [A] ompi_mpi_group_null_addr
  [A] ompi_mpi_have_sparse_group_storage
  [A] ompi_mpi_info_env
  [A] ompi_mpi_info_null_addr
  [A] ompi_mpi_integer16_addr
  [A] ompi_mpi_integer1_addr
  [A] ompi_mpi_integer2_addr
  [A] ompi_mpi_integer4_addr
  [A] ompi_mpi_integer8_addr
  [A] ompi_mpi_integer_addr
  [A] ompi_mpi_logical1_addr
  [A] ompi_mpi_logical2_addr
  [A] ompi_mpi_logical4_addr
  [A] ompi_mpi_logical8_addr
  [A] ompi_mpi_logical_addr
  [A] ompi_mpi_ompio_bootstrap_mutex
  [A] ompi_mpi_op_band_addr
  [A] ompi_mpi_op_bor_addr
  [A] ompi_mpi_op_bxor_addr
  [A] ompi_mpi_op_land_addr
  [A] ompi_mpi_op_lor_addr
  [A] ompi_mpi_op_lxor_addr
  [A] ompi_mpi_op_max_addr
  [A] ompi_mpi_op_maxloc_addr
  [A] ompi_mpi_op_min_addr
  [A] ompi_mpi_op_minloc_addr
  [A] ompi_mpi_op_no_op
  [A] ompi_mpi_op_no_op_addr
  [A] ompi_mpi_op_null_addr
  [A] ompi_mpi_op_prod_addr
  [A] ompi_mpi_op_replace_addr
  [A] ompi_mpi_op_sum_addr
  [A] ompi_mpi_preconnect_mpi
  [A] ompi_mpi_real16_addr
  [A] ompi_mpi_real4_addr
  [A] ompi_mpi_real8_addr
  [A] ompi_mpi_real_addr
  [A] ompi_mpi_show_mca_params_string
  [A] ompi_mpi_spc_attach_string
  [A] ompi_mpi_spc_dump_enabled
  [A] ompi_mpi_state
  [A] ompi_mpi_status_ignore_addr
  [A] ompi_mpi_statuses_ignore_addr
  [A] ompi_mpi_win_null_addr
  [A] ompi_mpi_yield_when_idle
  [A] ompi_mpiext_components
  [A] ompi_mpit_big_lock
  [A] ompi_mpit_init_count
  [A] ompi_mtl_base_framework
  [A] ompi_namelist_t_class
  [A] ompi_netpatterns_base_verbose
  [A] ompi_op_avx_3buff_functions_avx
  [A] ompi_op_avx_3buff_functions_avx2
  [A] ompi_op_avx_3buff_functions_avx512
  [A] ompi_op_avx_functions_avx
  [A] ompi_op_avx_functions_avx2
  [A] ompi_op_avx_functions_avx512
  [A] ompi_op_base_framework
  [A] ompi_osc_base_framework
  [A] ompi_osc_pt2pt_ddt_buffer_t_class
  [A] ompi_osc_pt2pt_frag_t_class
  [A] ompi_osc_pt2pt_no_locks
  [A] ompi_osc_pt2pt_peer_t_class
  [A] ompi_osc_pt2pt_pending_t_class
  [A] ompi_osc_pt2pt_receive_t_class
  [A] ompi_osc_pt2pt_request_t_class
  [A] ompi_osc_pt2pt_sync_t_class
  [A] ompi_osc_rdma_attachment_t_class
  [A] ompi_osc_rdma_frag_t_class
  [A] ompi_osc_rdma_handle_t_class
  [A] ompi_osc_rdma_module_rdma_template
  [A] ompi_osc_rdma_peer_basic_t_class
  [A] ompi_osc_rdma_peer_dynamic_t_class
  [A] ompi_osc_rdma_peer_extended_t_class
  [A] ompi_osc_rdma_peer_t_class
  [A] ompi_osc_rdma_pending_op_t_class
  [A] ompi_osc_rdma_request_t_class
  [A] ompi_osc_rdma_sync_t_class
  [A] ompi_osc_sm_module_template
  [A] ompi_pml_base_bsend_allocator_name
  [A] ompi_pml_base_framework
  [A] ompi_proc_list
  [A] ompi_request_null_addr
  [A] ompi_rte_base_framework
  [A] ompi_rte_initialized
  [A] ompi_rte_orte_component_version_string
  [A] ompi_sharedfp_base_framework
  [A] ompi_topo_base_framework
  [A] ompi_vprotocol_base_framework
  [A] ompi_win_accumulate_ops
  [A] ompi_win_accumulate_order
  [A] ompi_wtime_time_origin
  [A] osc_pt2pt_accumulate_data_t_class
  [A] osc_pt2pt_pending_acc_t_class

